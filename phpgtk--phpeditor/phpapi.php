<?php
/*This Api file was generated with the compressor option the Friday 10th of July 2009 10:41:34 PM
With the Api Generator v.0,1 by Mte90 - www.mte90.net*/ 
$funclist[0]="abs";$funcdest[0]="abs(mixed number)<&%>Absolute value (mixed)";$funclist[1]="acos";$funcdest[1]="acos(float arg)<&%>Arc cosine (float)";$funclist[2]="acosh";$funcdest[2]="acosh(float arg)<&%>Inverse hyperbolic cosine (float)";$funclist[3]="addcslashes";$funcdest[3]="addcslashes(string str, string charlist)<&%>Quote string with slashes in a C style (string)";$funclist[4]="addslashes";$funcdest[4]="addslashes(string str)<&%>Quote string with slashes (string)";$funclist[5]="aggregate";$funcdest[5]="aggregate(object object, string class_name)<&%>dynamic class and object aggregation of methods and properties (void)";$funclist[6]="aggregate_info";$funcdest[6]="aggregate_info(object object)<&%>returns an associative array of the methods and properties from each class that has been aggregated to the object. (array)";$funclist[7]="aggregate_methods";$funcdest[7]="aggregate_methods(object object, string class_name)<&%>dynamic class and object aggregation of methods (void)";$funclist[8]="aggregate_methods_by_list";$funcdest[8]="aggregate_methods_by_list(object object, string class_name, array methods_list [, bool exclude])<&%>selective dynamic class methods aggregation to an object (void)";$funclist[9]="aggregate_methods_by_regexp";$funcdest[9]="aggregate_methods_by_regexp(object object, string class_name, string regexp [, bool exclude])<&%>selective class methods aggregation to an object using a regular expression (void)";$funclist[10]="aggregate_properties";$funcdest[10]="aggregate_properties(object object, string class_name)<&%>dynamic aggregation of  class properties to an object (void)";$funclist[11]="aggregate_properties_by_list";$funcdest[11]="aggregate_properties_by_list(object object, string class_name, array properties_list [, bool exclude])<&%>selective dynamic class properties aggregation to an object (void)";$funclist[12]="aggregate_properties_by_regexp";$funcdest[12]="aggregate_properties_by_regexp(object object, string class_name, string regexp [, bool exclude])<&%>selective class properties aggregation to an object using a regular expression (void)";$funclist[13]="aggregation_info";$funcdest[13]="aggregation_info(?)<&%>Alias for aggregate_info()<&%>(?)";$funclist[14]="apache_child_terminate";$funcdest[14]="apache_child_terminate(void)<&%>Terminate apache process after this request (bool)";$funclist[15]="apache_lookup_uri";$funcdest[15]="apache_lookup_uri(string filename)<&%>Perform a partial request for the specified URI and return all info about it (object)";$funclist[16]="apache_note";$funcdest[16]="apache_note(string note_name [, string note_value])<&%>Get and set apache request notes (string)";$funclist[17]="apache_request_headers";$funcdest[17]="apache_request_headers(void)<&%>Fetch all HTTP request headers (array)";$funclist[18]="apache_response_headers";$funcdest[18]="apache_response_headers(void)<&%>Fetch all HTTP response headers (array)";$funclist[19]="apache_setenv";$funcdest[19]="apache_setenv(string variable, string value [, bool walk_to_top])<&%>Set an Apache subprocess_env variable (int)";$funclist[20]="array";$funcdest[20]="array([mixed ...])<&%>Create an array (array)";$funclist[21]="array_change_key_case";$funcdest[21]="array_change_key_case(array input [, int case])<&%>Returns an array with all string keys lowercased or uppercased (array)";$funclist[22]="array_chunk";$funcdest[22]="array_chunk(array input, int size [, bool preserve_keys])<&%>Split an array into chunks (array)";$funclist[23]="array_count_values";$funcdest[23]="array_count_values(array input)<&%>Counts all the values of an array (array)";$funclist[24]="array_diff";$funcdest[24]="array_diff(array array1, array array2 [, array ...])<&%>Computes the difference of arrays (array)";$funclist[25]="array_diff_assoc";$funcdest[25]="array_diff_assoc(array array1, array array2 [, array ...])<&%>Computes the difference of arrays with additional index check (array)";$funclist[26]="array_fill";$funcdest[26]="array_fill(int start_index, int num, mixed value)<&%>Fill an array with values (array)";$funclist[27]="array_filter";$funcdest[27]="array_filter(array input [, callback function])<&%>Filters elements of an array using a callback function (array)";$funclist[28]="array_flip";$funcdest[28]="array_flip(array trans)<&%>Exchanges all keys with their associated values in an array (array)";$funclist[29]="array_intersect";$funcdest[29]="array_intersect(array array1, array array2 [, array ...])<&%>Computes the intersection of arrays (array)";$funclist[30]="array_intersect_assoc";$funcdest[30]="array_intersect_assoc(array array1, array array2 [, array ...])<&%>Computes the intersection of arrays with additional index check (array)";$funclist[31]="array_key_exists";$funcdest[31]="array_key_exists(mixed key, array search)<&%>Checks if the given key or index exists in the array (bool)";$funclist[32]="array_keys";$funcdest[32]="array_keys(array input [, mixed search_value])<&%>Return all the keys of an array (array)";$funclist[33]="array_map";$funcdest[33]="array_map(mixed callback, array arr1 [, array ...])<&%>Applies the callback to the elements of the given arrays (array)";$funclist[34]="array_merge";$funcdest[34]="array_merge(array array1, array array2 [, array ...])<&%>Merge two or more arrays (array)";$funclist[35]="array_merge_recursive";$funcdest[35]="array_merge_recursive(array array1, array array2 [, array ...])<&%>Merge two or more arrays recursively (array)";$funclist[36]="array_multisort";$funcdest[36]="array_multisort(array ar1 [, mixed arg [, mixed ... [, array ...]]])<&%>Sort multiple or multi-dimensional arrays (bool)";$funclist[37]="array_pad";$funcdest[37]="array_pad(array input, int pad_size, mixed pad_value)<&%>Pad array to the specified length with a value (array)";$funclist[38]="array_pop";$funcdest[38]="array_pop(array array)<&%>Pop the element off the end of array (mixed)";$funclist[39]="array_push";$funcdest[39]="array_push(array array, mixed var [, mixed ...])<&%>Push one or more elements onto the end of array (int)";$funclist[40]="array_rand";$funcdest[40]="array_rand(array input [, int num_req])<&%>Pick one or more random entries out of an array (mixed)";$funclist[41]="array_reduce";$funcdest[41]="array_reduce(array input, callback function [, int initial])<&%>Iteratively reduce the array to a single value using a callback function (mixed)";$funclist[42]="array_reverse";$funcdest[42]="array_reverse(array array [, bool preserve_keys])<&%>Return an array with elements in reverse order (array)";$funclist[43]="array_search";$funcdest[43]="array_search(mixed needle, array haystack [, bool strict])<&%>Searches the array for a given value and returns the corresponding key if successful (mixed)";$funclist[44]="array_shift";$funcdest[44]="array_shift(array array)<&%>Shift an element off the beginning of array (mixed)";$funclist[45]="array_slice";$funcdest[45]="array_slice(array array, int offset [, int length])<&%>Extract a slice of the array (array)";$funclist[46]="array_splice";$funcdest[46]="array_splice(array input, int offset [, int length [, array replacement]])<&%>Remove a portion of the array and replace it with something else (array)";$funclist[47]="array_sum";$funcdest[47]="array_sum(array array)<&%>Calculate the sum of values in an array. (mixed)";$funclist[48]="array_unique";$funcdest[48]="array_unique(array array)<&%>Removes duplicate values from an array (array)";$funclist[49]="array_unshift";$funcdest[49]="array_unshift(array array, mixed var [, mixed ...])<&%>Prepend one or more elements to the beginning of array (int)";$funclist[50]="array_values";$funcdest[50]="array_values(array input)<&%>Return all the values of an array (array)";$funclist[51]="array_walk";$funcdest[51]="array_walk(array array, callback function [, mixed userdata])<&%>Apply a user function to every member of an array (int)";$funclist[52]="arsort";$funcdest[52]="arsort(array array [, int sort_flags])<&%>Sort an array in reverse order and maintain index association (void)";$funclist[53]="ascii2ebcdic";$funcdest[53]="ascii2ebcdic(string ascii_str)<&%>Translate string from ASCII to EBCDIC (int)";$funclist[54]="asin";$funcdest[54]="asin(float arg)<&%>Arc sine (float)";$funclist[55]="asinh";$funcdest[55]="asinh(float arg)<&%>Inverse hyperbolic sine (float)";$funclist[56]="asort";$funcdest[56]="asort(array array [, int sort_flags])<&%>Sort an array and maintain index association (void)";$funclist[57]="aspell_check";$funcdest[57]="aspell_check(int dictionary_link, string word)<&%>Check a word [deprecated] (bool)";$funclist[58]="aspell_check_raw";$funcdest[58]="aspell_check_raw(int dictionary_link, string word)<&%>Check a word without changing its case or trying to trim it [deprecated] (bool)";$funclist[59]="aspell_new";$funcdest[59]="aspell_new(string master [, string personal])<&%>Load a new dictionary [deprecated] (int)";$funclist[60]="aspell_suggest";$funcdest[60]="aspell_suggest(int dictionary_link, string word)<&%>Suggest spellings of a word [deprecated] (array)";$funclist[61]="assert";$funcdest[61]="assert(mixed assertion)<&%>Checks if assertion is FALSE (int)";$funclist[62]="assert_options";$funcdest[62]="assert_options(int what [, mixed value])<&%>Set/get the various assert flags (mixed)";$funclist[63]="atan";$funcdest[63]="atan(float arg)<&%>Arc tangent (float)";$funclist[64]="atan2";$funcdest[64]="atan2(float y, float x)<&%>arc tangent of two variables (float)";$funclist[65]="atanh";$funcdest[65]="atanh(float arg)<&%>Inverse hyperbolic tangent (float)";$funclist[66]="base64_decode";$funcdest[66]="base64_decode(string encoded_data)<&%>Decodes data encoded with MIME base64 (string)";$funclist[67]="base64_encode";$funcdest[67]="base64_encode(string data)<&%>Encodes data with MIME base64 (string)";$funclist[68]="base_convert";$funcdest[68]="base_convert(string number, int frombase, int tobase)<&%>Convert a number between arbitrary bases (string)";$funclist[69]="basename";$funcdest[69]="basename(string path [, string suffix])<&%>Returns filename component of path (string)";$funclist[70]="bcadd";$funcdest[70]="bcadd(string left_operand, string right_operand [, int scale])<&%>Add two arbitrary precision numbers (string)";$funclist[71]="bccomp";$funcdest[71]="bccomp(string left_operand, string right_operand [, int scale])<&%>Compare two arbitrary precision numbers (int)";$funclist[72]="bcdiv";$funcdest[72]="bcdiv(string left_operand, string right_operand [, int scale])<&%>Divide two arbitrary precision numbers (string)";$funclist[73]="bcmod";$funcdest[73]="bcmod(string left_operand, string modulus)<&%>Get modulus of an arbitrary precision number (string)";$funclist[74]="bcmul";$funcdest[74]="bcmul(string left_operand, string right_operand [, int scale])<&%>Multiply two arbitrary precision number (string)";$funclist[75]="bcpow";$funcdest[75]="bcpow(string x, int y [, int scale])<&%>Raise an arbitrary precision number to another (string)";$funclist[76]="bcpowmod";$funcdest[76]="bcpowmod(string x, string y, string modulus [, int scale])<&%>Raise an arbitrary precision number to another, reduced by a specified modulus. (string)";$funclist[77]="bcscale";$funcdest[77]="bcscale(int scale)<&%>Set default scale parameter for all bc math functions (string)";$funclist[78]="bcsqrt";$funcdest[78]="bcsqrt(string operand [, int scale])<&%>Get the square root of an arbitrary precision number (string)";$funclist[79]="bcsub";$funcdest[79]="bcsub(string left_operand, string right_operand [, int scale])<&%>Subtract one arbitrary precision number from another (string)";$funclist[80]="bin2hex";$funcdest[80]="bin2hex(string str)<&%>Convert binary data into hexadecimal representation (string)";$funclist[81]="bind_textdomain_codeset";$funcdest[81]="bind_textdomain_codeset(string domain, string codeset)<&%>Specify the character encoding in which the messages from the DOMAIN message catalog will be returned (string)";$funclist[82]="bindec";$funcdest[82]="bindec(string binary_string)<&%>Binary to decimal (int)";$funclist[83]="bindtextdomain";$funcdest[83]="bindtextdomain(string domain, string directory)<&%>Sets the path for a domain (string)";$funclist[84]="bzclose";$funcdest[84]="bzclose(resource bz)<&%>Close a bzip2 file pointer (int)";$funclist[85]="bzcompress";$funcdest[85]="bzcompress(string source [, int blocksize [, int workfactor]])<&%>Compress a string into bzip2 encoded data (string)";$funclist[86]="bzdecompress";$funcdest[86]="bzdecompress(string source [, int small])<&%>Decompresses bzip2 encoded data (string)";$funclist[87]="bzerrno";$funcdest[87]="bzerrno(resource bz)<&%>Returns a bzip2 error number (int)";$funclist[88]="bzerror";$funcdest[88]="bzerror(resource bz)<&%>Returns the bzip2 error number and error string in an array (array)";$funclist[89]="bzerrstr";$funcdest[89]="bzerrstr(resource bz)<&%>Returns a bzip2 error string (string)";$funclist[90]="bzflush";$funcdest[90]="bzflush(resource bz)<&%>Force a write of all buffered data (int)";$funclist[91]="bzopen";$funcdest[91]="bzopen(string filename, string mode)<&%>Open a bzip2 compressed file (resource)";$funclist[92]="bzread";$funcdest[92]="bzread(resource bz [, int length])<&%>Binary safe bzip2 file read (string)";$funclist[93]="bzwrite";$funcdest[93]="bzwrite(resource bz, string data [, int length])<&%>Binary safe bzip2 file write (int)";$funclist[94]="cal_days_in_month";$funcdest[94]="cal_days_in_month(int calendar, int month, int year)<&%>Return the number of days in a month for a given year and calendar (int)";$funclist[95]="cal_from_jd";$funcdest[95]="cal_from_jd(int jd, int calendar)<&%>Converts from Julian Day Count to a supported calendar (array)";$funclist[96]="cal_info";$funcdest[96]="cal_info([int calendar])<&%>Returns information about a particular calendar (array)";$funclist[97]="cal_to_jd";$funcdest[97]="cal_to_jd(int calendar, int month, int day, int year)<&%>Converts from a supported calendar to Julian Day Count (int)";$funclist[98]="call_user_func";$funcdest[98]="call_user_func(callback function [, mixed parameter [, mixed ...]])<&%>Call a user function given by the first parameter (mixed)";$funclist[99]="call_user_func_array";$funcdest[99]="call_user_func_array(callback function [, array paramarr])<&%>Call a user function given with an array of parameters (mixed)";$funclist[100]="call_user_method";$funcdest[100]="call_user_method(string method_name, object obj [, mixed parameter [, mixed ...]])<&%>Call a user method on an specific object [deprecated] (mixed)";$funclist[101]="call_user_method_array";$funcdest[101]="call_user_method_array(string method_name, object obj [, array paramarr])<&%>Call a user method given with an array of parameters [deprecated] (mixed)";$funclist[102]="ccvs_add";$funcdest[102]="ccvs_add(string session, string invoice, string argtype, string argval)<&%>Add data to a transaction (string)";$funclist[103]="ccvs_auth";$funcdest[103]="ccvs_auth(string session, string invoice)<&%>Perform credit authorization test on a transaction (string)";$funclist[104]="ccvs_command";$funcdest[104]="ccvs_command(string session, string type, string argval)<&%>Performs a command which is peculiar to a single protocol, and thus is not available in the general CCVS API (string)";$funclist[105]="ccvs_count";$funcdest[105]="ccvs_count(string session, string type)<&%>Find out how many transactions of a given type are stored in the system (int)";$funclist[106]="ccvs_delete";$funcdest[106]="ccvs_delete(string session, string invoice)<&%>Delete a transaction (string)";$funclist[107]="ccvs_done";$funcdest[107]="ccvs_done(string sess)<&%>Terminate CCVS engine and do cleanup work (string)";$funclist[108]="ccvs_init";$funcdest[108]="ccvs_init(string name)<&%>Initialize CCVS for use (string)";$funclist[109]="ccvs_lookup";$funcdest[109]="ccvs_lookup(string session, string invoice, int inum)<&%>Look up an item of a particular type in the database # (string)";$funclist[110]="ccvs_new";$funcdest[110]="ccvs_new(string session, string invoice)<&%>Create a new, blank transaction (string)";$funclist[111]="ccvs_report";$funcdest[111]="ccvs_report(string session, string type)<&%>Return the status of the background communication process (string)";$funclist[112]="ccvs_return";$funcdest[112]="ccvs_return(string session, string invoice)<&%>Transfer funds from the merchant to the credit card holder (string)";$funclist[113]="ccvs_reverse";$funcdest[113]="ccvs_reverse(string session, string invoice)<&%>Perform a full reversal on an already-processed authorization (string)";$funclist[114]="ccvs_sale";$funcdest[114]="ccvs_sale(string session, string invoice)<&%>Transfer funds from the credit card holder to the merchant (string)";$funclist[115]="ccvs_status";$funcdest[115]="ccvs_status(string session, string invoice)<&%>Check the status of an invoice (string)";$funclist[116]="ccvs_textvalue";$funcdest[116]="ccvs_textvalue(string session)<&%>Get text return value for previous function call (string)";$funclist[117]="ccvs_void";$funcdest[117]="ccvs_void(string session, string invoice)<&%>Perform a full reversal on a completed transaction (string)";$funclist[118]="ceil";$funcdest[118]="ceil(float value)<&%>Round fractions up (float)";$funclist[119]="chdir";$funcdest[119]="chdir(string directory)<&%>Change directory (bool)";$funclist[120]="checkdate";$funcdest[120]="checkdate(int month, int day, int year)<&%>Validate a gregorian date (bool)";$funclist[121]="checkdnsrr";$funcdest[121]="checkdnsrr(string host [, string type])<&%>Check DNS records corresponding to a given Internet host name or IP address (int)";$funclist[122]="chgrp";$funcdest[122]="chgrp(string filename, mixed group)<&%>Changes file group (int)";$funclist[123]="chmod";$funcdest[123]="chmod(string filename, int mode)<&%>Changes file mode (int)";$funclist[124]="chop";$funcdest[124]="chop(?)<&%>Alias of rtrim()<&%>(?)";$funclist[125]="chown";$funcdest[125]="chown(string filename, mixed user)<&%>Changes file owner (int)";$funclist[126]="chr";$funcdest[126]="chr(int ascii)<&%>Return a specific character (string)";$funclist[127]="chroot";$funcdest[127]="chroot(string directory)<&%>Change the root directory (bool)";$funclist[128]="chunk_split";$funcdest[128]="chunk_split(string body [, int chunklen [, string end]])<&%>Split a string into smaller chunks (string)";$funclist[129]="class_exists";$funcdest[129]="class_exists(string class_name)<&%>Checks if the class has been defined (bool)";$funclist[130]="clearstatcache";$funcdest[130]="clearstatcache(void)<&%>Clears file status cache (void)";$funclist[131]="closedir";$funcdest[131]="closedir(resource dir_handle)<&%>close directory handle (void)";$funclist[132]="closelog";$funcdest[132]="closelog(void)<&%>Close connection to system logger (int)";$funclist[133]="com_addref";$funcdest[133]="com_addref(void)<&%>Increases the components reference counter. (void)";$funclist[134]="com_get";$funcdest[134]="com_get(resource com_object, string property)<&%>Gets the value of a COM Component's property (mixed)";$funclist[135]="com_invoke";$funcdest[135]="com_invoke(resource com_object, string function_name [, mixed function parameters, ...])<&%>Calls a COM component's method. (mixed)";$funclist[136]="com_isenum";$funcdest[136]="com_isenum(object com_module)<&%>Grabs an IEnumVariant (void)";$funclist[137]="com_load";$funcdest[137]="com_load(string module_name [, string server_name [, int codepage]])<&%>Creates a new reference to a COM component (string)";$funclist[138]="com_load_typelib";$funcdest[138]="com_load_typelib(string typelib_name [, int case_insensitive])<&%>Loads a Typelib (void)";$funclist[139]="com_propget";$funcdest[139]="com_propget(?)<&%>Alias of com_get()<&%>(?)";$funclist[140]="com_propput";$funcdest[140]="com_propput(?)<&%>Alias of com_set()<&%>(?)";$funclist[141]="com_propset";$funcdest[141]="com_propset(?)<&%>Alias of com_set()<&%>(?)";$funclist[142]="com_release";$funcdest[142]="com_release(void)<&%>Decreases the components reference counter. (void)";$funclist[143]="com_set";$funcdest[143]="com_set(resource com_object, string property, mixed value)<&%>Assigns a value to a COM component's property (void)";$funclist[144]="compact";$funcdest[144]="compact(mixed varname [, mixed ...])<&%>Create array containing variables and their values (array)";$funclist[145]="connection_aborted";$funcdest[145]="connection_aborted(void)<&%>Returns TRUE if client disconnected (int)";$funclist[146]="connection_status";$funcdest[146]="connection_status(void)<&%>Returns connection status bitfield (int)";$funclist[147]="connection_timeout";$funcdest[147]="connection_timeout(void)<&%>Return TRUE if script timed out (bool)";$funclist[148]="constant";$funcdest[148]="constant(string name)<&%>Returns the value of a constant (mixed)";$funclist[149]="convert_cyr_string";$funcdest[149]="convert_cyr_string(string str, string from, string to)<&%>Convert from one Cyrillic character set to another (string)";$funclist[150]="copy";$funcdest[150]="copy(string source, string dest)<&%>Copies file (int)";$funclist[151]="cos";$funcdest[151]="cos(float arg)<&%>Cosine (float)";$funclist[152]="cosh";$funcdest[152]="cosh(float arg)<&%>Hyperbolic cosine (float)";$funclist[153]="count";$funcdest[153]="count(mixed var)<&%>Count elements in a variable (int)";$funclist[154]="count_chars";$funcdest[154]="count_chars(string string [, int mode])<&%>Return information about characters used in a string (mixed)";$funclist[155]="cpdf_add_annotation";$funcdest[155]="cpdf_add_annotation(int pdf_document, float llx, float lly, float urx, float ury, string title, string content [, int mode])<&%>Adds annotation (void)";$funclist[156]="cpdf_add_outline";$funcdest[156]="cpdf_add_outline(int pdf_document, string text)<&%>Adds bookmark for current page (void)";$funclist[157]="cpdf_arc";$funcdest[157]="cpdf_arc(int pdf_document, float x-coor, float y-coor, float radius, float start, float end [, int mode])<&%>Draws an arc (void)";$funclist[158]="cpdf_begin_text";$funcdest[158]="cpdf_begin_text(int pdf_document)<&%>Starts text section (void)";$funclist[159]="cpdf_circle";$funcdest[159]="cpdf_circle(int pdf_document, float x-coor, float y-coor, float radius [, int mode])<&%>Draw a circle (void)";$funclist[160]="cpdf_clip";$funcdest[160]="cpdf_clip(int pdf_document)<&%>Clips to current path (void)";$funclist[161]="cpdf_close";$funcdest[161]="cpdf_close(int pdf_document)<&%>Closes the pdf document (void)";$funclist[162]="cpdf_closepath";$funcdest[162]="cpdf_closepath(int pdf_document)<&%>Close path (void)";$funclist[163]="cpdf_closepath_fill_stroke";$funcdest[163]="cpdf_closepath_fill_stroke(int pdf_document)<&%>Close, fill and stroke current path (void)";$funclist[164]="cpdf_closepath_stroke";$funcdest[164]="cpdf_closepath_stroke(int pdf_document)<&%>Close path and draw line along path (void)";$funclist[165]="cpdf_continue_text";$funcdest[165]="cpdf_continue_text(int pdf_document, string text)<&%>Output text in next line (void)";$funclist[166]="cpdf_curveto";$funcdest[166]="cpdf_curveto(int pdf_document, float x1, float y1, float x2, float y2, float x3, float y3 [, int mode])<&%>Draws a curve (void)";$funclist[167]="cpdf_end_text";$funcdest[167]="cpdf_end_text(int pdf_document)<&%>Ends text section (void)";$funclist[168]="cpdf_fill";$funcdest[168]="cpdf_fill(int pdf_document)<&%>Fill current path (void)";$funclist[169]="cpdf_fill_stroke";$funcdest[169]="cpdf_fill_stroke(int pdf_document)<&%>Fill and stroke current path (void)";$funclist[170]="cpdf_finalize";$funcdest[170]="cpdf_finalize(int pdf_document)<&%>Ends document (void)";$funclist[171]="cpdf_finalize_page";$funcdest[171]="cpdf_finalize_page(int pdf_document, int page_number)<&%>Ends page (void)";$funclist[172]="cpdf_global_set_document_limits";$funcdest[172]="cpdf_global_set_document_limits(int maxpages, int maxfonts, int maximages, int maxannotations, int maxobjects)<&%>Sets document limits for any pdf document (void)";$funclist[173]="cpdf_import_jpeg";$funcdest[173]="cpdf_import_jpeg(int pdf_document, string file name, float x-coor, float y-coor, float angle, float width, float height, float x-scale, float y-scale [, int mode])<&%>Opens a JPEG image (int)";$funclist[174]="cpdf_lineto";$funcdest[174]="cpdf_lineto(int pdf_document, float x-coor, float y-coor [, int mode])<&%>Draws a line (void)";$funclist[175]="cpdf_moveto";$funcdest[175]="cpdf_moveto(int pdf_document, float x-coor, float y-coor [, int mode])<&%>Sets current point (void)";$funclist[176]="cpdf_newpath";$funcdest[176]="cpdf_newpath(int pdf_document)<&%>Starts a new path (void)";$funclist[177]="cpdf_open";$funcdest[177]="cpdf_open(int compression [, string filename])<&%>Opens a new pdf document (int)";$funclist[178]="cpdf_output_buffer";$funcdest[178]="cpdf_output_buffer(int pdf_document)<&%>Outputs the pdf document in memory buffer (void)";$funclist[179]="cpdf_page_init";$funcdest[179]="cpdf_page_init(int pdf_document, int page_number, int orientation, float height, float width [, float unit])<&%>Starts new page (void)";$funclist[180]="cpdf_place_inline_image";$funcdest[180]="cpdf_place_inline_image(int pdf_document, int image, float x-coor, float y-coor, float angle, float width, float height [, int mode])<&%>Places an image on the page (void)";$funclist[181]="cpdf_rect";$funcdest[181]="cpdf_rect(int pdf_document, float x-coor, float y-coor, float width, float height [, int mode])<&%>Draw a rectangle (void)";$funclist[182]="cpdf_restore";$funcdest[182]="cpdf_restore(int pdf_document)<&%>Restores formerly saved environment (void)";$funclist[183]="cpdf_rlineto";$funcdest[183]="cpdf_rlineto(int pdf_document, float x-coor, float y-coor [, int mode])<&%>Draws a line (void)";$funclist[184]="cpdf_rmoveto";$funcdest[184]="cpdf_rmoveto(int pdf_document, float x-coor, float y-coor [, int mode])<&%>Sets current point (void)";$funclist[185]="cpdf_rotate";$funcdest[185]="cpdf_rotate(int pdf_document, float angle)<&%>Sets rotation (void)";$funclist[186]="cpdf_rotate_text";$funcdest[186]="cpdf_rotate_text(int pdfdoc, float angle)<&%>Sets text rotation angle (void)";$funclist[187]="cpdf_save";$funcdest[187]="cpdf_save(int pdf_document)<&%>Saves current environment (void)";$funclist[188]="cpdf_save_to_file";$funcdest[188]="cpdf_save_to_file(int pdf_document, string filename)<&%>Writes the pdf document into a file (void)";$funclist[189]="cpdf_scale";$funcdest[189]="cpdf_scale(int pdf_document, float x-scale, float y-scale)<&%>Sets scaling (void)";$funclist[190]="cpdf_set_action_url";$funcdest[190]="cpdf_set_action_url(int pdfdoc, float xll, float yll, float xur, float xur, string url [, int mode])<&%>Sets hyperlink (void)";$funclist[191]="cpdf_set_char_spacing";$funcdest[191]="cpdf_set_char_spacing(int pdf_document, float space)<&%>Sets character spacing (void)";$funclist[192]="cpdf_set_creator";$funcdest[192]="cpdf_set_creator(string creator)<&%>Sets the creator field in the pdf document (void)";$funclist[193]="cpdf_set_current_page";$funcdest[193]="cpdf_set_current_page(int pdf_document, int page_number)<&%>Sets current page (void)";$funclist[194]="cpdf_set_font";$funcdest[194]="cpdf_set_font(int pdf_document, string font name, float size, string encoding)<&%>Select the current font face and size (void)";$funclist[195]="cpdf_set_font_directories";$funcdest[195]="cpdf_set_font_directories(int pdfdoc, string pfmdir, string pfbdir)<&%>Sets directories to search when using external fonts (void)";$funclist[196]="cpdf_set_font_map_file";$funcdest[196]="cpdf_set_font_map_file(int pdfdoc, string filename)<&%>Sets fontname to filename translation map when using external fonts (void)";$funclist[197]="cpdf_set_horiz_scaling";$funcdest[197]="cpdf_set_horiz_scaling(int pdf_document, float scale)<&%>Sets horizontal scaling of text (void)";$funclist[198]="cpdf_set_keywords";$funcdest[198]="cpdf_set_keywords(string keywords)<&%>Sets the keywords field of the pdf document (void)";$funclist[199]="cpdf_set_leading";$funcdest[199]="cpdf_set_leading(int pdf_document, float distance)<&%>Sets distance between text lines (void)";$funclist[200]="cpdf_set_page_animation";$funcdest[200]="cpdf_set_page_animation(int pdf_document, int transition, float duration)<&%>Sets duration between pages (void)";$funclist[201]="cpdf_set_subject";$funcdest[201]="cpdf_set_subject(string subject)<&%>Sets the subject field of the pdf document (void)";$funclist[202]="cpdf_set_text_matrix";$funcdest[202]="cpdf_set_text_matrix(int pdf_document, array matrix)<&%>Sets the text matrix (void)";$funclist[203]="cpdf_set_text_pos";$funcdest[203]="cpdf_set_text_pos(int pdf_document, float x-coor, float y-coor [, int mode])<&%>Sets text position (void)";$funclist[204]="cpdf_set_text_rendering";$funcdest[204]="cpdf_set_text_rendering(int pdf_document [, int mode])<&%>Determines how text is rendered (void)";$funclist[205]="cpdf_set_text_rise";$funcdest[205]="cpdf_set_text_rise(int pdf_document, float value)<&%>Sets the text rise (void)";$funclist[206]="cpdf_set_title";$funcdest[206]="cpdf_set_title(string title)<&%>Sets the title field of the pdf document (void)";$funclist[207]="cpdf_set_viewer_preferences";$funcdest[207]="cpdf_set_viewer_preferences(int pdfdoc, array preferences)<&%>How to show the document in the viewer (void)";$funclist[208]="cpdf_set_word_spacing";$funcdest[208]="cpdf_set_word_spacing(int pdf_document, float space)<&%>Sets spacing between words (void)";$funclist[209]="cpdf_setdash";$funcdest[209]="cpdf_setdash(int pdf_document, float white, float black)<&%>Sets dash pattern (void)";$funclist[210]="cpdf_setflat";$funcdest[210]="cpdf_setflat(int pdf_document, float value)<&%>Sets flatness (void)";$funclist[211]="cpdf_setgray";$funcdest[211]="cpdf_setgray(int pdf_document, float gray_value)<&%>Sets drawing and filling color to gray value (void)";$funclist[212]="cpdf_setgray_fill";$funcdest[212]="cpdf_setgray_fill(int pdf_document, float value)<&%>Sets filling color to gray value (void)";$funclist[213]="cpdf_setgray_stroke";$funcdest[213]="cpdf_setgray_stroke(int pdf_document, float gray_value)<&%>Sets drawing color to gray value (void)";$funclist[214]="cpdf_setlinecap";$funcdest[214]="cpdf_setlinecap(int pdf_document, int value)<&%>Sets linecap parameter (void)";$funclist[215]="cpdf_setlinejoin";$funcdest[215]="cpdf_setlinejoin(int pdf_document, int value)<&%>Sets linejoin parameter (void)";$funclist[216]="cpdf_setlinewidth";$funcdest[216]="cpdf_setlinewidth(int pdf_document, float width)<&%>Sets line width (void)";$funclist[217]="cpdf_setmiterlimit";$funcdest[217]="cpdf_setmiterlimit(int pdf_document, float value)<&%>Sets miter limit (void)";$funclist[218]="cpdf_setrgbcolor";$funcdest[218]="cpdf_setrgbcolor(int pdf_document, float red_value, float green_value, float blue_value)<&%>Sets drawing and filling color to rgb color value (void)";$funclist[219]="cpdf_setrgbcolor_fill";$funcdest[219]="cpdf_setrgbcolor_fill(int pdf_document, float red_value, float green_value, float blue_value)<&%>Sets filling color to rgb color value (void)";$funclist[220]="cpdf_setrgbcolor_stroke";$funcdest[220]="cpdf_setrgbcolor_stroke(int pdf_document, float red_value, float green_value, float blue_value)<&%>Sets drawing color to rgb color value (void)";$funclist[221]="cpdf_show";$funcdest[221]="cpdf_show(int pdf_document, string text)<&%>Output text at current position (void)";$funclist[222]="cpdf_show_xy";$funcdest[222]="cpdf_show_xy(int pdf_document, string text, float x-coor, float y-coor [, int mode])<&%>Output text at position (void)";$funclist[223]="cpdf_stringwidth";$funcdest[223]="cpdf_stringwidth(int pdf_document, string text)<&%>Returns width of text in current font (float)";$funclist[224]="cpdf_stroke";$funcdest[224]="cpdf_stroke(int pdf_document)<&%>Draw line along path (void)";$funclist[225]="cpdf_text";$funcdest[225]="cpdf_text(int pdf_document, string text, float x-coor, float y-coor [, int mode [, float orientation [, int alignmode]]])<&%>Output text with parameters (void)";$funclist[226]="cpdf_translate";$funcdest[226]="cpdf_translate(int pdf_document, float x-coor, float y-coor [, int mode])<&%>Sets origin of coordinate system (void)";$funclist[227]="crack_check";$funcdest[227]="crack_check([resource dictionary, string password])<&%>Performs an obscure check with the given password (bool)";$funclist[228]="crack_closedict";$funcdest[228]="crack_closedict([resource dictionary])<&%>Closes an open CrackLib dictionary (bool)";$funclist[229]="crack_getlastmessage";$funcdest[229]="crack_getlastmessage(void)<&%>Returns the message from the last obscure check (string)";$funclist[230]="crack_opendict";$funcdest[230]="crack_opendict(string dictionary)<&%>Opens a new CrackLib dictionary (resource)";$funclist[231]="crc32";$funcdest[231]="crc32(string str)<&%>Calculates the crc32 polynomial of a string (int)";$funclist[232]="create_function";$funcdest[232]="create_function(string args, string code)<&%>Create an anonymous (lambda-style)<&%>function (string)";$funclist[233]="crypt";$funcdest[233]="crypt(string str [, string salt])<&%>One-way string encryption (hashing)<&%>(string)";$funclist[234]="ctype_alnum";$funcdest[234]="ctype_alnum(string text)<&%>Check for alphanumeric character(s)<&%>(bool)";$funclist[235]="ctype_alpha";$funcdest[235]="ctype_alpha(string text)<&%>Check for alphabetic character(s)<&%>(bool)";$funclist[236]="ctype_cntrl";$funcdest[236]="ctype_cntrl(string text)<&%>Check for control character(s)<&%>(bool)";$funclist[237]="ctype_digit";$funcdest[237]="ctype_digit(string text)<&%>Check for numeric character(s)<&%>(bool)";$funclist[238]="ctype_graph";$funcdest[238]="ctype_graph(string text)<&%>Check for any printable character(s)<&%>except space (bool)";$funclist[239]="ctype_lower";$funcdest[239]="ctype_lower(string text)<&%>Check for lowercase character(s)<&%>(bool)";$funclist[240]="ctype_print";$funcdest[240]="ctype_print(string text)<&%>Check for printable character(s)<&%>(bool)";$funclist[241]="ctype_punct";$funcdest[241]="ctype_punct(string text)<&%>Check for any printable character which is not whitespace or an alphanumeric character (bool)";$funclist[242]="ctype_space";$funcdest[242]="ctype_space(string text)<&%>Check for whitespace character(s)<&%>(bool)";$funclist[243]="ctype_upper";$funcdest[243]="ctype_upper(string text)<&%>Check for uppercase character(s)<&%>(bool)";$funclist[244]="ctype_xdigit";$funcdest[244]="ctype_xdigit(string text)<&%>Check for character(s)<&%>representing a hexadecimal digit (bool)";$funclist[245]="curl_close";$funcdest[245]="curl_close(resource ch)<&%>Close a CURL session (void)";$funclist[246]="curl_errno";$funcdest[246]="curl_errno(resource ch)<&%>Return the last error number (int)";$funclist[247]="curl_error";$funcdest[247]="curl_error(resource ch)<&%>Return a string containing the last error for the current session (string)";$funclist[248]="curl_exec";$funcdest[248]="curl_exec(resource ch)<&%>Perform a CURL session (bool)";$funclist[249]="curl_getinfo";$funcdest[249]="curl_getinfo(resource ch [, int opt])<&%>Get information regarding a specific transfer (string)";$funclist[250]="curl_init";$funcdest[250]="curl_init([string url])<&%>Initialize a CURL session (resource)";$funclist[251]="curl_setopt";$funcdest[251]="curl_setopt(resource ch, string option, mixed value)<&%>Set an option for a CURL transfer (bool)";$funclist[252]="curl_version";$funcdest[252]="curl_version(void)<&%>Return the current CURL version (string)";$funclist[253]="current";$funcdest[253]="current(array array)<&%>Return the current element in an array (mixed)";$funclist[254]="cybercash_base64_decode";$funcdest[254]="cybercash_base64_decode(string inbuff)<&%>base64 decode data for Cybercash (string)";$funclist[255]="cybercash_base64_encode";$funcdest[255]="cybercash_base64_encode(string inbuff)<&%>base64 encode data for Cybercash (string)";$funclist[256]="cybercash_decr";$funcdest[256]="cybercash_decr(string wmk, string sk, string inbuff)<&%>Cybercash decrypt (array)";$funclist[257]="cybercash_encr";$funcdest[257]="cybercash_encr(string wmk, string sk, string inbuff)<&%>Cybercash encrypt (array)";$funclist[258]="cybermut_creerformulairecm";$funcdest[258]="cybermut_creerformulairecm(string url_CM, string version, string TPE, string montant, string ref_commande, string texte_libre, string url_retour, string url_retour_ok, string url_retour_err, string langue, string code_societe, string texte_bouton)<&%>Generate HTML form of request for payment (string)";$funclist[259]="cybermut_creerreponsecm";$funcdest[259]="cybermut_creerreponsecm(string phrase)<&%>Generate the acknowledgement of delivery of the confirmation of payment (string)";$funclist[260]="cybermut_testmac";$funcdest[260]="cybermut_testmac(string code_MAC, string version, string TPE, string cdate, string montant, string ref_commande, string texte_libre, string code-retour)<&%>Make sure that there no was data diddling contained in the received message of confirmation (bool)";$funclist[261]="cyrus_authenticate";$funcdest[261]="cyrus_authenticate(resource connection [, string mechlist [, string service [, string user [, int minssf [, int maxssf]]]]])<&%>Authenticate against a Cyrus IMAP server (bool)";$funclist[262]="cyrus_bind";$funcdest[262]="cyrus_bind(resource connection, array callbacks)<&%>Bind callbacks to a Cyrus IMAP connection (bool)";$funclist[263]="cyrus_close";$funcdest[263]="cyrus_close(resource connection)<&%>Close connection to a Cyrus IMAP server (bool)";$funclist[264]="cyrus_connect";$funcdest[264]="cyrus_connect([string host [, string port [, int flags]]])<&%>Connect to a Cyrus IMAP server (resource)";$funclist[265]="cyrus_query";$funcdest[265]="cyrus_query(resource connection, string query)<&%>Send a query to a Cyrus IMAP server (bool)";$funclist[266]="cyrus_unbind";$funcdest[266]="cyrus_unbind(resource connection, string trigger_name)<&%>Unbind ... (bool)";$funclist[267]="date";$funcdest[267]="date(string format [, int timestamp])<&%>Format a local time/date (string)";$funclist[268]="dba_close";$funcdest[268]="dba_close(resource handle)<&%>Close database (void)";$funclist[269]="dba_delete";$funcdest[269]="dba_delete(string key, resource handle)<&%>Delete entry specified by key (bool)";$funclist[270]="dba_exists";$funcdest[270]="dba_exists(string key, resource handle)<&%>Check whether key exists (bool)";$funclist[271]="dba_fetch";$funcdest[271]="dba_fetch(string key [, int skip, resource handle])<&%>Fetch data specified by key (string)";$funclist[272]="dba_firstkey";$funcdest[272]="dba_firstkey(resource handle)<&%>Fetch first key (string)";$funclist[273]="dba_handlers";$funcdest[273]="dba_handlers(void)<&%>List handlers available (array)";$funclist[274]="dba_insert";$funcdest[274]="dba_insert(string key, string value, resource handle)<&%>Insert entry (bool)";$funclist[275]="dba_list";$funcdest[275]="dba_list(void)<&%>List all open database files (array)";$funclist[276]="dba_nextkey";$funcdest[276]="dba_nextkey(resource handle)<&%>Fetch next key (string)";$funclist[277]="dba_open";$funcdest[277]="dba_open(string path, string mode, string handler [, ...])<&%>Open database (resource)";$funclist[278]="dba_optimize";$funcdest[278]="dba_optimize(resource handle)<&%>Optimize database (bool)";$funclist[279]="dba_popen";$funcdest[279]="dba_popen(string path, string mode, string handler [, ...])<&%>Open database persistently (resource)";$funclist[280]="dba_replace";$funcdest[280]="dba_replace(string key, string value, resource handle)<&%>Replace or insert entry (bool)";$funclist[281]="dba_sync";$funcdest[281]="dba_sync(resource handle)<&%>Synchronize database (bool)";$funclist[282]="dbase_add_record";$funcdest[282]="dbase_add_record(int dbase_identifier, array record)<&%>Add a record to a dBase database (bool)";$funclist[283]="dbase_close";$funcdest[283]="dbase_close(int dbase_identifier)<&%>Close a dBase database (bool)";$funclist[284]="dbase_create";$funcdest[284]="dbase_create(string filename, array fields)<&%>Creates a dBase database (int)";$funclist[285]="dbase_delete_record";$funcdest[285]="dbase_delete_record(int dbase_identifier, int record)<&%>Deletes a record from a dBase database (bool)";$funclist[286]="dbase_get_record";$funcdest[286]="dbase_get_record(int dbase_identifier, int record)<&%>Gets a record from a dBase database (array)";$funclist[287]="dbase_get_record_with_names";$funcdest[287]="dbase_get_record_with_names(int dbase_identifier, int record)<&%>Gets a record from a dBase database as an associative array (array)";$funclist[288]="dbase_numfields";$funcdest[288]="dbase_numfields(int dbase_identifier)<&%>Find out how many fields are in a dBase database (int)";$funclist[289]="dbase_numrecords";$funcdest[289]="dbase_numrecords(int dbase_identifier)<&%>Find out how many records are in a dBase database (int)";$funclist[290]="dbase_open";$funcdest[290]="dbase_open(string filename, int flags)<&%>Opens a dBase database (int)";$funclist[291]="dbase_pack";$funcdest[291]="dbase_pack(int dbase_identifier)<&%>Packs a dBase database (bool)";$funclist[292]="dbase_replace_record";$funcdest[292]="dbase_replace_record(int dbase_identifier, array record, int dbase_record_number)<&%>Replace a record in a dBase database (bool)";$funclist[293]="dblist";$funcdest[293]="dblist(void)<&%>Describes the DBM-compatible library being used (string)";$funclist[294]="dbmclose";$funcdest[294]="dbmclose(resource dbm_identifier)<&%>Closes a dbm database (bool)";$funclist[295]="dbmdelete";$funcdest[295]="dbmdelete(resource dbm_identifier, string key)<&%>Deletes the value for a key from a DBM database (bool)";$funclist[296]="dbmexists";$funcdest[296]="dbmexists(resource dbm_identifier, string key)<&%>Tells if a value exists for a key in a DBM database (bool)";$funclist[297]="dbmfetch";$funcdest[297]="dbmfetch(resource dbm_identifier, string key)<&%>Fetches a value for a key from a DBM database (string)";$funclist[298]="dbmfirstkey";$funcdest[298]="dbmfirstkey(resource dbm_identifier)<&%>Retrieves the first key from a DBM database (string)";$funclist[299]="dbminsert";$funcdest[299]="dbminsert(resource dbm_identifier, string key, string value)<&%>Inserts a value for a key in a DBM database (int)";$funclist[300]="dbmnextkey";$funcdest[300]="dbmnextkey(resource dbm_identifier, string key)<&%>Retrieves the next key from a DBM database (string)";$funclist[301]="dbmopen";$funcdest[301]="dbmopen(string filename, string flags)<&%>Opens a DBM database (resource)";$funclist[302]="dbmreplace";$funcdest[302]="dbmreplace(resource dbm_identifier, string key, string value)<&%>Replaces the value for a key in a DBM database (int)";$funclist[303]="dbplus_add";$funcdest[303]="dbplus_add(resource relation, array tuple)<&%>Add a tuple to a relation (int)";$funclist[304]="dbplus_aql";$funcdest[304]="dbplus_aql(string query [, string server [, string dbpath]])<&%>Perform AQL query (resource)";$funclist[305]="dbplus_chdir";$funcdest[305]="dbplus_chdir([string newdir])<&%>Get/Set database virtual current directory (string)";$funclist[306]="dbplus_close";$funcdest[306]="dbplus_close(resource relation)<&%>Close a relation (int)";$funclist[307]="dbplus_curr";$funcdest[307]="dbplus_curr(resource relation, array tuple)<&%>Get current tuple from relation (int)";$funclist[308]="dbplus_errcode";$funcdest[308]="dbplus_errcode(int errno)<&%>Get error string for given errorcode or last error (string)";$funclist[309]="dbplus_errno";$funcdest[309]="dbplus_errno(void)<&%>Get error code for last operation (int)";$funclist[310]="dbplus_find";$funcdest[310]="dbplus_find(resource relation, array constraints, mixed tuple)<&%>Set a constraint on a relation (int)";$funclist[311]="dbplus_first";$funcdest[311]="dbplus_first(resource relation, array tuple)<&%>Get first tuple from relation (int)";$funclist[312]="dbplus_flush";$funcdest[312]="dbplus_flush(resource relation)<&%>Flush all changes made on a relation (int)";$funclist[313]="dbplus_freealllocks";$funcdest[313]="dbplus_freealllocks(void)<&%>Free all locks held by this client (int)";$funclist[314]="dbplus_freelock";$funcdest[314]="dbplus_freelock(resource relation, string tname)<&%>Release write lock on tuple (int)";$funclist[315]="dbplus_freerlocks";$funcdest[315]="dbplus_freerlocks(resource relation)<&%>Free all tuple locks on given relation (int)";$funclist[316]="dbplus_getlock";$funcdest[316]="dbplus_getlock(resource relation, string tname)<&%>Get a write lock on a tuple (int)";$funclist[317]="dbplus_getunique";$funcdest[317]="dbplus_getunique(resource relation, int uniqueid)<&%>Get a id number unique to a relation (int)";$funclist[318]="dbplus_info";$funcdest[318]="dbplus_info(resource relation, string key, array )<&%>??? (int)";$funclist[319]="dbplus_last";$funcdest[319]="dbplus_last(resource relation, array tuple)<&%>Get last tuple from relation (int)";$funclist[320]="dbplus_lockrel";$funcdest[320]="dbplus_lockrel(resource relation)<&%>Request write lock on relation (int)";$funclist[321]="dbplus_next";$funcdest[321]="dbplus_next(resource relation, array )<&%>Get next tuple from relation (int)";$funclist[322]="dbplus_open";$funcdest[322]="dbplus_open(string name)<&%>Open relation file (resource)";$funclist[323]="dbplus_prev";$funcdest[323]="dbplus_prev(resource relation, array tuple)<&%>Get previous tuple from relation (int)";$funclist[324]="dbplus_rchperm";$funcdest[324]="dbplus_rchperm(resource relation, int mask, string user, string group)<&%>Change relation permissions (int)";$funclist[325]="dbplus_rcreate";$funcdest[325]="dbplus_rcreate(string name, mixed domlist [, bool overwrite])<&%>Creates a new DB++ relation (resource)";$funclist[326]="dbplus_rcrtexact";$funcdest[326]="dbplus_rcrtexact(string name, resource relation, bool overwrite)<&%>Creates an exact but empty copy of a relation including indices (resource)";$funclist[327]="dbplus_rcrtlike";$funcdest[327]="dbplus_rcrtlike(string name, resource relation, int flag)<&%>Creates an empty copy of a relation with default indices (resource)";$funclist[328]="dbplus_resolve";$funcdest[328]="dbplus_resolve(string relation_name)<&%>Resolve host information for relation (int)";$funclist[329]="dbplus_restorepos";$funcdest[329]="dbplus_restorepos(resource relation, array tuple)<&%>??? (int)";$funclist[330]="dbplus_rkeys";$funcdest[330]="dbplus_rkeys(resource relation, mixed domlist)<&%>Specify new primary key for a relation (resource)";$funclist[331]="dbplus_ropen";$funcdest[331]="dbplus_ropen(string name)<&%>Open relation file local (resource)";$funclist[332]="dbplus_rquery";$funcdest[332]="dbplus_rquery(string query, string dbpath)<&%>Perform local (raw)<&%>AQL query (int)";$funclist[333]="dbplus_rrename";$funcdest[333]="dbplus_rrename(resource relation, string name)<&%>Rename a relation (int)";$funclist[334]="dbplus_rsecindex";$funcdest[334]="dbplus_rsecindex(resource relation, mixed domlist, int type)<&%>Create a new secondary index for a relation (resource)";$funclist[335]="dbplus_runlink";$funcdest[335]="dbplus_runlink(resource relation)<&%>Remove relation from filesystem (int)";$funclist[336]="dbplus_rzap";$funcdest[336]="dbplus_rzap(resource relation)<&%>Remove all tuples from relation (int)";$funclist[337]="dbplus_savepos";$funcdest[337]="dbplus_savepos(resource relation)<&%>??? (int)";$funclist[338]="dbplus_setindex";$funcdest[338]="dbplus_setindex(resource relation, string idx_name)<&%>??? (int)";$funclist[339]="dbplus_setindexbynumber";$funcdest[339]="dbplus_setindexbynumber(resource relation, int idx_number)<&%>??? (int)";$funclist[340]="dbplus_sql";$funcdest[340]="dbplus_sql(string query, string server, string dbpath)<&%>Perform SQL query (resource)";$funclist[341]="dbplus_tcl";$funcdest[341]="dbplus_tcl(int sid, string script)<&%>Execute TCL code on server side (int)";$funclist[342]="dbplus_tremove";$funcdest[342]="dbplus_tremove(resource relation, array tuple [, array current])<&%>Remove tuple and return new current tuple (int)";$funclist[343]="dbplus_undo";$funcdest[343]="dbplus_undo(resource relation)<&%>??? (int)";$funclist[344]="dbplus_undoprepare";$funcdest[344]="dbplus_undoprepare(resource relation)<&%>??? (int)";$funclist[345]="dbplus_unlockrel";$funcdest[345]="dbplus_unlockrel(resource relation)<&%>Give up write lock on relation (int)";$funclist[346]="dbplus_unselect";$funcdest[346]="dbplus_unselect(resource relation)<&%>Remove a constraint from relation (int)";$funclist[347]="dbplus_update";$funcdest[347]="dbplus_update(resource relation, array old, array new)<&%>Update specified tuple in relation (int)";$funclist[348]="dbplus_xlockrel";$funcdest[348]="dbplus_xlockrel(resource relation)<&%>Request exclusive lock on relation (int)";$funclist[349]="dbplus_xunlockrel";$funcdest[349]="dbplus_xunlockrel(resource relation)<&%>Free exclusive lock on relation (int)";$funclist[350]="dbx_close";$funcdest[350]="dbx_close(object link_identifier)<&%>Close an open connection/database (bool)";$funclist[351]="dbx_compare";$funcdest[351]="dbx_compare(array row_a, array row_b, string column_key [, int flags])<&%>Compare two rows for sorting purposes (int)";$funclist[352]="dbx_connect";$funcdest[352]="dbx_connect(mixed module, string host, string database, string username, string password [, int persistent])<&%>Open a connection/database (object)";$funclist[353]="dbx_error";$funcdest[353]="dbx_error(object link_identifier)<&%>Report the error message of the latest function call in the module (not just in the connection)<&%>(string)";$funclist[354]="dbx_escape_string";$funcdest[354]="dbx_escape_string(object link_identifier, string text)<&%>Escape a string so it can safely be used in an sql-statement. (string)";$funclist[355]="dbx_query";$funcdest[355]="dbx_query(object link_identifier, string sql_statement [, long flags])<&%>Send a query and fetch all results (if any)<&%>(object)";$funclist[356]="dbx_sort";$funcdest[356]="dbx_sort(object result, string user_compare_function)<&%>Sort a result from a dbx_query by a custom sort function (bool)";$funclist[357]="dcgettext";$funcdest[357]="dcgettext(string domain, string message, int category)<&%>Overrides the domain for a single lookup (string)";$funclist[358]="dcngettext";$funcdest[358]="dcngettext(string domain, string msgid1, string msgid2, int n, int category)<&%>Plural version of dcgettext (string)";$funclist[359]="deaggregate";$funcdest[359]="deaggregate(object object [, string class_name])<&%>Removes the aggregated methods and properties from an object (void)";$funclist[360]="debug_backtrace";$funcdest[360]="debug_backtrace(void)<&%>Generates a backtrace (array)";$funclist[361]="debugger_off";$funcdest[361]="debugger_off(void)<&%>Disable internal PHP debugger (PHP 3)<&%>(int)";$funclist[362]="debugger_on";$funcdest[362]="debugger_on(string address)<&%>Enable internal PHP debugger (PHP 3)<&%>(int)";$funclist[363]="decbin";$funcdest[363]="decbin(int number)<&%>Decimal to binary (string)";$funclist[364]="dechex";$funcdest[364]="dechex(int number)<&%>Decimal to hexadecimal (string)";$funclist[365]="decoct";$funcdest[365]="decoct(int number)<&%>Decimal to octal (string)";$funclist[366]="define";$funcdest[366]="define(string name, mixed value [, bool case_insensitive])<&%>Defines a named constant. (bool)";$funclist[367]="define_syslog_variables";$funcdest[367]="define_syslog_variables(void)<&%>Initializes all syslog related constants (void)";$funclist[368]="defined";$funcdest[368]="defined(string name)<&%>Checks whether a given named constant exists (bool)";$funclist[369]="deg2rad";$funcdest[369]="deg2rad(float number)<&%>Converts the number in degrees to the radian equivalent (float)";$funclist[370]="delete";$funcdest[370]="delete(string file)<&%>See unlink()<&%>or unset()<&%>(void)";$funclist[371]="dgettext";$funcdest[371]="dgettext(string domain, string message)<&%>Override the current domain (string)";$funclist[372]="die";$funcdest[372]="die(?)<&%>Alias of exit()<&%>(?)";$funclist[373]="dio_close";$funcdest[373]="dio_close(resource fd)<&%>Closes the file descriptor given by fd (void)";$funclist[374]="dio_fcntl";$funcdest[374]="dio_fcntl(resource fd, int cmd [, mixed arg])<&%>Performs a c library fcntl on fd (mixed)";$funclist[375]="dio_open";$funcdest[375]="dio_open(string filename, int flags [, int mode])<&%>Opens a new filename with specified permissions of flags and creation permissions of mode (resource)";$funclist[376]="dio_read";$funcdest[376]="dio_read(resource fd [, int n])<&%>Reads n bytes from fd and returns them, if n is not specified, reads 1k block (string)";$funclist[377]="dio_seek";$funcdest[377]="dio_seek(resource fd, int pos, int whence)<&%>Seeks to pos on fd from whence (int)";$funclist[378]="dio_stat";$funcdest[378]="dio_stat(resource fd)<&%>Gets stat information about the file descriptor fd (array)";$funclist[379]="dio_tcsetattr";$funcdest[379]="dio_tcsetattr(resource fd, array options)<&%>Sets terminal attributes and baud rate for a serial port ()";$funclist[380]="dio_truncate";$funcdest[380]="dio_truncate(resource fd, int offset)<&%>Truncates file descriptor fd to offset bytes (bool)";$funclist[381]="dio_write";$funcdest[381]="dio_write(resource fd, string data [, int len])<&%>Writes data to fd with optional truncation at length (int)";$funclist[382]="dirname";$funcdest[382]="dirname(string path)<&%>Returns directory name component of path (string)";$funclist[383]="disk_free_space";$funcdest[383]="disk_free_space(string directory)<&%>Returns available space in directory (float)";$funclist[384]="disk_total_space";$funcdest[384]="disk_total_space(string directory)<&%>Returns the total size of a directory (float)";$funclist[385]="diskfreespace";$funcdest[385]="diskfreespace(?)<&%>Alias of disk_free_space()<&%>(?)";$funclist[386]="dl";$funcdest[386]="dl(string library)<&%>Loads a PHP extension at runtime (int)";$funclist[387]="dngettext";$funcdest[387]="dngettext(string domain, string msgid1, string msgid2, int n)<&%>Plural version of dgettext (string)";$funclist[388]="dns_check_record";$funcdest[388]="dns_check_record(string host [, string type])<&%>Synonym for checkdnsrr()<&%>(int)";$funclist[389]="dns_get_mx";$funcdest[389]="dns_get_mx(string hostname, array mxhosts [, array &weight])<&%>Synonym for getmxrr()<&%>(int)";$funclist[390]="dns_get_record";$funcdest[390]="dns_get_record(string hostname [, int type [, array &authns, array &addtl]])<&%>Fetch DNS Resource Records associated with a hostname (array)";$funclist[391]="domxml_new_doc";$funcdest[391]="domxml_new_doc(string version)<&%>Creates new empty XML document (object)";$funclist[392]="domxml_open_file";$funcdest[392]="domxml_open_file(string filename)<&%>Creates a DOM object from XML file (object)";$funclist[393]="domxml_open_mem";$funcdest[393]="domxml_open_mem(string str)<&%>Creates a DOM object of an XML document (object)";$funclist[394]="domxml_version";$funcdest[394]="domxml_version(void)<&%>Get XML library version (string)";$funclist[395]="domxml_xmltree";$funcdest[395]="domxml_xmltree(string str)<&%>Creates a tree of PHP objects from an XML document (object)";$funclist[396]="domxml_xslt_stylesheet";$funcdest[396]="domxml_xslt_stylesheet(string xsl document)<&%>Creates a DomXsltStylesheet Object from a xml document in a string. (object)";$funclist[397]="domxml_xslt_stylesheet_doc";$funcdest[397]="domxml_xslt_stylesheet_doc(object DocDocument Object)<&%>Creates a DomXsltStylesheet Object from a DomDocument Object. (object)";$funclist[398]="domxml_xslt_stylesheet_file";$funcdest[398]="domxml_xslt_stylesheet_file(string xsl file)<&%>Creates a DomXsltStylesheet Object from a xsl document in a file. (object)";$funclist[399]="dotnet_load";$funcdest[399]="dotnet_load(string assembly_name [, string datatype_name [, int codepage]])<&%>Loads a DOTNET module (int)";$funclist[400]="doubleval";$funcdest[400]="doubleval(?)<&%>Alias of floatval()<&%>(?)";$funclist[401]="each";$funcdest[401]="each(array array)<&%>Return the current key and value pair from an array and advance the array cursor (array)";$funclist[402]="easter_date";$funcdest[402]="easter_date([int year])<&%>Get UNIX timestamp for midnight on Easter of a given year (int)";$funclist[403]="easter_days";$funcdest[403]="easter_days([int year [, int method]])<&%>Get number of days after March 21 on which Easter falls for a given year (int)";$funclist[404]="ebcdic2ascii";$funcdest[404]="ebcdic2ascii(string ebcdic_str)<&%>Translate string from EBCDIC to ASCII (int)";$funclist[405]="echo";$funcdest[405]="echo(string arg1 [, string argn...])<&%>Output one or more strings (void)";$funclist[406]="empty";$funcdest[406]="empty(mixed var)<&%>Determine whether a variable is set (bool)";$funclist[407]="end";$funcdest[407]="end(array array)<&%>Set the internal pointer of an array to its last element (mixed)";$funclist[408]="ereg";$funcdest[408]="ereg(string pattern, string string [, array regs])<&%>Regular expression match (bool)";$funclist[409]="ereg_replace";$funcdest[409]="ereg_replace(string pattern, string replacement, string string)<&%>Replace regular expression (string)";$funclist[410]="eregi";$funcdest[410]="eregi(string pattern, string string [, array regs])<&%>case insensitive regular expression match (bool)";$funclist[411]="eregi_replace";$funcdest[411]="eregi_replace(string pattern, string replacement, string string)<&%>replace regular expression case insensitive (string)";$funclist[412]="error_log";$funcdest[412]="error_log(string message [, int message_type [, string destination [, string extra_headers]]])<&%>send an error message somewhere (int)";$funclist[413]="error_reporting";$funcdest[413]="error_reporting([int level])<&%>set which PHP errors are reported (int)";$funclist[414]="escapeshellarg";$funcdest[414]="escapeshellarg(string arg)<&%>escape a string to be used as a shell argument (string)";$funclist[415]="escapeshellcmd";$funcdest[415]="escapeshellcmd(string command)<&%>escape shell metacharacters (string)";$funclist[416]="eval";$funcdest[416]="eval(string code_str)<&%>Evaluate a string as PHP code (mixed)";$funclist[417]="exec";$funcdest[417]="exec(string command [, array output [, int return_var]])<&%>Execute an external program (string)";$funclist[418]="exif_imagetype";$funcdest[418]="exif_imagetype(string filename)<&%>Determine the type of an image (int)";$funclist[419]="exif_read_data";$funcdest[419]="exif_read_data(string filename [, string sections [, bool arrays [, bool thumbnail]]])<&%>Read the EXIF headers from JPEG or TIFF. This way you can read meta data generated by digital cameras. (array)";$funclist[420]="exif_thumbnail";$funcdest[420]="exif_thumbnail(string filename [, int &width [, int &height [, int &imagetype]]])<&%>Retrieve the embedded thumbnail of a TIFF or JPEG image (string)";$funclist[421]="exit";$funcdest[421]="exit([string status])<&%>Output a message and terminate the current script (void)";$funclist[422]="exp";$funcdest[422]="exp(float arg)<&%>Calculates the exponent of e (the Neperian or Natural logarithm base)<&%>(float)";$funclist[423]="explode";$funcdest[423]="explode(string separator, string string [, int limit])<&%>Split a string by string (array)";$funclist[424]="expm1";$funcdest[424]="expm1(float number)<&%>Returns exp(number)<&%>- 1, computed in a way that is accurate even when the value of number is close to zero (float)";$funclist[425]="extension_loaded";$funcdest[425]="extension_loaded(string name)<&%>Find out whether an extension is loaded (bool)";$funclist[426]="extract";$funcdest[426]="extract(array var_array [, int extract_type [, string prefix]])<&%>Import variables into the current symbol table from an array (int)";$funclist[427]="ezmlm_hash";$funcdest[427]="ezmlm_hash(string addr)<&%>Calculate the hash value needed by EZMLM (int)";$funclist[428]="fbsql_affected_rows";$funcdest[428]="fbsql_affected_rows([resource link_identifier])<&%>Get number of affected rows in previous FrontBase operation (int)";$funclist[429]="fbsql_autocommit";$funcdest[429]="fbsql_autocommit(resource link_identifier [, bool OnOff])<&%>Enable or disable autocommit (bool)";$funclist[430]="fbsql_change_user";$funcdest[430]="fbsql_change_user(string user, string password [, string database [, resource link_identifier]])<&%>Change logged in user of the active connection (resource)";$funclist[431]="fbsql_close";$funcdest[431]="fbsql_close([resource link_identifier])<&%>Close FrontBase connection (bool)";$funclist[432]="fbsql_commit";$funcdest[432]="fbsql_commit([resource link_identifier])<&%>Commits a transaction to the database (bool)";$funclist[433]="fbsql_connect";$funcdest[433]="fbsql_connect([string hostname [, string username [, string password]]])<&%>Open a connection to a FrontBase Server (resource)";$funclist[434]="fbsql_create_blob";$funcdest[434]="fbsql_create_blob(string blob_data [, resource link_identifier])<&%>Create a BLOB (string)";$funclist[435]="fbsql_create_clob";$funcdest[435]="fbsql_create_clob(string clob_data [, resource link_identifier])<&%>Create a CLOB (string)";$funclist[436]="fbsql_create_db";$funcdest[436]="fbsql_create_db(string database name [, resource link_identifier])<&%>Create a FrontBase database (bool)";$funclist[437]="fbsql_data_seek";$funcdest[437]="fbsql_data_seek(resource result_identifier, int row_number)<&%>Move internal result pointer (bool)";$funclist[438]="fbsql_database";$funcdest[438]="fbsql_database(resource link_identifier [, string database])<&%>Get or set the database name used with a connection (string)";$funclist[439]="fbsql_database_password";$funcdest[439]="fbsql_database_password(resource link_identifier [, string database_password])<&%>Sets or retrieves the password for a FrontBase database (string)";$funclist[440]="fbsql_db_query";$funcdest[440]="fbsql_db_query(string database, string query [, resource link_identifier])<&%>Send a FrontBase query (resource)";$funclist[441]="fbsql_db_status";$funcdest[441]="fbsql_db_status(string database_name [, resource link_identifier])<&%>Get the status for a given database (int)";$funclist[442]="fbsql_drop_db";$funcdest[442]="fbsql_drop_db(string database_name [, resource link_identifier])<&%>Drop (delete)<&%>a FrontBase database (bool)";$funclist[443]="fbsql_errno";$funcdest[443]="fbsql_errno([resource link_identifier])<&%>Returns the numerical value of the error message from previous FrontBase operation (int)";$funclist[444]="fbsql_error";$funcdest[444]="fbsql_error([resource link_identifier])<&%>Returns the text of the error message from previous FrontBase operation (string)";$funclist[445]="fbsql_fetch_array";$funcdest[445]="fbsql_fetch_array(resource result [, int result_type])<&%>Fetch a result row as an associative array, a numeric array, or both (array)";$funclist[446]="fbsql_fetch_assoc";$funcdest[446]="fbsql_fetch_assoc(resource result)<&%>Fetch a result row as an associative array (array)";$funclist[447]="fbsql_fetch_field";$funcdest[447]="fbsql_fetch_field(resource result [, int field_offset])<&%>Get column information from a result and return as an object (object)";$funclist[448]="fbsql_fetch_lengths";$funcdest[448]="fbsql_fetch_lengths([resource result])<&%>Get the length of each output in a result (array)";$funclist[449]="fbsql_fetch_object";$funcdest[449]="fbsql_fetch_object(resource result [, int result_type])<&%>Fetch a result row as an object (object)";$funclist[450]="fbsql_fetch_row";$funcdest[450]="fbsql_fetch_row(resource result)<&%>Get a result row as an enumerated array (array)";$funclist[451]="fbsql_field_flags";$funcdest[451]="fbsql_field_flags(resource result, int field_offset)<&%>Get the flags associated with the specified field in a result (string)";$funclist[452]="fbsql_field_len";$funcdest[452]="fbsql_field_len(resource result, int field_offset)<&%>Returns the length of the specified field (int)";$funclist[453]="fbsql_field_name";$funcdest[453]="fbsql_field_name(resource result, int field_index)<&%>Get the name of the specified field in a result (string)";$funclist[454]="fbsql_field_seek";$funcdest[454]="fbsql_field_seek(resource result, int field_offset)<&%>Set result pointer to a specified field offset (bool)";$funclist[455]="fbsql_field_table";$funcdest[455]="fbsql_field_table(resource result, int field_offset)<&%>Get name of the table the specified field is in (string)";$funclist[456]="fbsql_field_type";$funcdest[456]="fbsql_field_type(resource result, int field_offset)<&%>Get the type of the specified field in a result (string)";$funclist[457]="fbsql_free_result";$funcdest[457]="fbsql_free_result(resource result)<&%>Free result memory (bool)";$funclist[458]="fbsql_get_autostart_info";$funcdest[458]="fbsql_get_autostart_info([resource link_identifier])<&%>No description given yet (array)";$funclist[459]="fbsql_hostname";$funcdest[459]="fbsql_hostname(resource link_identifier [, string host_name])<&%>Get or set the host name used with a connection (string)";$funclist[460]="fbsql_insert_id";$funcdest[460]="fbsql_insert_id([resource link_identifier])<&%>Get the id generated from the previous INSERT operation (int)";$funclist[461]="fbsql_list_dbs";$funcdest[461]="fbsql_list_dbs([resource link_identifier])<&%>List databases available on a FrontBase server (resource)";$funclist[462]="fbsql_list_fields";$funcdest[462]="fbsql_list_fields(string database_name, string table_name [, resource link_identifier])<&%>List FrontBase result fields (resource)";$funclist[463]="fbsql_list_tables";$funcdest[463]="fbsql_list_tables(string database [, resource link_identifier])<&%>List tables in a FrontBase database (resource)";$funclist[464]="fbsql_next_result";$funcdest[464]="fbsql_next_result(resource result_id)<&%>Move the internal result pointer to the next result (bool)";$funclist[465]="fbsql_num_fields";$funcdest[465]="fbsql_num_fields(resource result)<&%>Get number of fields in result (int)";$funclist[466]="fbsql_num_rows";$funcdest[466]="fbsql_num_rows(resource result)<&%>Get number of rows in result (int)";$funclist[467]="fbsql_password";$funcdest[467]="fbsql_password(resource link_identifier [, string password])<&%>Get or set the user password used with a connection (string)";$funclist[468]="fbsql_pconnect";$funcdest[468]="fbsql_pconnect([string hostname [, string username [, string password]]])<&%>Open a persistent connection to a FrontBase Server (resource)";$funclist[469]="fbsql_query";$funcdest[469]="fbsql_query(string query [, resource link_identifier])<&%>Send a FrontBase query (resource)";$funclist[470]="fbsql_read_blob";$funcdest[470]="fbsql_read_blob(string blob_handle [, resource link_identifier])<&%>Read a BLOB from the database (string)";$funclist[471]="fbsql_read_clob";$funcdest[471]="fbsql_read_clob(string clob_handle [, resource link_identifier])<&%>Read a CLOB from the database (string)";$funclist[472]="fbsql_result";$funcdest[472]="fbsql_result(resource result, int row [, mixed field])<&%>Get result data (mixed)";$funclist[473]="fbsql_rollback";$funcdest[473]="fbsql_rollback([resource link_identifier])<&%>Rollback a transaction to the database (bool)";$funclist[474]="fbsql_select_db";$funcdest[474]="fbsql_select_db(string database_name [, resource link_identifier])<&%>Select a FrontBase database (bool)";$funclist[475]="fbsql_set_lob_mode";$funcdest[475]="fbsql_set_lob_mode(resource result, string database_name)<&%>Set the LOB retrieve mode for a FrontBase result set (bool)";$funclist[476]="fbsql_set_transaction";$funcdest[476]="fbsql_set_transaction(resource link_identifier, int Locking, int Isolation)<&%>Set the transaction locking and isolation (void)";$funclist[477]="fbsql_start_db";$funcdest[477]="fbsql_start_db(string database_name [, resource link_identifier])<&%>Start a database on local or remote server (bool)";$funclist[478]="fbsql_stop_db";$funcdest[478]="fbsql_stop_db(string database_name [, resource link_identifier])<&%>Stop a database on local or remote server (bool)";$funclist[479]="fbsql_tablename";$funcdest[479]="fbsql_tablename(resource result, int i)<&%>Get table name of field (string)";$funclist[480]="fbsql_username";$funcdest[480]="fbsql_username(resource link_identifier [, string username])<&%>Get or set the host user used with a connection (string)";$funclist[481]="fbsql_warnings";$funcdest[481]="fbsql_warnings([bool OnOff])<&%>Enable or disable FrontBase warnings (bool)";$funclist[482]="fclose";$funcdest[482]="fclose(resource handle)<&%>Closes an open file pointer (bool)";$funclist[483]="fdf_add_doc_javascript";$funcdest[483]="fdf_add_doc_javascript(resource fdfdoc, string script_name, string script_code)<&%>Adds javascript code to the FDF document (bool)";$funclist[484]="fdf_add_template";$funcdest[484]="fdf_add_template(resource fdfdoc, int newpage, string filename, string template, int rename)<&%>Adds a template into the FDF document (bool)";$funclist[485]="fdf_close";$funcdest[485]="fdf_close(resource fdf_document)<&%>Close an FDF document (bool)";$funclist[486]="fdf_create";$funcdest[486]="fdf_create(void)<&%>Create a new FDF document (resource)";$funclist[487]="fdf_enum_values";$funcdest[487]="fdf_enum_values(resource fdfdoc, callback function [, mixed userdata])<&%>Call a user defined function for each document value (bool)";$funclist[488]="fdf_errno";$funcdest[488]="fdf_errno(void)<&%>Return error code for last fdf operation (int)";$funclist[489]="fdf_error";$funcdest[489]="fdf_error([int error_code])<&%>Return error description for fdf error code (string)";$funclist[490]="fdf_get_ap";$funcdest[490]="fdf_get_ap(resource fdf_document, string field, int face, string filename)<&%>Get the appearance of a field (bool)";$funclist[491]="fdf_get_attachment";$funcdest[491]="fdf_get_attachment(resource fdf_document, string fieldname, string savepath)<&%>Extracts uploaded file embedded in the FDF (array)";$funclist[492]="fdf_get_encoding";$funcdest[492]="fdf_get_encoding(resource fdf_document)<&%>Get the value of the /Encoding key (string)";$funclist[493]="fdf_get_file";$funcdest[493]="fdf_get_file(resource fdf_document)<&%>Get the value of the /F key (string)";$funclist[494]="fdf_get_flags";$funcdest[494]="fdf_get_flags(void)<&%>Gets the flags of a field ()";$funclist[495]="fdf_get_opt";$funcdest[495]="fdf_get_opt(resource fdfdof, string fieldname [, int element])<&%>Gets a value from the opt array of a field (mixed)";$funclist[496]="fdf_get_status";$funcdest[496]="fdf_get_status(resource fdf_document)<&%>Get the value of the /STATUS key (string)";$funclist[497]="fdf_get_value";$funcdest[497]="fdf_get_value(resource fdf_document, string fieldname [, int which])<&%>Get the value of a field (string)";$funclist[498]="fdf_get_version";$funcdest[498]="fdf_get_version([resource fdf_document])<&%>Gets version number for FDF api or file (string)";$funclist[499]="fdf_header";$funcdest[499]="fdf_header(void)<&%>Sets FDF-specific output headers (bool)";$funclist[500]="fdf_next_field_name";$funcdest[500]="fdf_next_field_name(resource fdf_document [, string fieldname])<&%>Get the next field name (string)";$funclist[501]="fdf_open";$funcdest[501]="fdf_open(string filename)<&%>Open a FDF document (resource)";$funclist[502]="fdf_open_string";$funcdest[502]="fdf_open_string(string fdf_data)<&%>Read a FDF document from a string (resource)";$funclist[503]="fdf_remove_item";$funcdest[503]="fdf_remove_item(resource fdfdoc, string fieldname, int item)<&%>Sets target frame for form (bool)";$funclist[504]="fdf_save";$funcdest[504]="fdf_save(resource fdf_document [, string filename])<&%>Save a FDF document (bool)";$funclist[505]="fdf_save_string";$funcdest[505]="fdf_save_string(resource fdf_document)<&%>Returns the FDF document as a string (string)";$funclist[506]="fdf_set_ap";$funcdest[506]="fdf_set_ap(resource fdf_document, string field_name, int face, string filename, int page_number)<&%>Set the appearance of a field (bool)";$funclist[507]="fdf_set_encoding";$funcdest[507]="fdf_set_encoding(resource fdf_document, string encoding)<&%>Sets FDF character encoding (bool)";$funclist[508]="fdf_set_file";$funcdest[508]="fdf_set_file(resource fdf_document, string url [, string target_frame])<&%>Set PDF document to display FDF data in (bool)";$funclist[509]="fdf_set_flags";$funcdest[509]="fdf_set_flags(resource fdf_document, string fieldname, int whichFlags, int newFlags)<&%>Sets a flag of a field (bool)";$funclist[510]="fdf_set_javascript_action";$funcdest[510]="fdf_set_javascript_action(resource fdf_document, string fieldname, int trigger, string script)<&%>Sets an javascript action of a field (bool)";$funclist[511]="fdf_set_opt";$funcdest[511]="fdf_set_opt(resource fdf_document, string fieldname, int element, string str1, string str2)<&%>Sets an option of a field (bool)";$funclist[512]="fdf_set_status";$funcdest[512]="fdf_set_status(resource fdf_document, string status)<&%>Set the value of the /STATUS key (bool)";$funclist[513]="fdf_set_submit_form_action";$funcdest[513]="fdf_set_submit_form_action(resource fdf_document, string fieldname, int trigger, string script, int flags)<&%>Sets a submit form action of a field (bool)";$funclist[514]="fdf_set_target_frame";$funcdest[514]="fdf_set_target_frame(resource fdf_document, string frame_name)<&%>Set target frame for form display (bool)";$funclist[515]="fdf_set_value";$funcdest[515]="fdf_set_value(resource fdf_document, string fieldname, mixed value [, int isName])<&%>Set the value of a field (bool)";$funclist[516]="fdf_set_version";$funcdest[516]="fdf_set_version(resource fdf_document, string version)<&%>Sets version number for a FDF file (string)";$funclist[517]="feof";$funcdest[517]="feof(resource handle)<&%>Tests for end-of-file on a file pointer (bool)";$funclist[518]="fflush";$funcdest[518]="fflush(resource handle)<&%>Flushes the output to a file (bool)";$funclist[519]="fgetc";$funcdest[519]="fgetc(resource handle)<&%>Gets character from file pointer (string)";$funclist[520]="fgetcsv";$funcdest[520]="fgetcsv(resource handle, int length [, string delimiter [, string enclosure]])<&%>Gets line from file pointer and parse for CSV fields (array)";$funclist[521]="fgets";$funcdest[521]="fgets(resource handle [, int length])<&%>Gets line from file pointer (string)";$funclist[522]="fgetss";$funcdest[522]="fgetss(resource handle, int length [, string allowable_tags])<&%>Gets line from file pointer and strip HTML tags (string)";$funclist[523]="file";$funcdest[523]="file(string filename [, int use_include_path [, resource context]])<&%>Reads entire file into an array (array)";$funclist[524]="file_exists";$funcdest[524]="file_exists(string filename)<&%>Checks whether a file or directory exists (bool)";$funclist[525]="file_get_contents";$funcdest[525]="file_get_contents(string filename [, int use_include_path [, resource context]])<&%>Reads entire file into a string (string)";$funclist[526]="file_put_contents";$funcdest[526]="file_put_contents(string filename, string data [, int flags [, resource context]])<&%>Write a string to a file (int)";$funclist[527]="fileatime";$funcdest[527]="fileatime(string filename)<&%>Gets last access time of file (int)";$funclist[528]="filectime";$funcdest[528]="filectime(string filename)<&%>Gets inode change time of file (int)";$funclist[529]="filegroup";$funcdest[529]="filegroup(string filename)<&%>Gets file group (int)";$funclist[530]="fileinode";$funcdest[530]="fileinode(string filename)<&%>Gets file inode (int)";$funclist[531]="filemtime";$funcdest[531]="filemtime(string filename)<&%>Gets file modification time (int)";$funclist[532]="fileowner";$funcdest[532]="fileowner(string filename)<&%>Gets file owner (int)";$funclist[533]="fileperms";$funcdest[533]="fileperms(string filename)<&%>Gets file permissions (int)";$funclist[534]="filepro";$funcdest[534]="filepro(string directory)<&%>Read and verify the map file (bool)";$funclist[535]="filepro_fieldcount";$funcdest[535]="filepro_fieldcount(void)<&%>Find out how many fields are in a filePro database (int)";$funclist[536]="filepro_fieldname";$funcdest[536]="filepro_fieldname(int field_number)<&%>Gets the name of a field (string)";$funclist[537]="filepro_fieldtype";$funcdest[537]="filepro_fieldtype(int field_number)<&%>Gets the type of a field (string)";$funclist[538]="filepro_fieldwidth";$funcdest[538]="filepro_fieldwidth(int field_number)<&%>Gets the width of a field (int)";$funclist[539]="filepro_retrieve";$funcdest[539]="filepro_retrieve(int row_number, int field_number)<&%>Retrieves data from a filePro database (string)";$funclist[540]="filepro_rowcount";$funcdest[540]="filepro_rowcount(void)<&%>Find out how many rows are in a filePro database (int)";$funclist[541]="filesize";$funcdest[541]="filesize(string filename)<&%>Gets file size (int)";$funclist[542]="filetype";$funcdest[542]="filetype(string filename)<&%>Gets file type (string)";$funclist[543]="floatval";$funcdest[543]="floatval(mixed var)<&%>Get float value of a variable (float)";$funclist[544]="flock";$funcdest[544]="flock(resource handle, int operation [, int &wouldblock])<&%>Portable advisory file locking (bool)";$funclist[545]="floor";$funcdest[545]="floor(float value)<&%>Round fractions down (float)";$funclist[546]="flush";$funcdest[546]="flush(void)<&%>Flush the output buffer (void)";$funclist[547]="fmod";$funcdest[547]="fmod(float x, float y)<&%>Returns the floating point remainder (modulo)<&%>of the division of the arguments (float)";$funclist[548]="fnmatch";$funcdest[548]="fnmatch(string pattern, string string [, int flags])<&%>Match filename against a  pattern (array)";$funclist[549]="fopen";$funcdest[549]="fopen(string filename, string mode [, int use_include_path [, resource zcontext]])<&%>Opens file or URL (resource)";$funclist[550]="fpassthru";$funcdest[550]="fpassthru(resource handle)<&%>Output all remaining data on a file pointer (int)";$funclist[551]="fprintf";$funcdest[551]="fprintf(resource handle, string format [, mixed args])<&%>Write a formatted string to a stream (int)";$funclist[552]="fputs";$funcdest[552]="fputs(?)<&%>Alias of fwrite()<&%>(?)";$funclist[553]="fread";$funcdest[553]="fread(resource handle, int length)<&%>Binary-safe file read (string)";$funclist[554]="fribidi_log2vis";$funcdest[554]="fribidi_log2vis(string str, string direction, int charset)<&%>Convert a logical string to a visual one (string)";$funclist[555]="fscanf";$funcdest[555]="fscanf(resource handle, string format [, string var1])<&%>Parses input from a file according to a format (mixed)";$funclist[556]="fseek";$funcdest[556]="fseek(resource handle, int offset [, int whence])<&%>Seeks on a file pointer (int)";$funclist[557]="fsockopen";$funcdest[557]="fsockopen(string hostname, int port [, int errno [, string errstr [, float timeout]]])<&%>Open Internet or Unix domain socket connection (int)";$funclist[558]="fstat";$funcdest[558]="fstat(resource handle)<&%>Gets information about a file using an open file pointer (array)";$funclist[559]="ftell";$funcdest[559]="ftell(resource handle)<&%>Tells file pointer read/write position (int)";$funclist[560]="ftok";$funcdest[560]="ftok(string pathname, string proj)<&%>Convert a pathname and a project identifier to a System V IPC key (int)";$funclist[561]="ftp_cdup";$funcdest[561]="ftp_cdup(resource ftp_stream)<&%>Changes to the parent directory (bool)";$funclist[562]="ftp_chdir";$funcdest[562]="ftp_chdir(resource ftp_stream, string directory)<&%>Changes directories on a FTP server (bool)";$funclist[563]="ftp_chmod";$funcdest[563]="ftp_chmod(resource ftp_stream, int mode, string filename)<&%>Set permissions on a file via FTP (string)";$funclist[564]="ftp_close";$funcdest[564]="ftp_close(resource ftp_stream)<&%>Closes an FTP connection (void)";$funclist[565]="ftp_connect";$funcdest[565]="ftp_connect(string host [, int port [, int timeout]])<&%>Opens an FTP connection (resource)";$funclist[566]="ftp_delete";$funcdest[566]="ftp_delete(resource ftp_stream, string path)<&%>Deletes a file on the FTP server (bool)";$funclist[567]="ftp_exec";$funcdest[567]="ftp_exec(resource ftp_stream, string command)<&%>Requests execution of a program on the FTP server (bool)";$funclist[568]="ftp_fget";$funcdest[568]="ftp_fget(resource ftp_stream, resource handle, string remote_file, int mode [, int resumepos])<&%>Downloads a file from the FTP server and saves to an open file (bool)";$funclist[569]="ftp_fput";$funcdest[569]="ftp_fput(resource ftp_stream, string remote_file, resource handle, int mode [, int startpos])<&%>Uploads from an open file to the FTP server (bool)";$funclist[570]="ftp_get";$funcdest[570]="ftp_get(resource ftp_stream, string local_file, string remote_file, int mode [, int resumepos])<&%>Downloads a file from the FTP server (bool)";$funclist[571]="ftp_get_option";$funcdest[571]="ftp_get_option(resource ftp_stream, int option)<&%>Retrieves various runtime behaviours of the current FTP stream (mixed)";$funclist[572]="ftp_login";$funcdest[572]="ftp_login(resource ftp_stream, string username, string password)<&%>Logs in to an FTP connection (bool)";$funclist[573]="ftp_mdtm";$funcdest[573]="ftp_mdtm(resource ftp_stream, string remote_file)<&%>Returns the last modified time of the given file (int)";$funclist[574]="ftp_mkdir";$funcdest[574]="ftp_mkdir(resource ftp_stream, string directory)<&%>Creates a directory (string)";$funclist[575]="ftp_nb_continue";$funcdest[575]="ftp_nb_continue(resource ftp_stream)<&%>Continues retrieving/sending a file (non-blocking)<&%>(bool)";$funclist[576]="ftp_nb_fget";$funcdest[576]="ftp_nb_fget(resource ftp_stream, resource handle, string remote_file, int mode [, int resumepos])<&%>Retrieves a file from the FTP server and writes it to an open file (non-blocking)<&%>(bool)";$funclist[577]="ftp_nb_fput";$funcdest[577]="ftp_nb_fput(resource ftp_stream, string remote_file, resource handle, int mode [, int startpos])<&%>Stores a file from an open file to the FTP server (non-blocking)<&%>(bool)";$funclist[578]="ftp_nb_get";$funcdest[578]="ftp_nb_get(resource ftp_stream, string local_file, string remote_file, int mode [, int resumepos])<&%>Retrieves a file from the FTP server and writes it to a local file (non-blocking)<&%>(bool)";$funclist[579]="ftp_nb_put";$funcdest[579]="ftp_nb_put(resource ftp_stream, string remote_file, string local_file, int mode [, int startpos])<&%>Stores a file on the FTP server (non-blocking)<&%>(bool)";$funclist[580]="ftp_nlist";$funcdest[580]="ftp_nlist(resource ftp_stream, string directory)<&%>Returns a list of files in the given directory (array)";$funclist[581]="ftp_pasv";$funcdest[581]="ftp_pasv(resource ftp_stream, bool pasv)<&%>Turns passive mode on or off (bool)";$funclist[582]="ftp_put";$funcdest[582]="ftp_put(resource ftp_stream, string remote_file, string local_file, int mode [, int startpos])<&%>Uploads a file to the FTP server (bool)";$funclist[583]="ftp_pwd";$funcdest[583]="ftp_pwd(resource ftp_stream)<&%>Returns the current directory name (string)";$funclist[584]="ftp_quit";$funcdest[584]="ftp_quit(?)<&%>Alias of ftp_close()<&%>(?)";$funclist[585]="ftp_raw";$funcdest[585]="ftp_raw(resource ftp_stream, string command)<&%>Sends an arbitrary command to an FTP server (array)";$funclist[586]="ftp_rawlist";$funcdest[586]="ftp_rawlist(resource ftp_stream, string directory)<&%>Returns a detailed list of files in the given directory (array)";$funclist[587]="ftp_rename";$funcdest[587]="ftp_rename(resource ftp_stream, string from, string to)<&%>Renames a file on the FTP server (bool)";$funclist[588]="ftp_rmdir";$funcdest[588]="ftp_rmdir(resource ftp_stream, string directory)<&%>Removes a directory (bool)";$funclist[589]="ftp_set_option";$funcdest[589]="ftp_set_option(resource ftp_stream, int option, mixed value)<&%>Set miscellaneous runtime FTP options (bool)";$funclist[590]="ftp_site";$funcdest[590]="ftp_site(resource ftp_stream, string cmd)<&%>Sends a SITE command to the server (bool)";$funclist[591]="ftp_size";$funcdest[591]="ftp_size(resource ftp_stream, string remote_file)<&%>Returns the size of the given file (int)";$funclist[592]="ftp_ssl_connect";$funcdest[592]="ftp_ssl_connect(string host [, int port [, int timeout]])<&%>Opens an Secure SSL-FTP connection (resource)";$funclist[593]="ftp_systype";$funcdest[593]="ftp_systype(resource ftp_stream)<&%>Returns the system type identifier of the remote FTP server (string)";$funclist[594]="ftruncate";$funcdest[594]="ftruncate(resource handle, int size)<&%>Truncates a file to a given length (bool)";$funclist[595]="func_get_arg";$funcdest[595]="func_get_arg(int arg_num)<&%>Return an item from the argument list (mixed)";$funclist[596]="func_get_args";$funcdest[596]="func_get_args(void)<&%>Returns an array comprising a function's argument list (array)";$funclist[597]="func_num_args";$funcdest[597]="func_num_args(void)<&%>Returns the number of arguments passed to the function (int)";$funclist[598]="function_exists";$funcdest[598]="function_exists(string function_name)<&%>Return TRUE if the given function has been defined (bool)";$funclist[599]="fwrite";$funcdest[599]="fwrite(resource handle, string string [, int length])<&%>Binary-safe file write (int)";$funclist[600]="gd_info";$funcdest[600]="gd_info(void)<&%>Retrieve information about the currently installed GD library (array)";$funclist[601]="get_browser";$funcdest[601]="get_browser([string user_agent])<&%>Tells what the user's browser is capable of (object)";$funclist[602]="get_cfg_var";$funcdest[602]="get_cfg_var(string varname)<&%>Gets the value of a PHP configuration option (string)";$funclist[603]="get_class";$funcdest[603]="get_class(object obj)<&%>Returns the name of the class of an object (string)";$funclist[604]="get_class_methods";$funcdest[604]="get_class_methods(mixed class_name)<&%>Returns an array of class methods' names (array)";$funclist[605]="get_class_vars";$funcdest[605]="get_class_vars(string class_name)<&%>Returns an array of default properties of the class (array)";$funclist[606]="get_current_user";$funcdest[606]="get_current_user(void)<&%>Gets the name of the owner of the current PHP script (string)";$funclist[607]="get_declared_classes";$funcdest[607]="get_declared_classes(void)<&%>Returns an array with the name of the defined classes (array)";$funclist[608]="get_defined_constants";$funcdest[608]="get_defined_constants(void)<&%>Returns an associative array with the names of all the constants and their values (array)";$funclist[609]="get_defined_functions";$funcdest[609]="get_defined_functions(void)<&%>Returns an array of all defined functions (array)";$funclist[610]="get_defined_vars";$funcdest[610]="get_defined_vars(void)<&%>Returns an array of all defined variables (array)";$funclist[611]="get_extension_funcs";$funcdest[611]="get_extension_funcs(string module_name)<&%>Returns an array with the names of the functions of a module (array)";$funclist[612]="get_html_translation_table";$funcdest[612]="get_html_translation_table(int table [, int quote_style])<&%>Returns the translation table used by htmlspecialchars()<&%>and htmlentities()<&%>(array)";$funclist[613]="get_included_files";$funcdest[613]="get_included_files(void)<&%>Returns an array with the names of included or required files (array)";$funclist[614]="get_loaded_extensions";$funcdest[614]="get_loaded_extensions(void)<&%>Returns an array with the names of all modules compiled and loaded (array)";$funclist[615]="get_magic_quotes_gpc";$funcdest[615]="get_magic_quotes_gpc(void)<&%>Gets the current active configuration setting of magic quotes gpc (int)";$funclist[616]="get_magic_quotes_runtime";$funcdest[616]="get_magic_quotes_runtime(void)<&%>Gets the current active configuration setting of magic_quotes_runtime (int)";$funclist[617]="get_meta_tags";$funcdest[617]="get_meta_tags(string filename [, int use_include_path])<&%>Extracts all meta tag content attributes from a file and returns an array (array)";$funclist[618]="get_object_vars";$funcdest[618]="get_object_vars(object obj)<&%>Returns an associative array of object properties (array)";$funclist[619]="get_parent_class";$funcdest[619]="get_parent_class(mixed obj)<&%>Retrieves the parent class name for object or class (string)";$funclist[620]="get_required_files";$funcdest[620]="get_required_files(?)<&%>Alias of get_included_files()<&%>(?)";$funclist[621]="get_resource_type";$funcdest[621]="get_resource_type(resource handle)<&%>Returns the resource type (string)";$funclist[622]="getallheaders";$funcdest[622]="getallheaders(void)<&%>Fetch all HTTP request headers (array)";$funclist[623]="getcwd";$funcdest[623]="getcwd(void)<&%>gets the current working directory (string)";$funclist[624]="getdate";$funcdest[624]="getdate([int timestamp])<&%>Get date/time information (array)";$funclist[625]="getenv";$funcdest[625]="getenv(string varname)<&%>Gets the value of an environment variable (string)";$funclist[626]="gethostbyaddr";$funcdest[626]="gethostbyaddr(string ip_address)<&%>Get the Internet host name corresponding to a given IP address (string)";$funclist[627]="gethostbyname";$funcdest[627]="gethostbyname(string hostname)<&%>Get the IP address corresponding to a given Internet host name (string)";$funclist[628]="gethostbynamel";$funcdest[628]="gethostbynamel(string hostname)<&%>Get a list of IP addresses corresponding to a given Internet host name (array)";$funclist[629]="getimagesize";$funcdest[629]="getimagesize(string filename [, array imageinfo])<&%>Get the size of an image (array)";$funclist[630]="getlastmod";$funcdest[630]="getlastmod(void)<&%>Gets time of last page modification (int)";$funclist[631]="getmxrr";$funcdest[631]="getmxrr(string hostname, array mxhosts [, array weight])<&%>Get MX records corresponding to a given Internet host name (int)";$funclist[632]="getmygid";$funcdest[632]="getmygid(void)<&%>Get PHP script owner's GID (int)";$funclist[633]="getmyinode";$funcdest[633]="getmyinode(void)<&%>Gets the inode of the current script (int)";$funclist[634]="getmypid";$funcdest[634]="getmypid(void)<&%>Gets PHP's process ID (int)";$funclist[635]="getmyuid";$funcdest[635]="getmyuid(void)<&%>Gets PHP script owner's UID (int)";$funclist[636]="getopt";$funcdest[636]="getopt(string options)<&%>Gets options from the command line argument list (string)";$funclist[637]="getprotobyname";$funcdest[637]="getprotobyname(string name)<&%>Get protocol number associated with protocol name (int)";$funclist[638]="getprotobynumber";$funcdest[638]="getprotobynumber(int number)<&%>Get protocol name associated with protocol number (string)";$funclist[639]="getrandmax";$funcdest[639]="getrandmax(void)<&%>Show largest possible random value (int)";$funclist[640]="getrusage";$funcdest[640]="getrusage([int who])<&%>Gets the current resource usages (array)";$funclist[641]="getservbyname";$funcdest[641]="getservbyname(string service, string protocol)<&%>Get port number associated with an Internet service and protocol (int)";$funclist[642]="getservbyport";$funcdest[642]="getservbyport(int port, string protocol)<&%>Get Internet service which corresponds to port and protocol (string)";$funclist[643]="gettext";$funcdest[643]="gettext(string message)<&%>Lookup a message in the current domain (string)";$funclist[644]="gettimeofday";$funcdest[644]="gettimeofday(void)<&%>Get current time (array)";$funclist[645]="gettype";$funcdest[645]="gettype(mixed var)<&%>Get the type of a variable (string)";$funclist[646]="glob";$funcdest[646]="glob(string pattern [, int flags])<&%>Find pathnames matching a pattern (array)";$funclist[647]="gmdate";$funcdest[647]="gmdate(string format [, int timestamp])<&%>Format a GMT/UTC date/time (string)";$funclist[648]="gmmktime";$funcdest[648]="gmmktime([int hour [, int minute [, int second [, int month [, int day [, int year [, int is_dst]]]]]]])<&%>Get UNIX timestamp for a GMT date (int)";$funclist[649]="gmp_abs";$funcdest[649]="gmp_abs(resource a)<&%>Absolute value (resource)";$funclist[650]="gmp_add";$funcdest[650]="gmp_add(resource a, resource b)<&%>Add numbers (resource)";$funclist[651]="gmp_and";$funcdest[651]="gmp_and(resource a, resource b)<&%>Logical AND (resource)";$funclist[652]="gmp_clrbit";$funcdest[652]="gmp_clrbit(resource &a, int index)<&%>Clear bit (resource)";$funclist[653]="gmp_cmp";$funcdest[653]="gmp_cmp(resource a, resource b)<&%>Compare numbers (int)";$funclist[654]="gmp_com";$funcdest[654]="gmp_com(resource a)<&%>Calculates one's complement of a (resource)";$funclist[655]="gmp_div";$funcdest[655]="gmp_div(?)<&%>Alias of gmp_div_q()<&%>(?)";$funclist[656]="gmp_div_q";$funcdest[656]="gmp_div_q(resource a, resource b [, int round])<&%>Divide numbers (resource)";$funclist[657]="gmp_div_qr";$funcdest[657]="gmp_div_qr(resource n, resource d [, int round])<&%>Divide numbers and get quotient and remainder (array)";$funclist[658]="gmp_div_r";$funcdest[658]="gmp_div_r(resource n, resource d [, int round])<&%>Remainder of the division of numbers (resource)";$funclist[659]="gmp_divexact";$funcdest[659]="gmp_divexact(resource n, resource d)<&%>Exact division of numbers (resource)";$funclist[660]="gmp_fact";$funcdest[660]="gmp_fact(int a)<&%>Factorial (resource)";$funclist[661]="gmp_gcd";$funcdest[661]="gmp_gcd(resource a, resource b)<&%>Calculate GCD (resource)";$funclist[662]="gmp_gcdext";$funcdest[662]="gmp_gcdext(resource a, resource b)<&%>Calculate GCD and multipliers (array)";$funclist[663]="gmp_hamdist";$funcdest[663]="gmp_hamdist(resource a, resource b)<&%>Hamming distance (int)";$funclist[664]="gmp_init";$funcdest[664]="gmp_init(mixed number)<&%>Create GMP number (resource)";$funclist[665]="gmp_intval";$funcdest[665]="gmp_intval(resource gmpnumber)<&%>Convert GMP number to integer (int)";$funclist[666]="gmp_invert";$funcdest[666]="gmp_invert(resource a, resource b)<&%>Inverse by modulo (resource)";$funclist[667]="gmp_jacobi";$funcdest[667]="gmp_jacobi(resource a, resource p)<&%>Jacobi symbol (int)";$funclist[668]="gmp_legendre";$funcdest[668]="gmp_legendre(resource a, resource p)<&%>Legendre symbol (int)";$funclist[669]="gmp_mod";$funcdest[669]="gmp_mod(resource n, resource d)<&%>Modulo operation (resource)";$funclist[670]="gmp_mul";$funcdest[670]="gmp_mul(resource a, resource b)<&%>Multiply numbers (resource)";$funclist[671]="gmp_neg";$funcdest[671]="gmp_neg(resource a)<&%>Negate number (resource)";$funclist[672]="gmp_or";$funcdest[672]="gmp_or(resource a, resource b)<&%>Logical OR (resource)";$funclist[673]="gmp_perfect_square";$funcdest[673]="gmp_perfect_square(resource a)<&%>Perfect square check (bool)";$funclist[674]="gmp_popcount";$funcdest[674]="gmp_popcount(resource a)<&%>Population count (int)";$funclist[675]="gmp_pow";$funcdest[675]="gmp_pow(resource base, int exp)<&%>Raise number into power (resource)";$funclist[676]="gmp_powm";$funcdest[676]="gmp_powm(resource base, resource exp, resource mod)<&%>Raise number into power with modulo (resource)";$funclist[677]="gmp_prob_prime";$funcdest[677]="gmp_prob_prime(resource a [, int reps])<&%>Check if number is 'probably prime' (int)";$funclist[678]="gmp_random";$funcdest[678]="gmp_random(int limiter)<&%>Random number (resource)";$funclist[679]="gmp_scan0";$funcdest[679]="gmp_scan0(resource a, int start)<&%>Scan for 0 (int)";$funclist[680]="gmp_scan1";$funcdest[680]="gmp_scan1(resource a, int start)<&%>Scan for 1 (int)";$funclist[681]="gmp_setbit";$funcdest[681]="gmp_setbit(resource &a, int index [, bool set_clear])<&%>Set bit (resource)";$funclist[682]="gmp_sign";$funcdest[682]="gmp_sign(resource a)<&%>Sign of number (int)";$funclist[683]="gmp_sqrt";$funcdest[683]="gmp_sqrt(resource a)<&%>Square root (resource)";$funclist[684]="gmp_sqrtrm";$funcdest[684]="gmp_sqrtrm(resource a)<&%>Square root with remainder (array)";$funclist[685]="gmp_strval";$funcdest[685]="gmp_strval(resource gmpnumber [, int base])<&%>Convert GMP number to string (string)";$funclist[686]="gmp_sub";$funcdest[686]="gmp_sub(resource a, resource b)<&%>Subtract numbers (resource)";$funclist[687]="gmp_xor";$funcdest[687]="gmp_xor(resource a, resource b)<&%>Logical XOR (resource)";$funclist[688]="gmstrftime";$funcdest[688]="gmstrftime(string format [, int timestamp])<&%>Format a GMT/UTC time/date according to locale settings (string)";$funclist[689]="gzclose";$funcdest[689]="gzclose(resource zp)<&%>Close an open gz-file pointer (int)";$funclist[690]="gzcompress";$funcdest[690]="gzcompress(string data [, int level])<&%>Compress a string (string)";$funclist[691]="gzdeflate";$funcdest[691]="gzdeflate(string data [, int level])<&%>Deflate a string (string)";$funclist[692]="gzencode";$funcdest[692]="gzencode(string data [, int level [, int encoding_mode]])<&%>Create a gzip compressed string (string)";$funclist[693]="gzeof";$funcdest[693]="gzeof(resource zp)<&%>Test for end-of-file on a gz-file pointer (int)";$funclist[694]="gzfile";$funcdest[694]="gzfile(string filename [, int use_include_path])<&%>Read entire gz-file into an array (array)";$funclist[695]="gzgetc";$funcdest[695]="gzgetc(resource zp)<&%>Get character from gz-file pointer (string)";$funclist[696]="gzgets";$funcdest[696]="gzgets(resource zp, int length)<&%>Get line from file pointer (string)";$funclist[697]="gzgetss";$funcdest[697]="gzgetss(resource zp, int length [, string allowable_tags])<&%>Get line from gz-file pointer and strip HTML tags (string)";$funclist[698]="gzinflate";$funcdest[698]="gzinflate(string data [, int length])<&%>Inflate a deflated string (string)";$funclist[699]="gzopen";$funcdest[699]="gzopen(string filename, string mode [, int use_include_path])<&%>Open gz-file (resource)";$funclist[700]="gzpassthru";$funcdest[700]="gzpassthru(resource zp)<&%>Output all remaining data on a gz-file pointer (int)";$funclist[701]="gzputs";$funcdest[701]="gzputs(?)<&%>Alias for gzwrite()<&%>(?)";$funclist[702]="gzread";$funcdest[702]="gzread(resource zp, int length)<&%>Binary-safe gz-file read (string)";$funclist[703]="gzrewind";$funcdest[703]="gzrewind(resource zp)<&%>Rewind the position of a gz-file pointer (int)";$funclist[704]="gzseek";$funcdest[704]="gzseek(resource zp, int offset)<&%>Seek on a gz-file pointer (int)";$funclist[705]="gztell";$funcdest[705]="gztell(resource zp)<&%>Tell gz-file pointer read/write position (int)";$funclist[706]="gzuncompress";$funcdest[706]="gzuncompress(string data [, int length])<&%>Uncompress a deflated string (string)";$funclist[707]="gzwrite";$funcdest[707]="gzwrite(resource zp, string string [, int length])<&%>Binary-safe gz-file write (int)";$funclist[708]="header";$funcdest[708]="header(string string [, bool replace [, int http_response_code]])<&%>Send a raw HTTP header (int)";$funclist[709]="headers_sent";$funcdest[709]="headers_sent([string &file [, int &line]])<&%>Checks if or where headers have been sent (bool)";$funclist[710]="hebrev";$funcdest[710]="hebrev(string hebrew_text [, int max_chars_per_line])<&%>Convert logical Hebrew text to visual text (string)";$funclist[711]="hebrevc";$funcdest[711]="hebrevc(string hebrew_text [, int max_chars_per_line])<&%>Convert logical Hebrew text to visual text with newline conversion (string)";$funclist[712]="hexdec";$funcdest[712]="hexdec(string hex_string)<&%>Hexadecimal to decimal (int)";$funclist[713]="highlight_file";$funcdest[713]="highlight_file(string filename [, bool return])<&%>Syntax highlighting of a file (mixed)";$funclist[714]="highlight_string";$funcdest[714]="highlight_string(string str [, bool return])<&%>Syntax highlighting of a string (mixed)";$funclist[715]="html_entity_decode";$funcdest[715]="html_entity_decode(string string [, int quote_style [, string charset]])<&%>Convert all HTML entities to their applicable characters (string)";$funclist[716]="htmlentities";$funcdest[716]="htmlentities(string string [, int quote_style [, string charset]])<&%>Convert all applicable characters to HTML entities (string)";$funclist[717]="htmlspecialchars";$funcdest[717]="htmlspecialchars(string string [, int quote_style [, string charset]])<&%>Convert special characters to HTML entities (string)";$funclist[718]="hw_Array2Objrec";$funcdest[718]="hw_Array2Objrec(array object_array)<&%>convert attributes from object array to object record (string)";$funclist[719]="hw_Children";$funcdest[719]="hw_Children(int connection, int objectID)<&%>object ids of children (array)";$funclist[720]="hw_ChildrenObj";$funcdest[720]="hw_ChildrenObj(int connection, int objectID)<&%>object records of children (array)";$funclist[721]="hw_Close";$funcdest[721]="hw_Close(int connection)<&%>closes the Hyperwave connection (int)";$funclist[722]="hw_Connect";$funcdest[722]="hw_Connect(string host, int port, string username, string password)<&%>opens a connection (int)";$funclist[723]="hw_Deleteobject";$funcdest[723]="hw_Deleteobject(int connection, int object_to_delete)<&%>deletes object (int)";$funclist[724]="hw_DocByAnchor";$funcdest[724]="hw_DocByAnchor(int connection, int anchorID)<&%>object id object belonging to anchor (int)";$funclist[725]="hw_DocByAnchorObj";$funcdest[725]="hw_DocByAnchorObj(int connection, int anchorID)<&%>object record object belonging to anchor (string)";$funclist[726]="hw_Document_Attributes";$funcdest[726]="hw_Document_Attributes(int hw_document)<&%>object record of hw_document (string)";$funclist[727]="hw_Document_BodyTag";$funcdest[727]="hw_Document_BodyTag(int hw_document)<&%>body tag of hw_document (string)";$funclist[728]="hw_Document_Content";$funcdest[728]="hw_Document_Content(int hw_document)<&%>returns content of hw_document (string)";$funclist[729]="hw_Document_SetContent";$funcdest[729]="hw_Document_SetContent(int hw_document, string content)<&%>sets/replaces content of hw_document (string)";$funclist[730]="hw_Document_Size";$funcdest[730]="hw_Document_Size(int hw_document)<&%>size of hw_document (int)";$funclist[731]="hw_EditText";$funcdest[731]="hw_EditText(int connection, int hw_document)<&%>retrieve text document (int)";$funclist[732]="hw_Error";$funcdest[732]="hw_Error(int connection)<&%>error number (int)";$funclist[733]="hw_ErrorMsg";$funcdest[733]="hw_ErrorMsg(int connection)<&%>returns error message (string)";$funclist[734]="hw_Free_Document";$funcdest[734]="hw_Free_Document(int hw_document)<&%>frees hw_document (int)";$funclist[735]="hw_GetAnchors";$funcdest[735]="hw_GetAnchors(int connection, int objectID)<&%>object ids of anchors of document (array)";$funclist[736]="hw_GetAnchorsObj";$funcdest[736]="hw_GetAnchorsObj(int connection, int objectID)<&%>object records of anchors of document (array)";$funclist[737]="hw_GetAndLock";$funcdest[737]="hw_GetAndLock(int connection, int objectID)<&%>return bject record and lock object (string)";$funclist[738]="hw_GetChildColl";$funcdest[738]="hw_GetChildColl(int connection, int objectID)<&%>object ids of child collections (array)";$funclist[739]="hw_GetChildCollObj";$funcdest[739]="hw_GetChildCollObj(int connection, int objectID)<&%>object records of child collections (array)";$funclist[740]="hw_GetChildDocColl";$funcdest[740]="hw_GetChildDocColl(int connection, int objectID)<&%>object ids of child documents of collection (array)";$funclist[741]="hw_GetChildDocCollObj";$funcdest[741]="hw_GetChildDocCollObj(int connection, int objectID)<&%>object records of child documents of collection (array)";$funclist[742]="hw_GetObject";$funcdest[742]="hw_GetObject(?)<&%>object record (?)";$funclist[743]="hw_GetObjectByQuery";$funcdest[743]="hw_GetObjectByQuery(int connection, string query, int max_hits)<&%>search object (array)";$funclist[744]="hw_GetObjectByQueryColl";$funcdest[744]="hw_GetObjectByQueryColl(int connection, int objectID, string query, int max_hits)<&%>search object in collection (array)";$funclist[745]="hw_GetObjectByQueryCollObj";$funcdest[745]="hw_GetObjectByQueryCollObj(int connection, int objectID, string query, int max_hits)<&%>search object in collection (array)";$funclist[746]="hw_GetObjectByQueryObj";$funcdest[746]="hw_GetObjectByQueryObj(int connection, string query, int max_hits)<&%>search object (array)";$funclist[747]="hw_GetParents";$funcdest[747]="hw_GetParents(int connection, int objectID)<&%>object ids of parents (array)";$funclist[748]="hw_GetParentsObj";$funcdest[748]="hw_GetParentsObj(int connection, int objectID)<&%>object records of parents (array)";$funclist[749]="hw_GetRemote";$funcdest[749]="hw_GetRemote(int connection, int objectID)<&%>Gets a remote document (int)";$funclist[750]="hw_GetSrcByDestObj";$funcdest[750]="hw_GetSrcByDestObj(int connection, int objectID)<&%>Returns anchors pointing at object (array)";$funclist[751]="hw_GetText";$funcdest[751]="hw_GetText(int connection, int objectID [, mixed rootID/prefix])<&%>retrieve text document (int)";$funclist[752]="hw_Identify";$funcdest[752]="hw_Identify(string username, string password)<&%>identifies as user (int)";$funclist[753]="hw_InCollections";$funcdest[753]="hw_InCollections(int connection, array object_id_array, array collection_id_array, int return_collections)<&%>check if object ids in collections (array)";$funclist[754]="hw_Info";$funcdest[754]="hw_Info(int connection)<&%>info about connection (string)";$funclist[755]="hw_InsColl";$funcdest[755]="hw_InsColl(int connection, int objectID, array object_array)<&%>insert collection (int)";$funclist[756]="hw_InsDoc";$funcdest[756]="hw_InsDoc(int connection, int parentID, string object_record, string text)<&%>insert document (int)";$funclist[757]="hw_InsertDocument";$funcdest[757]="hw_InsertDocument(int connection, int parent_id, int hw_document)<&%>upload any document (int)";$funclist[758]="hw_InsertObject";$funcdest[758]="hw_InsertObject(int connection, string object_rec, string parameter)<&%>inserts an object record (int)";$funclist[759]="hw_Modifyobject";$funcdest[759]="hw_Modifyobject(int connection, int object_to_change, array remove, array add, int mode)<&%>modifies object record (int)";$funclist[760]="hw_New_Document";$funcdest[760]="hw_New_Document(string object_record, string document_data, int document_size)<&%>create new document (int)";$funclist[761]="hw_Output_Document";$funcdest[761]="hw_Output_Document(int hw_document)<&%>prints hw_document (int)";$funclist[762]="hw_PipeDocument";$funcdest[762]="hw_PipeDocument(int connection, int objectID)<&%>retrieve any document (int)";$funclist[763]="hw_Root";$funcdest[763]="hw_Root()<&%>root object id (int)";$funclist[764]="hw_Unlock";$funcdest[764]="hw_Unlock(int connection, int objectID)<&%>unlock object (int)";$funclist[765]="hw_Who";$funcdest[765]="hw_Who(int connection)<&%>List of currently logged in users (int)";$funclist[766]="hw_api->checkin";$funcdest[766]="hw_api->checkin(array parameter)<&%>Checks in an object (object)";$funclist[767]="hw_api->checkout";$funcdest[767]="hw_api->checkout(array parameter)<&%>Checks out an object (object)";$funclist[768]="hw_api->children";$funcdest[768]="hw_api->children(array parameter)<&%>Returns children of an object (array)";$funclist[769]="hw_api->content";$funcdest[769]="hw_api->content(array parameter)<&%>Returns content of an object (object)";$funclist[770]="hw_api->copy";$funcdest[770]="hw_api->copy(array parameter)<&%>Copies physically (object)";$funclist[771]="hw_api->dbstat";$funcdest[771]="hw_api->dbstat(array parameter)<&%>Returns statistics about database server (object)";$funclist[772]="hw_api->dcstat";$funcdest[772]="hw_api->dcstat(array parameter)<&%>Returns statistics about document cache server (object)";$funclist[773]="hw_api->dstanchors";$funcdest[773]="hw_api->dstanchors(array parameter)<&%>Returns a list of all destination anchors (object)";$funclist[774]="hw_api->dstofsrcanchors";$funcdest[774]="hw_api->dstofsrcanchors(array parameter)<&%>Returns destination of a source anchor (object)";$funclist[775]="hw_api->find";$funcdest[775]="hw_api->find(array parameter)<&%>Search for objects (array)";$funclist[776]="hw_api->ftstat";$funcdest[776]="hw_api->ftstat(array parameter)<&%>Returns statistics about fulltext server (object)";$funclist[777]="hw_api->hwstat";$funcdest[777]="hw_api->hwstat(array parameter)<&%>Returns statistics about Hyperwave server (object)";$funclist[778]="hw_api->identify";$funcdest[778]="hw_api->identify(array parameter)<&%>Log into Hyperwave Server (object)";$funclist[779]="hw_api->info";$funcdest[779]="hw_api->info(array parameter)<&%>Returns information about server configuration (object)";$funclist[780]="hw_api->insert";$funcdest[780]="hw_api->insert(array parameter)<&%>Inserts a new object (object)";$funclist[781]="hw_api->insertanchor";$funcdest[781]="hw_api->insertanchor(array parameter)<&%>Inserts a new object of type anchor (object)";$funclist[782]="hw_api->insertcollection";$funcdest[782]="hw_api->insertcollection(array parameter)<&%>Inserts a new object of type collection (object)";$funclist[783]="hw_api->insertdocument";$funcdest[783]="hw_api->insertdocument(array parameter)<&%>Inserts a new object of type document (object)";$funclist[784]="hw_api->link";$funcdest[784]="hw_api->link(array parameter)<&%>Creates a link to an object (object)";$funclist[785]="hw_api->lock";$funcdest[785]="hw_api->lock(array parameter)<&%>Locks an object (object)";$funclist[786]="hw_api->move";$funcdest[786]="hw_api->move(array parameter)<&%>Moves object between collections (object)";$funclist[787]="hw_api->object";$funcdest[787]="hw_api->object(array parameter)<&%>Retrieve attribute information (object)";$funclist[788]="hw_api->objectbyanchor";$funcdest[788]="hw_api->objectbyanchor(array parameter)<&%>Returns the object an anchor belongs to (object)";$funclist[789]="hw_api->parents";$funcdest[789]="hw_api->parents(array parameter)<&%>Returns parents of an object (array)";$funclist[790]="hw_api->remove";$funcdest[790]="hw_api->remove(array parameter)<&%>Delete an object (object)";$funclist[791]="hw_api->replace";$funcdest[791]="hw_api->replace(array parameter)<&%>Replaces an object (object)";$funclist[792]="hw_api->setcommitedversion";$funcdest[792]="hw_api->setcommitedversion(array parameter)<&%>Commits version other than last version (object)";$funclist[793]="hw_api->srcanchors";$funcdest[793]="hw_api->srcanchors(array parameter)<&%>Returns a list of all source anchors (object)";$funclist[794]="hw_api->srcsofdst";$funcdest[794]="hw_api->srcsofdst(array parameter)<&%>Returns source of a destination object (object)";$funclist[795]="hw_api->unlock";$funcdest[795]="hw_api->unlock(array parameter)<&%>Unlocks a locked object (object)";$funclist[796]="hw_api->user";$funcdest[796]="hw_api->user(array parameter)<&%>Returns the own user object (object)";$funclist[797]="hw_api->userlist";$funcdest[797]="hw_api->userlist(array parameter)<&%>Returns a list of all logged in users (object)";$funclist[798]="hw_api_attribute";$funcdest[798]="hw_api_attribute([string name [, string value]])<&%>Creates instance of class hw_api_attribute (object)";$funclist[799]="hw_api_attribute->key";$funcdest[799]="hw_api_attribute->key(void )<&%>Returns key of the attribute (string)";$funclist[800]="hw_api_attribute->langdepvalue";$funcdest[800]="hw_api_attribute->langdepvalue(string language)<&%>Returns value for a given language (string)";$funclist[801]="hw_api_attribute->value";$funcdest[801]="hw_api_attribute->value(void )<&%>Returns value of the attribute (string)";$funclist[802]="hw_api_attribute->values";$funcdest[802]="hw_api_attribute->values(void )<&%>Returns all values of the attribute (array)";$funclist[803]="hw_api_content";$funcdest[803]="hw_api_content(string content, string mimetype)<&%>Create new instance of class hw_api_content (string)";$funclist[804]="hw_api_content->mimetype";$funcdest[804]="hw_api_content->mimetype(void )<&%>Returns mimetype (string)";$funclist[805]="hw_api_content->read";$funcdest[805]="hw_api_content->read(string buffer, integer len)<&%>Read content (string)";$funclist[806]="hw_api_error->count";$funcdest[806]="hw_api_error->count(void )<&%>Returns number of reasons (int)";$funclist[807]="hw_api_error->reason";$funcdest[807]="hw_api_error->reason(void )<&%>Returns reason of error (object)";$funclist[808]="hw_api_object";$funcdest[808]="hw_api_object(array parameter)<&%>Creates a new instance of class hw_api_object (object)";$funclist[809]="hw_api_object->assign";$funcdest[809]="hw_api_object->assign(array parameter)<&%>Clones object (object)";$funclist[810]="hw_api_object->attreditable";$funcdest[810]="hw_api_object->attreditable(array parameter)<&%>Checks whether an attribute is editable (bool)";$funclist[811]="hw_api_object->count";$funcdest[811]="hw_api_object->count(array parameter)<&%>Returns number of attributes (int)";$funclist[812]="hw_api_object->insert";$funcdest[812]="hw_api_object->insert(object attribute)<&%>Inserts new attribute (bool)";$funclist[813]="hw_api_object->remove";$funcdest[813]="hw_api_object->remove(string name)<&%>Removes attribute (bool)";$funclist[814]="hw_api_object->title";$funcdest[814]="hw_api_object->title(array parameter)<&%>Returns the title attribute (string)";$funclist[815]="hw_api_object->value";$funcdest[815]="hw_api_object->value(string name)<&%>Returns value of attribute (string)";$funclist[816]="hw_api_reason->description";$funcdest[816]="hw_api_reason->description(void )<&%>Returns description of reason (string)";$funclist[817]="hw_api_reason->type";$funcdest[817]="hw_api_reason->type(void )<&%>Returns type of reason (object)";$funclist[818]="hw_changeobject";$funcdest[818]="hw_changeobject(int link, int objid, array attributes)<&%>Changes attributes of an object (obsolete)<&%>(void)";$funclist[819]="hw_connection_info";$funcdest[819]="hw_connection_info(int link)<&%>Prints information about the connection to Hyperwave server (void)";$funclist[820]="hw_cp";$funcdest[820]="hw_cp(int connection, array object_id_array, int destination_id)<&%>Copies objects (int)";$funclist[821]="hw_dummy";$funcdest[821]="hw_dummy(int link, int id, int msgid)<&%>Hyperwave dummy function (string)";$funclist[822]="hw_getrellink";$funcdest[822]="hw_getrellink(int link, int rootid, int sourceid, int destid)<&%>Get link from source to dest relative to rootid (string)";$funclist[823]="hw_getremotechildren";$funcdest[823]="hw_getremotechildren(int connection, string object_record)<&%>Gets children of remote document (int)";$funclist[824]="hw_getusername";$funcdest[824]="hw_getusername(int connection)<&%>name of currently logged in user (string)";$funclist[825]="hw_insertanchors";$funcdest[825]="hw_insertanchors(int hwdoc, array anchorecs, array dest [, array urlprefixes])<&%>Inserts only anchors into text (string)";$funclist[826]="hw_mapid";$funcdest[826]="hw_mapid(int connection, int server_id, int object_id)<&%>Maps global id on virtual local id (int)";$funclist[827]="hw_mv";$funcdest[827]="hw_mv(int connection, array object_id_array, int source_id, int destination_id)<&%>Moves objects (int)";$funclist[828]="hw_objrec2array";$funcdest[828]="hw_objrec2array(string object_record [, array format])<&%>Convert attributes from object record to object array (array)";$funclist[829]="hw_pConnect";$funcdest[829]="hw_pConnect(string host, int port, string username, string password)<&%>make a persistent database connection (int)";$funclist[830]="hw_setlinkroot";$funcdest[830]="hw_setlinkroot(int link, int rootid)<&%>Set the id to which links are calculated (void)";$funclist[831]="hw_stat";$funcdest[831]="hw_stat(int link)<&%>Returns status string (string)";$funclist[832]="hwapi_hgcsp";$funcdest[832]="hwapi_hgcsp(string hostname [, int port])<&%>Returns object of class hw_api (object)";$funclist[833]="hypot";$funcdest[833]="hypot(float num1, float num2)<&%>Returns sqrt( num1*num1 + num2*num2)<&%>(float)";$funclist[834]="ibase_blob_add";$funcdest[834]="ibase_blob_add(int blob_id, string data)<&%>Add data into created blob (int)";$funclist[835]="ibase_blob_cancel";$funcdest[835]="ibase_blob_cancel(int blob_id)<&%>Cancel creating blob (int)";$funclist[836]="ibase_blob_close";$funcdest[836]="ibase_blob_close(int blob_id)<&%>Close blob (int)";$funclist[837]="ibase_blob_create";$funcdest[837]="ibase_blob_create([int link_identifier])<&%>Create blob for adding data (int)";$funclist[838]="ibase_blob_echo";$funcdest[838]="ibase_blob_echo(string blob_id_str)<&%>Output blob contents to browser (int)";$funclist[839]="ibase_blob_get";$funcdest[839]="ibase_blob_get(int blob_id, int len)<&%>Get len bytes data from open blob (string)";$funclist[840]="ibase_blob_import";$funcdest[840]="ibase_blob_import([int link_identifier, int file_id])<&%>Create blob, copy file in it, and close it (string)";$funclist[841]="ibase_blob_info";$funcdest[841]="ibase_blob_info(string blob_id_str)<&%>Return blob length and other useful info (object)";$funclist[842]="ibase_blob_open";$funcdest[842]="ibase_blob_open(string blob_id)<&%>Open blob for retrieving data parts (int)";$funclist[843]="ibase_close";$funcdest[843]="ibase_close([int connection_id])<&%>Close a connection to an InterBase database (int)";$funclist[844]="ibase_commit";$funcdest[844]="ibase_commit([int link_identifier, int trans_number])<&%>Commit a transaction (int)";$funclist[845]="ibase_connect";$funcdest[845]="ibase_connect(string database [, string username [, string password [, string charset [, int buffers [, int dialect [, string role]]]]]])<&%>Open a connection to an InterBase database (int)";$funclist[846]="ibase_errmsg";$funcdest[846]="ibase_errmsg(void)<&%>Returns error messages (string)";$funclist[847]="ibase_execute";$funcdest[847]="ibase_execute(int query [, int bind_args])<&%>Execute a previously prepared query (int)";$funclist[848]="ibase_fetch_object";$funcdest[848]="ibase_fetch_object(int result_id)<&%>Get an object from a InterBase database (object)";$funclist[849]="ibase_fetch_row";$funcdest[849]="ibase_fetch_row(int result_identifier)<&%>Fetch a row from an InterBase database (array)";$funclist[850]="ibase_field_info";$funcdest[850]="ibase_field_info(int result, int field_number)<&%>Get information about a field (array)";$funclist[851]="ibase_free_query";$funcdest[851]="ibase_free_query(int query)<&%>Free memory allocated by a prepared query (int)";$funclist[852]="ibase_free_result";$funcdest[852]="ibase_free_result(int result_identifier)<&%>Free a result set (int)";$funclist[853]="ibase_num_fields";$funcdest[853]="ibase_num_fields(int result_id)<&%>Get the number of fields in a result set (int)";$funclist[854]="ibase_pconnect";$funcdest[854]="ibase_pconnect(string database [, string username [, string password [, string charset [, int buffers [, int dialect [, string role]]]]]])<&%>Creates an persistent connection to an InterBase database (int)";$funclist[855]="ibase_prepare";$funcdest[855]="ibase_prepare([int link_identifier, string query])<&%>Prepare a query for later binding of parameter placeholders and execution (int)";$funclist[856]="ibase_query";$funcdest[856]="ibase_query([int link_identifier, string query [, int bind_args]])<&%>Execute a query on an InterBase database (int)";$funclist[857]="ibase_rollback";$funcdest[857]="ibase_rollback([int link_identifier, int trans_number])<&%>Rolls back a transaction (int)";$funclist[858]="ibase_timefmt";$funcdest[858]="ibase_timefmt(string format [, int columntype])<&%>Sets the format of timestamp, date and time type columns returned from queries (int)";$funclist[859]="ibase_trans";$funcdest[859]="ibase_trans([int trans_args [, int link_identifier]])<&%>Begin a transaction (int)";$funclist[860]="iconv";$funcdest[860]="iconv(string in_charset, string out_charset, string str)<&%>Convert string to requested character encoding (string)";$funclist[861]="iconv_get_encoding";$funcdest[861]="iconv_get_encoding([string type])<&%>Get current setting for character encoding conversion (array)";$funclist[862]="iconv_set_encoding";$funcdest[862]="iconv_set_encoding(string type, string charset)<&%>Set current setting for character encoding conversion (bool)";$funclist[863]="ifx_affected_rows";$funcdest[863]="ifx_affected_rows(int result_id)<&%>Get number of rows affected by a query (int)";$funclist[864]="ifx_blobinfile_mode";$funcdest[864]="ifx_blobinfile_mode(int mode)<&%>Set the default blob mode for all select queries (void)";$funclist[865]="ifx_byteasvarchar";$funcdest[865]="ifx_byteasvarchar(int mode)<&%>Set the default byte mode (void)";$funclist[866]="ifx_close";$funcdest[866]="ifx_close([int link_identifier])<&%>Close Informix connection (int)";$funclist[867]="ifx_connect";$funcdest[867]="ifx_connect([string database [, string userid [, string password]]])<&%>Open Informix server connection (int)";$funclist[868]="ifx_copy_blob";$funcdest[868]="ifx_copy_blob(int bid)<&%>Duplicates the given blob object (int)";$funclist[869]="ifx_create_blob";$funcdest[869]="ifx_create_blob(int type, int mode, string param)<&%>Creates an blob object (int)";$funclist[870]="ifx_create_char";$funcdest[870]="ifx_create_char(string param)<&%>Creates an char object (int)";$funclist[871]="ifx_do";$funcdest[871]="ifx_do(int result_id)<&%>Execute a previously prepared SQL-statement (int)";$funclist[872]="ifx_error";$funcdest[872]="ifx_error(void)<&%>Returns error code of last Informix call (string)";$funclist[873]="ifx_errormsg";$funcdest[873]="ifx_errormsg([int errorcode])<&%>Returns error message of last Informix call (string)";$funclist[874]="ifx_fetch_row";$funcdest[874]="ifx_fetch_row(int result_id [, mixed position])<&%>Get row as enumerated array (array)";$funclist[875]="ifx_fieldproperties";$funcdest[875]="ifx_fieldproperties(int result_id)<&%>List of SQL fieldproperties (array)";$funclist[876]="ifx_fieldtypes";$funcdest[876]="ifx_fieldtypes(int result_id)<&%>List of Informix SQL fields (array)";$funclist[877]="ifx_free_blob";$funcdest[877]="ifx_free_blob(int bid)<&%>Deletes the blob object (int)";$funclist[878]="ifx_free_char";$funcdest[878]="ifx_free_char(int bid)<&%>Deletes the char object (int)";$funclist[879]="ifx_free_result";$funcdest[879]="ifx_free_result(int result_id)<&%>Releases resources for the query (int)";$funclist[880]="ifx_get_blob";$funcdest[880]="ifx_get_blob(int bid)<&%>Return the content of a blob object (int)";$funclist[881]="ifx_get_char";$funcdest[881]="ifx_get_char(int bid)<&%>Return the content of the char object (int)";$funclist[882]="ifx_getsqlca";$funcdest[882]="ifx_getsqlca(int result_id)<&%>Get the contents of sqlca.sqlerrd[0..5] after a query (array)";$funclist[883]="ifx_htmltbl_result";$funcdest[883]="ifx_htmltbl_result(int result_id [, string html_table_options])<&%>Formats all rows of a query into a HTML table (int)";$funclist[884]="ifx_nullformat";$funcdest[884]="ifx_nullformat(int mode)<&%>Sets the default return value on a fetch row (void)";$funclist[885]="ifx_num_fields";$funcdest[885]="ifx_num_fields(int result_id)<&%>Returns the number of columns in the query (int)";$funclist[886]="ifx_num_rows";$funcdest[886]="ifx_num_rows(int result_id)<&%>Count the rows already fetched from a query (int)";$funclist[887]="ifx_pconnect";$funcdest[887]="ifx_pconnect([string database [, string userid [, string password]]])<&%>Open persistent Informix connection (int)";$funclist[888]="ifx_prepare";$funcdest[888]="ifx_prepare(string query, int conn_id [, int cursor_def, mixed blobidarray])<&%>Prepare an SQL-statement for execution (int)";$funclist[889]="ifx_query";$funcdest[889]="ifx_query(string query, int link_identifier [, int cursor_type [, mixed blobidarray]])<&%>Send Informix query (int)";$funclist[890]="ifx_textasvarchar";$funcdest[890]="ifx_textasvarchar(int mode)<&%>Set the default text mode (void)";$funclist[891]="ifx_update_blob";$funcdest[891]="ifx_update_blob(int bid, string content)<&%>Updates the content of the blob object (bool)";$funclist[892]="ifx_update_char";$funcdest[892]="ifx_update_char(int bid, string content)<&%>Updates the content of the char object (int)";$funclist[893]="ifxus_close_slob";$funcdest[893]="ifxus_close_slob(int bid)<&%>Deletes the slob object (int)";$funclist[894]="ifxus_create_slob";$funcdest[894]="ifxus_create_slob(int mode)<&%>Creates an slob object and opens it (int)";$funclist[895]="ifxus_free_slob";$funcdest[895]="ifxus_free_slob(int bid)<&%>Deletes the slob object (int)";$funclist[896]="ifxus_open_slob";$funcdest[896]="ifxus_open_slob(long bid, int mode)<&%>Opens an slob object (int)";$funclist[897]="ifxus_read_slob";$funcdest[897]="ifxus_read_slob(long bid, long nbytes)<&%>Reads nbytes of the slob object (int)";$funclist[898]="ifxus_seek_slob";$funcdest[898]="ifxus_seek_slob(long bid, int mode, long offset)<&%>Sets the current file or seek position (int)";$funclist[899]="ifxus_tell_slob";$funcdest[899]="ifxus_tell_slob(long bid)<&%>Returns the current file or seek position (int)";$funclist[900]="ifxus_write_slob";$funcdest[900]="ifxus_write_slob(long bid, string content)<&%>Writes a string into the slob object (int)";$funclist[901]="ignore_user_abort";$funcdest[901]="ignore_user_abort([int setting])<&%>Set whether a client disconnect should abort script execution (int)";$funclist[902]="image2wbmp";$funcdest[902]="image2wbmp(resource image [, string filename [, int threshold]])<&%>Output image to browser or file (int)";$funclist[903]="image_type_to_mime_type";$funcdest[903]="image_type_to_mime_type(int imagetype)<&%>Get Mime-Type for image-type returned by getimagesize, exif_read_data, exif_thumbnail, exif_imagetype (string)";$funclist[904]="imagealphablending";$funcdest[904]="imagealphablending(resource image, bool blendmode)<&%>Set the blending mode for an image (int)";$funclist[905]="imagearc";$funcdest[905]="imagearc(resource image, int cx, int cy, int w, int h, int s, int e, int color)<&%>Draw a partial ellipse (int)";$funclist[906]="imagechar";$funcdest[906]="imagechar(resource image, int font, int x, int y, string c, int color)<&%>Draw a character horizontally (int)";$funclist[907]="imagecharup";$funcdest[907]="imagecharup(resource image, int font, int x, int y, string c, int color)<&%>Draw a character vertically (int)";$funclist[908]="imagecolorallocate";$funcdest[908]="imagecolorallocate(resource image, int red, int green, int blue)<&%>Allocate a color for an image (int)";$funclist[909]="imagecolorallocatealpha";$funcdest[909]="imagecolorallocatealpha(resource image, int red, int green, int blue, int alpha)<&%>Allocate a color for an image (int)";$funclist[910]="imagecolorat";$funcdest[910]="imagecolorat(resource image, int x, int y)<&%>Get the index of the color of a pixel (int)";$funclist[911]="imagecolorclosest";$funcdest[911]="imagecolorclosest(resource image, int red, int green, int blue)<&%>Get the index of the closest color to the specified color (int)";$funclist[912]="imagecolorclosestalpha";$funcdest[912]="imagecolorclosestalpha(resource image, int red, int green, int blue, int alpha)<&%>Get the index of the closest color to the specified color + alpha (int)";$funclist[913]="imagecolorclosesthwb";$funcdest[913]="imagecolorclosesthwb(resource image, int red, int green, int blue)<&%>Get the index of the color which has the hue, white and blackness nearest to the given color (int)";$funclist[914]="imagecolordeallocate";$funcdest[914]="imagecolordeallocate(resource image, int color)<&%>De-allocate a color for an image (int)";$funclist[915]="imagecolorexact";$funcdest[915]="imagecolorexact(resource image, int red, int green, int blue)<&%>Get the index of the specified color (int)";$funclist[916]="imagecolorexactalpha";$funcdest[916]="imagecolorexactalpha(resource image, int red, int green, int blue, int alpha)<&%>Get the index of the specified color + alpha (int)";$funclist[917]="imagecolorresolve";$funcdest[917]="imagecolorresolve(resource image, int red, int green, int blue)<&%>Get the index of the specified color or its closest possible alternative (int)";$funclist[918]="imagecolorresolvealpha";$funcdest[918]="imagecolorresolvealpha(resource image, int red, int green, int blue, int alpha)<&%>Get the index of the specified color + alpha or its closest possible alternative (int)";$funclist[919]="imagecolorset";$funcdest[919]="imagecolorset(resource image, int index, int red, int green, int blue)<&%>Set the color for the specified palette index (bool)";$funclist[920]="imagecolorsforindex";$funcdest[920]="imagecolorsforindex(resource image, int index)<&%>Get the colors for an index (array)";$funclist[921]="imagecolorstotal";$funcdest[921]="imagecolorstotal(resource image)<&%>Find out the number of colors in an image's palette (int)";$funclist[922]="imagecolortransparent";$funcdest[922]="imagecolortransparent(resource image [, int color])<&%>Define a color as transparent (int)";$funclist[923]="imagecopy";$funcdest[923]="imagecopy(resource dst_im, resource src_im, int dst_x, int dst_y, int src_x, int src_y, int src_w, int src_h)<&%>Copy part of an image (int)";$funclist[924]="imagecopymerge";$funcdest[924]="imagecopymerge(resource dst_im, resource src_im, int dst_x, int dst_y, int src_x, int src_y, int src_w, int src_h, int pct)<&%>Copy and merge part of an image (int)";$funclist[925]="imagecopymergegray";$funcdest[925]="imagecopymergegray(resource dst_im, resource src_im, int dst_x, int dst_y, int src_x, int src_y, int src_w, int src_h, int pct)<&%>Copy and merge part of an image with gray scale (int)";$funclist[926]="imagecopyresampled";$funcdest[926]="imagecopyresampled(resource dst_im, resource src_im, int dstX, int dstY, int srcX, int srcY, int dstW, int dstH, int srcW, int srcH)<&%>Copy and resize part of an image with resampling (int)";$funclist[927]="imagecopyresized";$funcdest[927]="imagecopyresized(resource dst_im, resource src_im, int dstX, int dstY, int srcX, int srcY, int dstW, int dstH, int srcW, int srcH)<&%>Copy and resize part of an image (int)";$funclist[928]="imagecreate";$funcdest[928]="imagecreate(int x_size, int y_size)<&%>Create a new palette based image (resource)";$funclist[929]="imagecreatefromgd";$funcdest[929]="imagecreatefromgd(string filename)<&%>Create a new image from GD file or URL (resource)";$funclist[930]="imagecreatefromgd2";$funcdest[930]="imagecreatefromgd2(string filename)<&%>Create a new image from GD2 file or URL (resource)";$funclist[931]="imagecreatefromgd2part";$funcdest[931]="imagecreatefromgd2part(string filename, int srcX, int srcY, int width, int height)<&%>Create a new image from a given part of GD2 file or URL (resource)";$funclist[932]="imagecreatefromgif";$funcdest[932]="imagecreatefromgif(string filename)<&%>Create a new image from file or URL (resource)";$funclist[933]="imagecreatefromjpeg";$funcdest[933]="imagecreatefromjpeg(string filename)<&%>Create a new image from file or URL (resource)";$funclist[934]="imagecreatefrompng";$funcdest[934]="imagecreatefrompng(string filename)<&%>Create a new image from file or URL (resource)";$funclist[935]="imagecreatefromstring";$funcdest[935]="imagecreatefromstring(string image)<&%>Create a new image from the image stream in the string (resource)";$funclist[936]="imagecreatefromwbmp";$funcdest[936]="imagecreatefromwbmp(string filename)<&%>Create a new image from file or URL (resource)";$funclist[937]="imagecreatefromxbm";$funcdest[937]="imagecreatefromxbm(string filename)<&%>Create a new image from file or URL (resource)";$funclist[938]="imagecreatefromxpm";$funcdest[938]="imagecreatefromxpm(string filename)<&%>Create a new image from file or URL (resource)";$funclist[939]="imagecreatetruecolor";$funcdest[939]="imagecreatetruecolor(int x_size, int y_size)<&%>Create a new true color image (resource)";$funclist[940]="imagedashedline";$funcdest[940]="imagedashedline(resource image, int x1, int y1, int x2, int y2, int color)<&%>Draw a dashed line (int)";$funclist[941]="imagedestroy";$funcdest[941]="imagedestroy(resource image)<&%>Destroy an image (int)";$funclist[942]="imageellipse";$funcdest[942]="imageellipse(resource image, int cx, int cy, int w, int h, int color)<&%>Draw an ellipse (int)";$funclist[943]="imagefill";$funcdest[943]="imagefill(resource image, int x, int y, int color)<&%>Flood fill (int)";$funclist[944]="imagefilledarc";$funcdest[944]="imagefilledarc(resource image, int cx, int cy, int w, int h, int s, int e, int color, int style)<&%>Draw a partial ellipse and fill it (int)";$funclist[945]="imagefilledellipse";$funcdest[945]="imagefilledellipse(resource image, int cx, int cy, int w, int h, int color)<&%>Draw a filled ellipse (int)";$funclist[946]="imagefilledpolygon";$funcdest[946]="imagefilledpolygon(resource image, array points, int num_points, int color)<&%>Draw a filled polygon (int)";$funclist[947]="imagefilledrectangle";$funcdest[947]="imagefilledrectangle(resource image, int x1, int y1, int x2, int y2, int color)<&%>Draw a filled rectangle (int)";$funclist[948]="imagefilltoborder";$funcdest[948]="imagefilltoborder(resource image, int x, int y, int border, int color)<&%>Flood fill to specific color (int)";$funclist[949]="imagefontheight";$funcdest[949]="imagefontheight(int font)<&%>Get font height (int)";$funclist[950]="imagefontwidth";$funcdest[950]="imagefontwidth(int font)<&%>Get font width (int)";$funclist[951]="imageftbbox";$funcdest[951]="imageftbbox(int size, int angle, string font_file, string text [, array extrainfo])<&%>Give the bounding box of a text using fonts via freetype2 (array)";$funclist[952]="imagefttext";$funcdest[952]="imagefttext(resource image, int size, int angle, int x, int y, int col, string font_file, string text [, array extrainfo])<&%>Write text to the image using fonts using FreeType 2 (array)";$funclist[953]="imagegammacorrect";$funcdest[953]="imagegammacorrect(resource image, float inputgamma, float outputgamma)<&%>Apply a gamma correction to a GD image (int)";$funclist[954]="imagegd";$funcdest[954]="imagegd(resource image [, string filename])<&%>Output GD image to browser or file (int)";$funclist[955]="imagegd2";$funcdest[955]="imagegd2(resource image [, string filename [, int chunk_size [, int type]]])<&%>Output GD2 image (int)";$funclist[956]="imagegif";$funcdest[956]="imagegif(resource image [, string filename])<&%>Output image to browser or file (int)";$funclist[957]="imageinterlace";$funcdest[957]="imageinterlace(resource image [, int interlace])<&%>Enable or disable interlace (int)";$funclist[958]="imageistruecolorcreate";$funcdest[958]="imageistruecolorcreate(resource image)<&%>Finds whether an image is a truecolor image. (bool)";$funclist[959]="imagejpeg";$funcdest[959]="imagejpeg(resource image [, string filename [, int quality]])<&%>Output image to browser or file (int)";$funclist[960]="imageline";$funcdest[960]="imageline(resource image, int x1, int y1, int x2, int y2, int color)<&%>Draw a line (int)";$funclist[961]="imageloadfont";$funcdest[961]="imageloadfont(string file)<&%>Load a new font (int)";$funclist[962]="imagepalettecopy";$funcdest[962]="imagepalettecopy(resource destination, resource source)<&%>Copy the palette from one image to another (int)";$funclist[963]="imagepng";$funcdest[963]="imagepng(resource image [, string filename])<&%>Output a PNG image to either the browser or a file (int)";$funclist[964]="imagepolygon";$funcdest[964]="imagepolygon(resource image, array points, int num_points, int color)<&%>Draw a polygon (int)";$funclist[965]="imagepsbbox";$funcdest[965]="imagepsbbox(string text, int font, int size [, int space [, int tightness [, float angle]]])<&%>Give the bounding box of a text rectangle using PostScript Type1 fonts (array)";$funclist[966]="imagepscopyfont";$funcdest[966]="imagepscopyfont(int fontindex)<&%>Make a copy of an already loaded font for further modification (int)";$funclist[967]="imagepsencodefont";$funcdest[967]="imagepsencodefont(int font_index, string encodingfile)<&%>Change the character encoding vector of a font (int)";$funclist[968]="imagepsextendfont";$funcdest[968]="imagepsextendfont(int font_index, float extend)<&%>Extend or condense a font (bool)";$funclist[969]="imagepsfreefont";$funcdest[969]="imagepsfreefont(int fontindex)<&%>Free memory used by a PostScript Type 1 font (void)";$funclist[970]="imagepsloadfont";$funcdest[970]="imagepsloadfont(string filename)<&%>Load a PostScript Type 1 font from file (int)";$funclist[971]="imagepsslantfont";$funcdest[971]="imagepsslantfont(int font_index, float slant)<&%>Slant a font (bool)";$funclist[972]="imagepstext";$funcdest[972]="imagepstext(resource image, string text, int font, int size, int foreground, int background, int x, int y [, int space [, int tightness [, float angle [, int antialias_steps]]]])<&%>To draw a text string over an image using PostScript Type1 fonts (array)";$funclist[973]="imagerectangle";$funcdest[973]="imagerectangle(resource image, int x1, int y1, int x2, int y2, int col)<&%>Draw a rectangle (int)";$funclist[974]="imagerotate";$funcdest[974]="imagerotate(resource src_im, float angle, int bgd_color)<&%>Rotate an image with a given angle (ressource)";$funclist[975]="imagesavealpha";$funcdest[975]="imagesavealpha(resource image, bool saveflag)<&%>Set the flag to save full alpha channel information (as opposed to single-color transparency)<&%>when saving PNG images. (bool)";$funclist[976]="imagesetbrush";$funcdest[976]="imagesetbrush(resource image, resource brush)<&%>Set the brush image for line drawing (int)";$funclist[977]="imagesetpixel";$funcdest[977]="imagesetpixel(resource image, int x, int y, int color)<&%>Set a single pixel (int)";$funclist[978]="imagesetstyle";$funcdest[978]="imagesetstyle(resource image, array style)<&%>Set the style for line drawing (int)";$funclist[979]="imagesetthickness";$funcdest[979]="imagesetthickness(resource image, int thickness)<&%>Set the thickness for line drawing (void)";$funclist[980]="imagesettile";$funcdest[980]="imagesettile(resource image, resource tile)<&%>Set the tile image for filling (int)";$funclist[981]="imagestring";$funcdest[981]="imagestring(resource image, int font, int x, int y, string s, int col)<&%>Draw a string horizontally (int)";$funclist[982]="imagestringup";$funcdest[982]="imagestringup(resource image, int font, int x, int y, string s, int col)<&%>Draw a string vertically (int)";$funclist[983]="imagesx";$funcdest[983]="imagesx(resource image)<&%>Get image width (int)";$funclist[984]="imagesy";$funcdest[984]="imagesy(resource image)<&%>Get image height (int)";$funclist[985]="imagetruecolortopalette";$funcdest[985]="imagetruecolortopalette(resource image, bool dither, int ncolors)<&%>Convert a true color image to a palette image (void)";$funclist[986]="imagettfbbox";$funcdest[986]="imagettfbbox(int size, int angle, string fontfile, string text)<&%>Give the bounding box of a text using TrueType fonts (array)";$funclist[987]="imagettftext";$funcdest[987]="imagettftext(resource image, int size, int angle, int x, int y, int color, string fontfile, string text)<&%>Write text to the image using TrueType fonts (array)";$funclist[988]="imagetypes";$funcdest[988]="imagetypes(void)<&%>Return the image types supported by this PHP build (int)";$funclist[989]="imagewbmp";$funcdest[989]="imagewbmp(resource image [, string filename [, int foreground]])<&%>Output image to browser or file (int)";$funclist[990]="imap_8bit";$funcdest[990]="imap_8bit(string string)<&%>Convert an 8bit string to a quoted-printable string (string)";$funclist[991]="imap_alerts";$funcdest[991]="imap_alerts(void)<&%>This function returns all IMAP alert messages (if any)<&%>that have occurred during this page request or since the alert stack was reset (array)";$funclist[992]="imap_append";$funcdest[992]="imap_append(resource imap_stream, string mbox, string message [, string options])<&%>Append a string message to a specified mailbox (bool)";$funclist[993]="imap_base64";$funcdest[993]="imap_base64(string text)<&%>Decode BASE64 encoded text (string)";$funclist[994]="imap_binary";$funcdest[994]="imap_binary(string string)<&%>Convert an 8bit string to a base64 string (string)";$funclist[995]="imap_body";$funcdest[995]="imap_body(resource imap_stream, int msg_number [, int options])<&%>Read the message body (string)";$funclist[996]="imap_bodystruct";$funcdest[996]="imap_bodystruct(resource stream_id, int msg_no, int section)<&%>Read the structure of a specified body section of a specific message (object)";$funclist[997]="imap_check";$funcdest[997]="imap_check(resource imap_stream)<&%>Check current mailbox (object)";$funclist[998]="imap_clearflag_full";$funcdest[998]="imap_clearflag_full(resource stream, string sequence, string flag, string options)<&%>Clears flags on messages (bool)";$funclist[999]="imap_close";$funcdest[999]="imap_close(resource imap_stream [, int flag])<&%>Close an IMAP stream (bool)";$funclist[1000]="imap_createmailbox";$funcdest[1000]="imap_createmailbox(resource imap_stream, string mbox)<&%>Create a new mailbox (bool)";$funclist[1001]="imap_delete";$funcdest[1001]="imap_delete(int imap_stream, int msg_number [, int options])<&%>Mark a messge for deletion from current mailbox (bool)";$funclist[1002]="imap_deletemailbox";$funcdest[1002]="imap_deletemailbox(resource imap_stream, string mbox)<&%>Delete a mailbox (bool)";$funclist[1003]="imap_errors";$funcdest[1003]="imap_errors(void)<&%>This function returns all of the IMAP errors (if any)<&%>that have occurred during this page request or since the error stack was reset. (array)";$funclist[1004]="imap_expunge";$funcdest[1004]="imap_expunge(resource imap_stream)<&%>Delete all messages marked for deletion (bool)";$funclist[1005]="imap_fetch_overview";$funcdest[1005]="imap_fetch_overview(resource imap_stream, string sequence [, int options])<&%>Read an overview of the information in the headers of the given message (array)";$funclist[1006]="imap_fetchbody";$funcdest[1006]="imap_fetchbody(resource imap_stream, int msg_number, string part_number [, flags options])<&%>Fetch a particular section of the body of the message (string)";$funclist[1007]="imap_fetchheader";$funcdest[1007]="imap_fetchheader(resource imap_stream, int msgno, int options)<&%>Returns header for a message (string)";$funclist[1008]="imap_fetchstructure";$funcdest[1008]="imap_fetchstructure(resource imap_stream, int msg_number [, int options])<&%>Read the structure of a particular message (object)";$funclist[1009]="imap_get_quota";$funcdest[1009]="imap_get_quota(resource imap_stream, string quota_root)<&%>Retrieve the quota level settings, and usage statics per mailbox (array)";$funclist[1010]="imap_get_quotaroot";$funcdest[1010]="imap_get_quotaroot(resource imap_stream, string quota_root)<&%>Retrieve the quota settings per user (array)";$funclist[1011]="imap_getmailboxes";$funcdest[1011]="imap_getmailboxes(resource imap_stream, string ref, string pattern)<&%>Read the list of mailboxes, returning detailed information on each one (array)";$funclist[1012]="imap_getsubscribed";$funcdest[1012]="imap_getsubscribed(resource imap_stream, string ref, string pattern)<&%>List all the subscribed mailboxes (array)";$funclist[1013]="imap_header";$funcdest[1013]="imap_header(?)<&%>Alias of imap_headerinfo()<&%>(?)";$funclist[1014]="imap_headerinfo";$funcdest[1014]="imap_headerinfo(resource imap_stream, int msg_number [, int fromlength [, int subjectlength [, string defaulthost]]])<&%>Read the header of the message (object)";$funclist[1015]="imap_headers";$funcdest[1015]="imap_headers(resource imap_stream)<&%>Returns headers for all messages in a mailbox (array)";$funclist[1016]="imap_last_error";$funcdest[1016]="imap_last_error(void)<&%>This function returns the last IMAP error (if any)<&%>that occurred during this page request (string)";$funclist[1017]="imap_list";$funcdest[1017]="imap_list(resource imap_stream, string ref, string pattern)<&%>Read the list of mailboxes (array)";$funclist[1018]="imap_listmailbox";$funcdest[1018]="imap_listmailbox(?)<&%>Alias of imap_list()<&%>(?)";$funclist[1019]="imap_listscan";$funcdest[1019]="imap_listscan(resource imap_stream, string ref, string pattern, string content)<&%>Read the list of mailboxes, takes a string to search for in the text of the mailbox (array)";$funclist[1020]="imap_listsubscribed";$funcdest[1020]="imap_listsubscribed(?)<&%>Alias of imap_lsub()<&%>(?)";$funclist[1021]="imap_lsub";$funcdest[1021]="imap_lsub(resource imap_stream, string ref, string pattern)<&%>List all the subscribed mailboxes (array)";$funclist[1022]="imap_mail";$funcdest[1022]="imap_mail(string to, string subject, string message [, string additional_headers [, string cc [, string bcc [, string rpath]]]])<&%>Send an email message (string)";$funclist[1023]="imap_mail_compose";$funcdest[1023]="imap_mail_compose(array envelope, array body)<&%>Create a MIME message based on given envelope and body sections (string)";$funclist[1024]="imap_mail_copy";$funcdest[1024]="imap_mail_copy(resource imap_stream, string msglist, string mbox [, int options])<&%>Copy specified messages to a mailbox (bool)";$funclist[1025]="imap_mail_move";$funcdest[1025]="imap_mail_move(resource imap_stream, string msglist, string mbox [, int options])<&%>Move specified messages to a mailbox (bool)";$funclist[1026]="imap_mailboxmsginfo";$funcdest[1026]="imap_mailboxmsginfo(resource imap_stream)<&%>Get information about the current mailbox (object)";$funclist[1027]="imap_mime_header_decode";$funcdest[1027]="imap_mime_header_decode(string text)<&%>Decode MIME header elements (array)";$funclist[1028]="imap_msgno";$funcdest[1028]="imap_msgno(resource imap_stream, int uid)<&%>This function returns the message sequence number for the given UID (int)";$funclist[1029]="imap_num_msg";$funcdest[1029]="imap_num_msg(resource imap_stream)<&%>Gives the number of messages in the current mailbox (int)";$funclist[1030]="imap_num_recent";$funcdest[1030]="imap_num_recent(resource imap_stream)<&%>Gives the number of recent messages in current mailbox (int)";$funclist[1031]="imap_open";$funcdest[1031]="imap_open(string mailbox, string username, string password [, int options])<&%>Open an IMAP stream to a mailbox (resource)";$funclist[1032]="imap_ping";$funcdest[1032]="imap_ping(resource imap_stream)<&%>Check if the IMAP stream is still active (bool)";$funclist[1033]="imap_qprint";$funcdest[1033]="imap_qprint(string string)<&%>Convert a quoted-printable string to an 8 bit string (string)";$funclist[1034]="imap_renamemailbox";$funcdest[1034]="imap_renamemailbox(resource imap_stream, string old_mbox, string new_mbox)<&%>Rename an old mailbox to new mailbox (bool)";$funclist[1035]="imap_reopen";$funcdest[1035]="imap_reopen(resource imap_stream, string mailbox [, string options])<&%>Reopen IMAP stream to new mailbox (bool)";$funclist[1036]="imap_rfc822_parse_adrlist";$funcdest[1036]="imap_rfc822_parse_adrlist(string address, string default_host)<&%>Parses an address string (array)";$funclist[1037]="imap_rfc822_parse_headers";$funcdest[1037]="imap_rfc822_parse_headers(string headers [, string defaulthost])<&%>Parse mail headers from a string (object)";$funclist[1038]="imap_rfc822_write_address";$funcdest[1038]="imap_rfc822_write_address(string mailbox, string host, string personal)<&%>Returns a properly formatted email address given the mailbox, host, and personal info. (string)";$funclist[1039]="imap_scanmailbox";$funcdest[1039]="imap_scanmailbox(?)<&%>Alias of imap_listscan()<&%>(?)";$funclist[1040]="imap_search";$funcdest[1040]="imap_search(resource imap_stream, string criteria, int options)<&%>This function returns an array of messages matching the given search criteria (array)";$funclist[1041]="imap_set_quota";$funcdest[1041]="imap_set_quota(resource imap_stream, string quota_root, int quota_limit)<&%>Sets a quota for a given mailbox (bool)";$funclist[1042]="imap_setacl";$funcdest[1042]="imap_setacl(resource stream_id, string mailbox, string id, string rights)<&%>Sets the ACL for a giving mailbox (bool)";$funclist[1043]="imap_setflag_full";$funcdest[1043]="imap_setflag_full(resource stream, string sequence, string flag, string options)<&%>Sets flags on messages (bool)";$funclist[1044]="imap_sort";$funcdest[1044]="imap_sort(resource stream, int criteria, int reverse [, int options [, string search_criteria]])<&%>Sort an array of message headers (array)";$funclist[1045]="imap_status";$funcdest[1045]="imap_status(resource imap_stream, string mailbox, int options)<&%>This function returns status information on a mailbox other than the current one (object)";$funclist[1046]="imap_subscribe";$funcdest[1046]="imap_subscribe(resource imap_stream, string mbox)<&%>Subscribe to a mailbox (bool)";$funclist[1047]="imap_thread";$funcdest[1047]="imap_thread(resource stream_id [, int options])<&%>Return threaded by REFERENCES tree (array)";$funclist[1048]="imap_uid";$funcdest[1048]="imap_uid(resource imap_stream, int msgno)<&%>This function returns the UID for the given message sequence number (int)";$funclist[1049]="imap_undelete";$funcdest[1049]="imap_undelete(resource imap_stream, int msg_number)<&%>Unmark the message which is marked deleted (bool)";$funclist[1050]="imap_unsubscribe";$funcdest[1050]="imap_unsubscribe(string imap_stream, string mbox)<&%>Unsubscribe from a mailbox (bool)";$funclist[1051]="imap_utf7_decode";$funcdest[1051]="imap_utf7_decode(string text)<&%>Decodes a modified UTF-7 encoded string. (string)";$funclist[1052]="imap_utf7_encode";$funcdest[1052]="imap_utf7_encode(string data)<&%>Converts ISO-8859-1 string to modified UTF-7 text. (string)";$funclist[1053]="imap_utf8";$funcdest[1053]="imap_utf8(string mime_encoded_text)<&%>Converts MIME-encoded text to UTF-8 (string)";$funclist[1054]="implode";$funcdest[1054]="implode(string glue, array pieces)<&%>Join array elements with a string (string)";$funclist[1055]="import_request_variables";$funcdest[1055]="import_request_variables(string types [, string prefix])<&%>Import GET/POST/Cookie variables into the global scope (bool)";$funclist[1056]="in_array";$funcdest[1056]="in_array(mixed needle, array haystack [, bool strict])<&%>Return TRUE if a value exists in an array (bool)";$funclist[1057]="ingres_autocommit";$funcdest[1057]="ingres_autocommit([resource link])<&%>Switch autocommit on or off (bool)";$funclist[1058]="ingres_close";$funcdest[1058]="ingres_close([resource link])<&%>Close an Ingres II database connection (bool)";$funclist[1059]="ingres_commit";$funcdest[1059]="ingres_commit([resource link])<&%>Commit a transaction (bool)";$funclist[1060]="ingres_connect";$funcdest[1060]="ingres_connect([string database [, string username [, string password]]])<&%>Open a connection to an Ingres II database (resource)";$funclist[1061]="ingres_fetch_array";$funcdest[1061]="ingres_fetch_array([int result_type [, resource link]])<&%>Fetch a row of result into an array (array)";$funclist[1062]="ingres_fetch_object";$funcdest[1062]="ingres_fetch_object([int result_type [, resource link]])<&%>Fetch a row of result into an object. (object)";$funclist[1063]="ingres_fetch_row";$funcdest[1063]="ingres_fetch_row([resource link])<&%>Fetch a row of result into an enumerated array (array)";$funclist[1064]="ingres_field_length";$funcdest[1064]="ingres_field_length(int index [, resource link])<&%>Get the length of a field (int)";$funclist[1065]="ingres_field_name";$funcdest[1065]="ingres_field_name(int index [, resource link])<&%>Get the name of a field in a query result. (string)";$funclist[1066]="ingres_field_nullable";$funcdest[1066]="ingres_field_nullable(int index [, resource link])<&%>Test if a field is nullable (bool)";$funclist[1067]="ingres_field_precision";$funcdest[1067]="ingres_field_precision(int index [, resource link])<&%>Get the precision of a field (int)";$funclist[1068]="ingres_field_scale";$funcdest[1068]="ingres_field_scale(int index [, resource link])<&%>Get the scale of a field (int)";$funclist[1069]="ingres_field_type";$funcdest[1069]="ingres_field_type(int index [, resource link])<&%>Get the type of a field in a query result (string)";$funclist[1070]="ingres_num_fields";$funcdest[1070]="ingres_num_fields([resource link])<&%>Get the number of fields returned by the last query (int)";$funclist[1071]="ingres_num_rows";$funcdest[1071]="ingres_num_rows([resource link])<&%>Get the number of rows affected or returned by the last query (int)";$funclist[1072]="ingres_pconnect";$funcdest[1072]="ingres_pconnect([string database [, string username [, string password]]])<&%>Open a persistent connection to an Ingres II database (resource)";$funclist[1073]="ingres_query";$funcdest[1073]="ingres_query(string query [, resource link])<&%>Send a SQL query to Ingres II (bool)";$funclist[1074]="ingres_rollback";$funcdest[1074]="ingres_rollback([resource link])<&%>Roll back a transaction (bool)";$funclist[1075]="ini_alter";$funcdest[1075]="ini_alter(?)<&%>Alias of ini_set()<&%>(?)";$funclist[1076]="ini_get";$funcdest[1076]="ini_get(string varname)<&%>Gets the value of a configuration option (string)";$funclist[1077]="ini_get_all";$funcdest[1077]="ini_get_all([string extension])<&%>Gets all configuration options (array)";$funclist[1078]="ini_restore";$funcdest[1078]="ini_restore(string varname)<&%>Restores the value of a configuration option (string)";$funclist[1079]="ini_set";$funcdest[1079]="ini_set(string varname, string newvalue)<&%>Sets the value of a configuration option (string)";$funclist[1080]="intval";$funcdest[1080]="intval(mixed var [, int base])<&%>Get integer value of a variable (int)";$funclist[1081]="ip2long";$funcdest[1081]="ip2long(string ip_address)<&%>Converts a string containing an (IPv4)<&%>Internet Protocol dotted address into a proper address. (int)";$funclist[1082]="iptcembed";$funcdest[1082]="iptcembed(string iptcdata, string jpeg_file_name [, int spool])<&%>Embed binary IPTC data into a JPEG image (array)";$funclist[1083]="iptcparse";$funcdest[1083]="iptcparse(string iptcblock)<&%>Parse a binary IPTC http://www.iptc.org/ block into single tags. (array)";$funclist[1084]="ircg_channel_mode";$funcdest[1084]="ircg_channel_mode(resource connection, string channel, string mode_spec, string nick)<&%>Set channel mode flags for user (bool)";$funclist[1085]="ircg_disconnect";$funcdest[1085]="ircg_disconnect(resource connection, string reason)<&%>Close connection to server (bool)";$funclist[1086]="ircg_fetch_error_msg";$funcdest[1086]="ircg_fetch_error_msg(resource connection)<&%>Returns the error from previous IRCG operation (array)";$funclist[1087]="ircg_get_username";$funcdest[1087]="ircg_get_username(resource connection)<&%>Get username for connection (string)";$funclist[1088]="ircg_html_encode";$funcdest[1088]="ircg_html_encode(string html_string)<&%>Encodes HTML preserving output (bool)";$funclist[1089]="ircg_ignore_add";$funcdest[1089]="ircg_ignore_add(resource connection, string nick)<&%>Add a user to your ignore list on a server (bool)";$funclist[1090]="ircg_ignore_del";$funcdest[1090]="ircg_ignore_del(resource connection, string nick)<&%>Remove a user from your ignore list on a server (bool)";$funclist[1091]="ircg_is_conn_alive";$funcdest[1091]="ircg_is_conn_alive(resource connection)<&%>Check connection status (bool)";$funclist[1092]="ircg_join";$funcdest[1092]="ircg_join(resource connection, string channel [, string key])<&%>Join a channel on a connected server (bool)";$funclist[1093]="ircg_kick";$funcdest[1093]="ircg_kick(resource connection, string channel, string nick, string reason)<&%>Kick a user out of a channel on server (bool)";$funclist[1094]="ircg_lookup_format_messages";$funcdest[1094]="ircg_lookup_format_messages(string name)<&%>Check for the existence of a format message set (bool)";$funclist[1095]="ircg_msg";$funcdest[1095]="ircg_msg(resource connection, string recipient, string message [, boolean suppress])<&%>Send message to channel or user on server (bool)";$funclist[1096]="ircg_nick";$funcdest[1096]="ircg_nick(resource connection, string nick)<&%>Change nickname on server (bool)";$funclist[1097]="ircg_nickname_escape";$funcdest[1097]="ircg_nickname_escape(string nick)<&%>Encode special characters in nickname to be IRC-compliant (string)";$funclist[1098]="ircg_nickname_unescape";$funcdest[1098]="ircg_nickname_unescape(string nick)<&%>Decodes encoded nickname (string)";$funclist[1099]="ircg_notice";$funcdest[1099]="ircg_notice(resource connection, string , string message)<&%>Send a notice to a user on server (bool)";$funclist[1100]="ircg_part";$funcdest[1100]="ircg_part(resource connection, string channel)<&%>Leave a channel on server (bool)";$funclist[1101]="ircg_pconnect";$funcdest[1101]="ircg_pconnect(string username [, string server_ip [, int server_port [, string msg_format [, array ctcp_messages [, array user_settings]]]]])<&%>Connect to an IRC server (resource)";$funclist[1102]="ircg_register_format_messages";$funcdest[1102]="ircg_register_format_messages(string name, array messages)<&%>Register a format message set (bool)";$funclist[1103]="ircg_set_current";$funcdest[1103]="ircg_set_current(resource connection)<&%>Set current connection for output (bool)";$funclist[1104]="ircg_set_file";$funcdest[1104]="ircg_set_file(resource connection, string path)<&%>Set logfile for connection (bool)";$funclist[1105]="ircg_set_on_die";$funcdest[1105]="ircg_set_on_die(resource connection, string host, int port, string data)<&%>Set action to be executed when connection dies (bool)";$funclist[1106]="ircg_topic";$funcdest[1106]="ircg_topic(resource connection, string channel, string new_topic)<&%>Set topic for channel on server (bool)";$funclist[1107]="ircg_whois";$funcdest[1107]="ircg_whois(resource connection, string nick)<&%>Query server for user information (bool)";$funclist[1108]="is_a";$funcdest[1108]="is_a(object object, string class_name)<&%>Returns TRUE if the object is of this class or has this class as one of its parents (bool)";$funclist[1109]="is_array";$funcdest[1109]="is_array(mixed var)<&%>Finds whether a variable is an array (bool)";$funclist[1110]="is_bool";$funcdest[1110]="is_bool(mixed var)<&%>Finds out whether a variable is a boolean (bool)";$funclist[1111]="is_callable";$funcdest[1111]="is_callable(mixed var [, bool syntax_only [, string callable_name]])<&%>Find out whether the argument is a valid callable construct (bool)";$funclist[1112]="is_dir";$funcdest[1112]="is_dir(string filename)<&%>Tells whether the filename is a directory (bool)";$funclist[1113]="is_double";$funcdest[1113]="is_double(?)<&%>Alias of is_float()<&%>(?)";$funclist[1114]="is_executable";$funcdest[1114]="is_executable(string filename)<&%>Tells whether the filename is executable (bool)";$funclist[1115]="is_file";$funcdest[1115]="is_file(string filename)<&%>Tells whether the filename is a regular file (bool)";$funclist[1116]="is_finite";$funcdest[1116]="is_finite(float val)<&%> (bool)";$funclist[1117]="is_float";$funcdest[1117]="is_float(mixed var)<&%>Finds whether a variable is a float (bool)";$funclist[1118]="is_infinite";$funcdest[1118]="is_infinite(float val)<&%> (bool)";$funclist[1119]="is_int";$funcdest[1119]="is_int(mixed var)<&%>Find whether a variable is an integer (bool)";$funclist[1120]="is_integer";$funcdest[1120]="is_integer(?)<&%>Alias of is_int()<&%>(?)";$funclist[1121]="is_link";$funcdest[1121]="is_link(string filename)<&%>Tells whether the filename is a symbolic link (bool)";$funclist[1122]="is_long";$funcdest[1122]="is_long(?)<&%>Alias of is_int()<&%>(?)";$funclist[1123]="is_nan";$funcdest[1123]="is_nan(float val)<&%> (bool)";$funclist[1124]="is_null";$funcdest[1124]="is_null(mixed var)<&%>Finds whether a variable is NULL (bool)";$funclist[1125]="is_numeric";$funcdest[1125]="is_numeric(mixed var)<&%>Finds whether a variable is a number or a numeric string (bool)";$funclist[1126]="is_object";$funcdest[1126]="is_object(mixed var)<&%>Finds whether a variable is an object (bool)";$funclist[1127]="is_readable";$funcdest[1127]="is_readable(string filename)<&%>Tells whether the filename is readable (bool)";$funclist[1128]="is_real";$funcdest[1128]="is_real(?)<&%>Alias of is_float()<&%>(?)";$funclist[1129]="is_resource";$funcdest[1129]="is_resource(mixed var)<&%>Finds whether a variable is a resource (bool)";$funclist[1130]="is_scalar";$funcdest[1130]="is_scalar(mixed var)<&%>Finds whether a variable is a scalar (bool)";$funclist[1131]="is_string";$funcdest[1131]="is_string(mixed var)<&%>Finds whether a variable is a string (bool)";$funclist[1132]="is_subclass_of";$funcdest[1132]="is_subclass_of(object object, string class_name)<&%>Returns TRUE if the object has this class as one of its parents (bool)";$funclist[1133]="is_uploaded_file";$funcdest[1133]="is_uploaded_file(string filename)<&%>Tells whether the file was uploaded via HTTP POST (bool)";$funclist[1134]="is_writable";$funcdest[1134]="is_writable(string filename)<&%>Tells whether the filename is writable (bool)";$funclist[1135]="is_writeable";$funcdest[1135]="is_writeable(?)<&%>Alias of is_writable()<&%>(?)";$funclist[1136]="isset";$funcdest[1136]="isset(mixed var [, mixed var [, ...]])<&%>Determine whether a variable is set (bool)";$funclist[1137]="java_last_exception_clear";$funcdest[1137]="java_last_exception_clear(void)<&%>Clear last Java exception (void)";$funclist[1138]="java_last_exception_get";$funcdest[1138]="java_last_exception_get(void)<&%>Get last Java exception (exception)";$funclist[1139]="jdtounix";$funcdest[1139]="jdtounix(int jday)<&%>Convert Julian Day to UNIX timestamp (int)";$funclist[1140]="join";$funcdest[1140]="join(?)<&%>Alias for implode()<&%>(?)";$funclist[1141]="jpeg2wbmp";$funcdest[1141]="jpeg2wbmp(string jpegname, string wbmpname, int d_height, int d_width, int threshold)<&%>Convert JPEG image file to WBMP image file (int)";$funclist[1142]="key";$funcdest[1142]="key(array array)<&%>Fetch a key from an associative array (mixed)";$funclist[1143]="krsort";$funcdest[1143]="krsort(array array [, int sort_flags])<&%>Sort an array by key in reverse order (int)";$funclist[1144]="ksort";$funcdest[1144]="ksort(array array [, int sort_flags])<&%>Sort an array by key (int)";$funclist[1145]="lcg_value";$funcdest[1145]="lcg_value(void)<&%>Combined linear congruential generator (float)";$funclist[1146]="ldap_8859_to_t61";$funcdest[1146]="ldap_8859_to_t61(string value)<&%>Translate 8859 characters to t61 characters (string)";$funclist[1147]="ldap_add";$funcdest[1147]="ldap_add(resource link_identifier, string dn, array entry)<&%>Add entries to LDAP directory (bool)";$funclist[1148]="ldap_bind";$funcdest[1148]="ldap_bind(resource link_identifier [, string bind_rdn [, string bind_password]])<&%>Bind to LDAP directory (bool)";$funclist[1149]="ldap_close";$funcdest[1149]="ldap_close(resource link_identifier)<&%>Close link to LDAP server (bool)";$funclist[1150]="ldap_compare";$funcdest[1150]="ldap_compare(resource link_identifier, string dn, string attribute, string value)<&%>Compare value of attribute found in entry specified with DN (bool)";$funclist[1151]="ldap_connect";$funcdest[1151]="ldap_connect([string hostname [, int port]])<&%>Connect to an LDAP server (resource)";$funclist[1152]="ldap_count_entries";$funcdest[1152]="ldap_count_entries(resource link_identifier, resource result_identifier)<&%>Count the number of entries in a search (int)";$funclist[1153]="ldap_delete";$funcdest[1153]="ldap_delete(resource link_identifier, string dn)<&%>Delete an entry from a directory (bool)";$funclist[1154]="ldap_dn2ufn";$funcdest[1154]="ldap_dn2ufn(string dn)<&%>Convert DN to User Friendly Naming format (string)";$funclist[1155]="ldap_err2str";$funcdest[1155]="ldap_err2str(int errno)<&%>Convert LDAP error number into string error message (string)";$funclist[1156]="ldap_errno";$funcdest[1156]="ldap_errno(resource link_identifier)<&%>Return the LDAP error number of the last LDAP command (int)";$funclist[1157]="ldap_error";$funcdest[1157]="ldap_error(resource link_identifier)<&%>Return the LDAP error message of the last LDAP command (string)";$funclist[1158]="ldap_explode_dn";$funcdest[1158]="ldap_explode_dn(string dn, int with_attrib)<&%>Splits DN into its component parts (array)";$funclist[1159]="ldap_first_attribute";$funcdest[1159]="ldap_first_attribute(resource link_identifier, resource result_entry_identifier, int ber_identifier)<&%>Return first attribute (string)";$funclist[1160]="ldap_first_entry";$funcdest[1160]="ldap_first_entry(resource link_identifier, resource result_identifier)<&%>Return first result id (resource)";$funclist[1161]="ldap_first_reference";$funcdest[1161]="ldap_first_reference(resource link, resource result)<&%>Return first reference (resource)";$funclist[1162]="ldap_free_result";$funcdest[1162]="ldap_free_result(resource result_identifier)<&%>Free result memory (bool)";$funclist[1163]="ldap_get_attributes";$funcdest[1163]="ldap_get_attributes(resource link_identifier, resource result_entry_identifier)<&%>Get attributes from a search result entry (array)";$funclist[1164]="ldap_get_dn";$funcdest[1164]="ldap_get_dn(resource link_identifier, resource result_entry_identifier)<&%>Get the DN of a result entry (string)";$funclist[1165]="ldap_get_entries";$funcdest[1165]="ldap_get_entries(resource link_identifier, resource result_identifier)<&%>Get all result entries (array)";$funclist[1166]="ldap_get_option";$funcdest[1166]="ldap_get_option(resource link_identifier, int option, mixed retval)<&%>Get the current value for given option (bool)";$funclist[1167]="ldap_get_values";$funcdest[1167]="ldap_get_values(resource link_identifier, resource result_entry_identifier, string attribute)<&%>Get all values from a result entry (array)";$funclist[1168]="ldap_get_values_len";$funcdest[1168]="ldap_get_values_len(resource link_identifier, resource result_entry_identifier, string attribute)<&%>Get all binary values from a result entry (array)";$funclist[1169]="ldap_list";$funcdest[1169]="ldap_list(resource link_identifier, string base_dn, string filter [, array attributes [, int attrsonly [, int sizelimit [, int timelimit [, int deref]]]]])<&%>Single-level search (resource)";$funclist[1170]="ldap_mod_add";$funcdest[1170]="ldap_mod_add(resource link_identifier, string dn, array entry)<&%>Add attribute values to current attributes (bool)";$funclist[1171]="ldap_mod_del";$funcdest[1171]="ldap_mod_del(resource link_identifier, string dn, array entry)<&%>Delete attribute values from current attributes (bool)";$funclist[1172]="ldap_mod_replace";$funcdest[1172]="ldap_mod_replace(resoure link_identifier, string dn, array entry)<&%>Replace attribute values with new ones (bool)";$funclist[1173]="ldap_modify";$funcdest[1173]="ldap_modify(resource link_identifier, string dn, array entry)<&%>Modify an LDAP entry (bool)";$funclist[1174]="ldap_next_attribute";$funcdest[1174]="ldap_next_attribute(resource link_identifier, resource result_entry_identifier, resource ber_identifier)<&%>Get the next attribute in result (string)";$funclist[1175]="ldap_next_entry";$funcdest[1175]="ldap_next_entry(resource link_identifier, resource result_entry_identifier)<&%>Get next result entry (resource)";$funclist[1176]="ldap_next_reference";$funcdest[1176]="ldap_next_reference(resource link, resource entry)<&%>Get next reference (resource)";$funclist[1177]="ldap_parse_reference";$funcdest[1177]="ldap_parse_reference(resource link, resource entry, array referrals)<&%>Extract information from reference entry (bool)";$funclist[1178]="ldap_parse_result";$funcdest[1178]="ldap_parse_result(resource link, resource result, int errcode, string matcheddn, string errmsg, array referrals)<&%>Extract information from result (bool)";$funclist[1179]="ldap_read";$funcdest[1179]="ldap_read(resource link_identifier, string base_dn, string filter [, array attributes [, int attrsonly [, int sizelimit [, int timelimit [, int deref]]]]])<&%>Read an entry (resource)";$funclist[1180]="ldap_rename";$funcdest[1180]="ldap_rename(resource link_identifier, string dn, string newrdn, string newparent, bool deleteoldrdn)<&%>Modify the name of an entry (bool)";$funclist[1181]="ldap_search";$funcdest[1181]="ldap_search(resource link_identifier, string base_dn, string filter [, array attributes [, int attrsonly [, int sizelimit [, int timelimit [, int deref]]]]])<&%>Search LDAP tree (resource)";$funclist[1182]="ldap_set_option";$funcdest[1182]="ldap_set_option(resource link_identifier, int option, mixed newval)<&%>Set the value of the given option (bool)";$funclist[1183]="ldap_set_rebind_proc";$funcdest[1183]="ldap_set_rebind_proc(resource link, string callback)<&%>Set a callback function to do re-binds on referral chasing. (bool)";$funclist[1184]="ldap_sort";$funcdest[1184]="ldap_sort(resource link, resource result, string sortfilter)<&%>Sort LDAP result entries (bool)";$funclist[1185]="ldap_start_tls";$funcdest[1185]="ldap_start_tls(resource link)<&%>Start TLS (bool)";$funclist[1186]="ldap_t61_to_8859";$funcdest[1186]="ldap_t61_to_8859(string value)<&%>Translate t61 characters to 8859 characters (string)";$funclist[1187]="ldap_unbind";$funcdest[1187]="ldap_unbind(resource link_identifier)<&%>Unbind from LDAP directory (bool)";$funclist[1188]="levenshtein";$funcdest[1188]="levenshtein(string str1, string str2)<&%>Calculate Levenshtein distance between two strings (int)";$funclist[1189]="link";$funcdest[1189]="link(string target, string link)<&%>Create a hard link (int)";$funclist[1190]="linkinfo";$funcdest[1190]="linkinfo(string path)<&%>Gets information about a link (int)";$funclist[1191]="list";$funcdest[1191]="list(mixed ...)<&%>Assign variables as if they were an array (void)";$funclist[1192]="localeconv";$funcdest[1192]="localeconv(void)<&%>Get numeric formatting information (array)";$funclist[1193]="localtime";$funcdest[1193]="localtime([int timestamp [, bool is_associative]])<&%>Get the local time (array)";$funclist[1194]="log";$funcdest[1194]="log(float arg [, float base])<&%>Natural logarithm (float)";$funclist[1195]="log10";$funcdest[1195]="log10(float arg)<&%>Base-10 logarithm (float)";$funclist[1196]="log1p";$funcdest[1196]="log1p(float number)<&%>Returns log(1 + number)<&%>, computed in a way that accurate even when the val ue of number is close to zero (float)";$funclist[1197]="long2ip";$funcdest[1197]="long2ip(int proper_address)<&%>Converts an (IPv4)<&%>Internet network address into a string in Internet standard dotted format (string)";$funclist[1198]="lstat";$funcdest[1198]="lstat(string filename)<&%>Gives information about a file or symbolic link (array)";$funclist[1199]="ltrim";$funcdest[1199]="ltrim(string str [, string charlist])<&%>Strip whitespace from the beginning of a string (string)";$funclist[1200]="mail";$funcdest[1200]="mail(string to, string subject, string message [, string additional_headers [, string additional_parameters]])<&%>send mail (bool)";$funclist[1201]="mailparse_determine_best_xfer_encoding";$funcdest[1201]="mailparse_determine_best_xfer_encoding(resource fp)<&%>Figures out the best way of encoding the content read from the file pointer fp, which must be seek-able (int)";$funclist[1202]="mailparse_msg_create";$funcdest[1202]="mailparse_msg_create(void)<&%>Returns a handle that can be used to parse a message (int)";$funclist[1203]="mailparse_msg_extract_part";$funcdest[1203]="mailparse_msg_extract_part(resource rfc2045, string msgbody [, string callbackfunc])<&%>Extracts/decodes a message section.  If callbackfunc is not specified, the contents will be sent to 'stdout' (void)";$funclist[1204]="mailparse_msg_extract_part_file";$funcdest[1204]="mailparse_msg_extract_part_file(resource rfc2045, string filename [, string callbackfunc])<&%>Extracts/decodes a message section, decoding the transfer encoding (string)";$funclist[1205]="mailparse_msg_free";$funcdest[1205]="mailparse_msg_free(resource rfc2045buf)<&%>Frees a handle allocated by mailparse_msg_crea (void)";$funclist[1206]="mailparse_msg_get_part";$funcdest[1206]="mailparse_msg_get_part(resource rfc2045, string mimesection)<&%>Returns a handle on a given section in a mimemessage (int)";$funclist[1207]="mailparse_msg_get_part_data";$funcdest[1207]="mailparse_msg_get_part_data(resource rfc2045)<&%>Returns an associative array of info about the message (array)";$funclist[1208]="mailparse_msg_get_structure";$funcdest[1208]="mailparse_msg_get_structure(resource rfc2045)<&%>Returns an array of mime section names in the supplied message (array)";$funclist[1209]="mailparse_msg_parse";$funcdest[1209]="mailparse_msg_parse(resource rfc2045buf, string data)<&%>Incrementally parse data into buffer (void)";$funclist[1210]="mailparse_msg_parse_file";$funcdest[1210]="mailparse_msg_parse_file(string filename)<&%>Parse file and return a resource representing the structure (resource)";$funclist[1211]="mailparse_rfc822_parse_addresses";$funcdest[1211]="mailparse_rfc822_parse_addresses(string addresses)<&%>Parse addresses and returns a hash containing that data (array)";$funclist[1212]="mailparse_stream_encode";$funcdest[1212]="mailparse_stream_encode(resource sourcefp, resource destfp, string encoding)<&%>Streams data from source file pointer, apply encoding and write to destfp (bool)";$funclist[1213]="mailparse_uudecode_all";$funcdest[1213]="mailparse_uudecode_all(resource fp)<&%>Scans the data from fp and extract each embedded uuencoded file. Returns an array listing filename information (array)";$funclist[1214]="main";$funcdest[1214]="main(?)<&%>Dummy for main()<&%>(?)";$funclist[1215]="max";$funcdest[1215]="max(mixed arg1, mixed arg2, mixed argn)<&%>Find highest value (number)";$funclist[1216]="mb_convert_case";$funcdest[1216]="mb_convert_case(string str, int mode [, string encoding])<&%>Perform case folding on a string (string)";$funclist[1217]="mb_convert_encoding";$funcdest[1217]="mb_convert_encoding(string str, string to-encoding [, mixed from-encoding])<&%>Convert character encoding (string)";$funclist[1218]="mb_convert_kana";$funcdest[1218]="mb_convert_kana(string str, string option [, mixed encoding])<&%>Convert 'kana' one from another ('zen-kaku' ,'han-kaku' and more)<&%>(string)";$funclist[1219]="mb_convert_variables";$funcdest[1219]="mb_convert_variables(string to-encoding, mixed from-encoding, mixed vars)<&%>Convert character code in variable(s)<&%>(string)";$funclist[1220]="mb_decode_mimeheader";$funcdest[1220]="mb_decode_mimeheader(string str)<&%>Decode string in MIME header field (string)";$funclist[1221]="mb_decode_numericentity";$funcdest[1221]="mb_decode_numericentity(string str, array convmap [, string encoding])<&%>Decode HTML numeric string reference to character (string)";$funclist[1222]="mb_detect_encoding";$funcdest[1222]="mb_detect_encoding(string str [, mixed encoding-list])<&%>Detect character encoding (string)";$funclist[1223]="mb_detect_order";$funcdest[1223]="mb_detect_order([mixed encoding-list])<&%>Set/Get character encoding detection order (array)";$funclist[1224]="mb_encode_mimeheader";$funcdest[1224]="mb_encode_mimeheader(string str [, string charset [, string transfer-encoding [, string linefeed]]])<&%>Encode string for MIME header (string)";$funclist[1225]="mb_encode_numericentity";$funcdest[1225]="mb_encode_numericentity(string str, array convmap [, string encoding])<&%>Encode character to HTML numeric string reference (string)";$funclist[1226]="mb_ereg";$funcdest[1226]="mb_ereg(string pattern, string string [, array regs])<&%>Regular expression match with multibyte support (int)";$funclist[1227]="mb_ereg_match";$funcdest[1227]="mb_ereg_match(string pattern, string string [, string option])<&%>Regular expression match for multibyte string (bool)";$funclist[1228]="mb_ereg_replace";$funcdest[1228]="mb_ereg_replace(string pattern, string replacement, string string [, array option])<&%>Replace regular expression with multibyte support (string)";$funclist[1229]="mb_ereg_search";$funcdest[1229]="mb_ereg_search([string pattern [, string option]])<&%>Multibyte regular expression match for predefined multibyte string (bool)";$funclist[1230]="mb_ereg_search_getpos";$funcdest[1230]="mb_ereg_search_getpos(void)<&%>Returns start point for next regular expression match (array)";$funclist[1231]="mb_ereg_search_getregs";$funcdest[1231]="mb_ereg_search_getregs(void)<&%>Retrive the result from the last multibyte regular expression match (array)";$funclist[1232]="mb_ereg_search_init";$funcdest[1232]="mb_ereg_search_init(string string [, string pattern [, string option]])<&%>Setup string and regular expression for multibyte regular expression match (array)";$funclist[1233]="mb_ereg_search_pos";$funcdest[1233]="mb_ereg_search_pos([string pattern [, string option]])<&%>Return position and length of matched part of multibyte regular expression for predefined multibyte string (array)";$funclist[1234]="mb_ereg_search_regs";$funcdest[1234]="mb_ereg_search_regs([string pattern [, string option]])<&%>Returns the matched part of multibyte regular expression (array)";$funclist[1235]="mb_ereg_search_setpos";$funcdest[1235]="mb_ereg_search_setpos(void)<&%>Set start point of next regular expression match (array)";$funclist[1236]="mb_eregi";$funcdest[1236]="mb_eregi(string pattern, string string [, array regs])<&%>Regular expression match ignoring case with multibyte support (int)";$funclist[1237]="mb_eregi_replace";$funcdest[1237]="mb_eregi_replace(string pattern, string replace, string string)<&%>Replace regular expression with multibyte support ignoring case (string)";$funclist[1238]="mb_get_info";$funcdest[1238]="mb_get_info([string type])<&%>Get internal settings of mbstring (string)";$funclist[1239]="mb_http_input";$funcdest[1239]="mb_http_input([string type])<&%>Detect HTTP input character encoding (string)";$funclist[1240]="mb_http_output";$funcdest[1240]="mb_http_output([string encoding])<&%>Set/Get HTTP output character encoding (string)";$funclist[1241]="mb_internal_encoding";$funcdest[1241]="mb_internal_encoding([string encoding])<&%>Set/Get internal character encoding (string)";$funclist[1242]="mb_language";$funcdest[1242]="mb_language([string language])<&%>Set/Get current language (string)";$funclist[1243]="mb_output_handler";$funcdest[1243]="mb_output_handler(string contents, int status)<&%>Callback function converts character encoding in output buffer (string)";$funclist[1244]="mb_parse_str";$funcdest[1244]="mb_parse_str(string encoded_string [, array result])<&%>Parse GET/POST/COOKIE data and set global variable (bool)";$funclist[1245]="mb_preferred_mime_name";$funcdest[1245]="mb_preferred_mime_name(string encoding)<&%>Get MIME charset string (string)";$funclist[1246]="mb_regex_encoding";$funcdest[1246]="mb_regex_encoding([string encoding])<&%>Returns current encoding for multibyte regex as string (string)";$funclist[1247]="mb_regex_set_options";$funcdest[1247]="mb_regex_set_options([string options])<&%>Set/Get the default options for mbregex functions (string)";$funclist[1248]="mb_send_mail";$funcdest[1248]="mb_send_mail(string to, string subject, string message [, string additional_headers [, string additional_parameter]])<&%>Send encoded mail. (bool)";$funclist[1249]="mb_split";$funcdest[1249]="mb_split(string pattern, string string [, int limit])<&%>Split multibyte string using regular expression (array)";$funclist[1250]="mb_strcut";$funcdest[1250]="mb_strcut(string str, int start [, int length [, string encoding]])<&%>Get part of string (string)";$funclist[1251]="mb_strimwidth";$funcdest[1251]="mb_strimwidth(string str, int start, int width, string trimmarker [, string encoding])<&%>Get truncated string with specified width (string)";$funclist[1252]="mb_strlen";$funcdest[1252]="mb_strlen(string str [, string encoding])<&%>Get string length (string)";$funclist[1253]="mb_strpos";$funcdest[1253]="mb_strpos(string haystack, string needle [, int offset [, string encoding]])<&%>Find position of first occurrence of string in a string (int)";$funclist[1254]="mb_strrpos";$funcdest[1254]="mb_strrpos(string haystack, string needle [, string encoding])<&%>Find position of last occurrence of a string in a string (int)";$funclist[1255]="mb_strtolower";$funcdest[1255]="mb_strtolower(string str [, string encoding])<&%>Make a string lowercase (string)";$funclist[1256]="mb_strtoupper";$funcdest[1256]="mb_strtoupper(string str [, string encoding])<&%>Make a string uppercase (string)";$funclist[1257]="mb_strwidth";$funcdest[1257]="mb_strwidth(string str [, string encoding])<&%>Return width of string (int)";$funclist[1258]="mb_substitute_character";$funcdest[1258]="mb_substitute_character([mixed substrchar])<&%>Set/Get substitution character (mixed)";$funclist[1259]="mb_substr";$funcdest[1259]="mb_substr(string str, int start [, int length [, string encoding]])<&%>Get part of string (string)";$funclist[1260]="mb_substr_count";$funcdest[1260]="mb_substr_count(string haystack, string needle [, string encoding])<&%>Count the number of substring occurrences (int)";$funclist[1261]="mcal_append_event";$funcdest[1261]="mcal_append_event(int mcal_stream)<&%>Store a new event into an MCAL calendar (int)";$funclist[1262]="mcal_close";$funcdest[1262]="mcal_close(int mcal_stream, int flags)<&%>Close an MCAL stream (int)";$funclist[1263]="mcal_create_calendar";$funcdest[1263]="mcal_create_calendar(int stream, string calendar)<&%>Create a new MCAL calendar (string)";$funclist[1264]="mcal_date_compare";$funcdest[1264]="mcal_date_compare(int a_year, int a_month, int a_day, int b_year, int b_month, int b_day)<&%>Compares two dates (int)";$funclist[1265]="mcal_date_valid";$funcdest[1265]="mcal_date_valid(int year, int month, int day)<&%>Returns TRUE if the given year, month, day is a valid date (int)";$funclist[1266]="mcal_day_of_week";$funcdest[1266]="mcal_day_of_week(int year, int month, int day)<&%>Returns the day of the week of the given date (int)";$funclist[1267]="mcal_day_of_year";$funcdest[1267]="mcal_day_of_year(int year, int month, int day)<&%>Returns the day of the year of the given date (int)";$funclist[1268]="mcal_days_in_month";$funcdest[1268]="mcal_days_in_month(int month, int leap_year)<&%>Returns the number of days in a month (int)";$funclist[1269]="mcal_delete_calendar";$funcdest[1269]="mcal_delete_calendar(int stream, string calendar)<&%>Delete an MCAL calendar (string)";$funclist[1270]="mcal_delete_event";$funcdest[1270]="mcal_delete_event(int mcal_stream [, int event_id])<&%>Delete an event from an MCAL calendar (int)";$funclist[1271]="mcal_event_add_attribute";$funcdest[1271]="mcal_event_add_attribute(int stream, string attribute, string value)<&%>Adds an attribute and a value to the streams global event structure (void)";$funclist[1272]="mcal_event_init";$funcdest[1272]="mcal_event_init(int stream)<&%>Initializes a streams global event structure (int)";$funclist[1273]="mcal_event_set_alarm";$funcdest[1273]="mcal_event_set_alarm(int stream, int alarm)<&%>Sets the alarm of the streams global event structure (int)";$funclist[1274]="mcal_event_set_category";$funcdest[1274]="mcal_event_set_category(int stream, string category)<&%>Sets the category of the streams global event structure (int)";$funclist[1275]="mcal_event_set_class";$funcdest[1275]="mcal_event_set_class(int stream, int class)<&%>Sets the class of the streams global event structure (int)";$funclist[1276]="mcal_event_set_description";$funcdest[1276]="mcal_event_set_description(int stream, string description)<&%>Sets the description of the streams global event structure (int)";$funclist[1277]="mcal_event_set_end";$funcdest[1277]="mcal_event_set_end(int stream, int year, int month [, int day [, int hour [, int min [, int sec]]]])<&%>Sets the end date and time of the streams global event structure (int)";$funclist[1278]="mcal_event_set_recur_daily";$funcdest[1278]="mcal_event_set_recur_daily(int stream, int year, int month, int day, int interval)<&%>Sets the recurrence of the streams global event structure (int)";$funclist[1279]="mcal_event_set_recur_monthly_mday";$funcdest[1279]="mcal_event_set_recur_monthly_mday(int stream, int year, int month, int day, int interval)<&%>Sets the recurrence of the streams global event structure (int)";$funclist[1280]="mcal_event_set_recur_monthly_wday";$funcdest[1280]="mcal_event_set_recur_monthly_wday(int stream, int year, int month, int day, int interval)<&%>Sets the recurrence of the streams global event structure (int)";$funclist[1281]="mcal_event_set_recur_none";$funcdest[1281]="mcal_event_set_recur_none(int stream)<&%>Sets the recurrence of the streams global event structure (int)";$funclist[1282]="mcal_event_set_recur_weekly";$funcdest[1282]="mcal_event_set_recur_weekly(int stream, int year, int month, int day, int interval, int weekdays)<&%>Sets the recurrence of the streams global event structure (int)";$funclist[1283]="mcal_event_set_recur_yearly";$funcdest[1283]="mcal_event_set_recur_yearly(int stream, int year, int month, int day, int interval)<&%>Sets the recurrence of the streams global event structure (int)";$funclist[1284]="mcal_event_set_start";$funcdest[1284]="mcal_event_set_start(int stream, int year, int month [, int day [, int hour [, int min [, int sec]]]])<&%>Sets the start date and time of the streams global event structure (int)";$funclist[1285]="mcal_event_set_title";$funcdest[1285]="mcal_event_set_title(int stream, string title)<&%>Sets the title of the streams global event structure (int)";$funclist[1286]="mcal_expunge";$funcdest[1286]="mcal_expunge(int stream)<&%>Deletes all events marked for being expunged. (int)";$funclist[1287]="mcal_fetch_current_stream_event";$funcdest[1287]="mcal_fetch_current_stream_event(int stream)<&%>Returns an object containing the current streams event structure (object)";$funclist[1288]="mcal_fetch_event";$funcdest[1288]="mcal_fetch_event(int mcal_stream, int event_id [, int options])<&%>Fetches an event from the calendar stream (object)";$funclist[1289]="mcal_is_leap_year";$funcdest[1289]="mcal_is_leap_year(int year)<&%>Returns if the given year is a leap year or not (int)";$funclist[1290]="mcal_list_alarms";$funcdest[1290]="mcal_list_alarms(int mcal_stream [, int begin_year [, int begin_month [, int begin_day [, int end_year [, int end_month [, int end_day]]]]]])<&%>Return a list of events that has an alarm triggered at the given datetime (array)";$funclist[1291]="mcal_list_events";$funcdest[1291]="mcal_list_events(int mcal_stream, object begin_date [, object end_date])<&%>Return a list of IDs for a date or a range of dates (array)";$funclist[1292]="mcal_next_recurrence";$funcdest[1292]="mcal_next_recurrence(int stream, int weekstart, array next)<&%>Returns the next recurrence of the event (int)";$funclist[1293]="mcal_open";$funcdest[1293]="mcal_open(string calendar, string username, string password [, int options])<&%>Opens up an MCAL connection (int)";$funclist[1294]="mcal_popen";$funcdest[1294]="mcal_popen(string calendar, string username, string password [, int options])<&%>Opens up a persistent MCAL connection (int)";$funclist[1295]="mcal_rename_calendar";$funcdest[1295]="mcal_rename_calendar(int stream, string old_name, string new_name)<&%>Rename an MCAL calendar (string)";$funclist[1296]="mcal_reopen";$funcdest[1296]="mcal_reopen(string calendar [, int options])<&%>Reopens an MCAL connection (int)";$funclist[1297]="mcal_snooze";$funcdest[1297]="mcal_snooze(int id)<&%>Turn off an alarm for an event (int)";$funclist[1298]="mcal_store_event";$funcdest[1298]="mcal_store_event(int mcal_stream)<&%>Modify an existing event in an MCAL calendar (int)";$funclist[1299]="mcal_time_valid";$funcdest[1299]="mcal_time_valid(int hour, int minutes, int seconds)<&%>Returns TRUE if the given year, month, day is a valid time (int)";$funclist[1300]="mcal_week_of_year";$funcdest[1300]="mcal_week_of_year(int day, int month, int year)<&%>Returns the week number of the given date (int)";$funclist[1301]="mcrypt_cbc";$funcdest[1301]="mcrypt_cbc(int cipher, string key, string data, int mode [, string iv])<&%>Encrypt/decrypt data in CBC mode (string)";$funclist[1302]="mcrypt_cfb";$funcdest[1302]="mcrypt_cfb(int cipher, string key, string data, int mode, string iv)<&%>Encrypt/decrypt data in CFB mode (string)";$funclist[1303]="mcrypt_create_iv";$funcdest[1303]="mcrypt_create_iv(int size, int source)<&%>Create an initialization vector (IV)<&%>from a random source (string)";$funclist[1304]="mcrypt_decrypt";$funcdest[1304]="mcrypt_decrypt(string cipher, string key, string data, string mode [, string iv])<&%>Decrypts crypttext with given parameters (string)";$funclist[1305]="mcrypt_ecb";$funcdest[1305]="mcrypt_ecb(int cipher, string key, string data, int mode)<&%>Encrypt/decrypt data in ECB mode (string)";$funclist[1306]="mcrypt_enc_get_algorithms_name";$funcdest[1306]="mcrypt_enc_get_algorithms_name(resource td)<&%>Returns the name of the opened algorithm (string)";$funclist[1307]="mcrypt_enc_get_block_size";$funcdest[1307]="mcrypt_enc_get_block_size(resource td)<&%>Returns the blocksize of the opened algorithm (int)";$funclist[1308]="mcrypt_enc_get_iv_size";$funcdest[1308]="mcrypt_enc_get_iv_size(resource td)<&%>Returns the size of the IV of the opened algorithm (int)";$funclist[1309]="mcrypt_enc_get_key_size";$funcdest[1309]="mcrypt_enc_get_key_size(resource td)<&%>Returns the maximum supported keysize of the opened mode (int)";$funclist[1310]="mcrypt_enc_get_modes_name";$funcdest[1310]="mcrypt_enc_get_modes_name(resource td)<&%>Returns the name of the opened mode (string)";$funclist[1311]="mcrypt_enc_get_supported_key_sizes";$funcdest[1311]="mcrypt_enc_get_supported_key_sizes(resource td)<&%>Returns an array with the supported keysizes of the opened algorithm (array)";$funclist[1312]="mcrypt_enc_is_block_algorithm";$funcdest[1312]="mcrypt_enc_is_block_algorithm(resource td)<&%>Checks whether the algorithm of the opened mode is a block algorithm (bool)";$funclist[1313]="mcrypt_enc_is_block_algorithm_mode";$funcdest[1313]="mcrypt_enc_is_block_algorithm_mode(resource td)<&%>Checks whether the encryption of the opened mode works on blocks (bool)";$funclist[1314]="mcrypt_enc_is_block_mode";$funcdest[1314]="mcrypt_enc_is_block_mode(resource td)<&%>Checks whether the opened mode outputs blocks (bool)";$funclist[1315]="mcrypt_enc_self_test";$funcdest[1315]="mcrypt_enc_self_test(resource td)<&%>This function runs a self test on the opened module (bool)";$funclist[1316]="mcrypt_encrypt";$funcdest[1316]="mcrypt_encrypt(string cipher, string key, string data, string mode [, string iv])<&%>Encrypts plaintext with given parameters (string)";$funclist[1317]="mcrypt_generic";$funcdest[1317]="mcrypt_generic(resource td, string data)<&%>This function encrypts data (string)";$funclist[1318]="mcrypt_generic_deinit";$funcdest[1318]="mcrypt_generic_deinit(resource td)<&%>This function deinitializes an encryption module (bool)";$funclist[1319]="mcrypt_generic_end";$funcdest[1319]="mcrypt_generic_end(resource td)<&%>This function terminates encryption (bool)";$funclist[1320]="mcrypt_generic_init";$funcdest[1320]="mcrypt_generic_init(resource td, string key, string iv)<&%>This function initializes all buffers needed for encryption (int)";$funclist[1321]="mcrypt_get_block_size";$funcdest[1321]="mcrypt_get_block_size(int cipher)<&%>Get the block size of the specified cipher (int)";$funclist[1322]="mcrypt_get_cipher_name";$funcdest[1322]="mcrypt_get_cipher_name(int cipher)<&%>Get the name of the specified cipher (string)";$funclist[1323]="mcrypt_get_iv_size";$funcdest[1323]="mcrypt_get_iv_size(resource td)<&%>Returns the size of the IV belonging to a specific cipher/mode combination (int)";$funclist[1324]="mcrypt_get_key_size";$funcdest[1324]="mcrypt_get_key_size(int cipher)<&%>Get the key size of the specified cipher (int)";$funclist[1325]="mcrypt_list_algorithms";$funcdest[1325]="mcrypt_list_algorithms([string lib_dir])<&%>Get an array of all supported ciphers (array)";$funclist[1326]="mcrypt_list_modes";$funcdest[1326]="mcrypt_list_modes([string lib_dir])<&%>Get an array of all supported modes (array)";$funclist[1327]="mcrypt_module_close";$funcdest[1327]="mcrypt_module_close(resource td)<&%>Close the mcrypt module (bool)";$funclist[1328]="mcrypt_module_get_algo_block_size";$funcdest[1328]="mcrypt_module_get_algo_block_size(string algorithm [, string lib_dir])<&%>Returns the blocksize of the specified algorithm (int)";$funclist[1329]="mcrypt_module_get_algo_key_size";$funcdest[1329]="mcrypt_module_get_algo_key_size(string algorithm [, string lib_dir])<&%>Returns the maximum supported keysize of the opened mode (int)";$funclist[1330]="mcrypt_module_get_supported_key_sizes";$funcdest[1330]="mcrypt_module_get_supported_key_sizes(string algorithm [, string lib_dir])<&%>Returns an array with the supported keysizes of the opened algorithm (array)";$funclist[1331]="mcrypt_module_is_block_algorithm";$funcdest[1331]="mcrypt_module_is_block_algorithm(string algorithm [, string lib_dir])<&%>This function checks whether the specified algorithm is a block algorithm (bool)";$funclist[1332]="mcrypt_module_is_block_algorithm_mode";$funcdest[1332]="mcrypt_module_is_block_algorithm_mode(string mode [, string lib_dir])<&%>This function returns if the the specified module is a block algorithm or not (bool)";$funclist[1333]="mcrypt_module_is_block_mode";$funcdest[1333]="mcrypt_module_is_block_mode(string mode [, string lib_dir])<&%>This function returns if the the specified mode outputs blocks or not (bool)";$funclist[1334]="mcrypt_module_open";$funcdest[1334]="mcrypt_module_open(string algorithm, string algorithm_directory, string mode, string mode_directory)<&%>Opens the module of the algorithm and the mode to be used (resource)";$funclist[1335]="mcrypt_module_self_test";$funcdest[1335]="mcrypt_module_self_test(string algorithm [, string lib_dir])<&%>This function runs a self test on the specified module (bool)";$funclist[1336]="mcrypt_ofb";$funcdest[1336]="mcrypt_ofb(int cipher, string key, string data, int mode, string iv)<&%>Encrypt/decrypt data in OFB mode (string)";$funclist[1337]="mcve_adduser";$funcdest[1337]="mcve_adduser(resource conn, string admin_password, int usersetup)<&%>Add an MCVE user using usersetup structure (int)";$funclist[1338]="mcve_adduserarg";$funcdest[1338]="mcve_adduserarg(resource usersetup, int argtype, string argval)<&%>Add a value to user configuration structure (int)";$funclist[1339]="mcve_bt";$funcdest[1339]="mcve_bt(resource conn, string username, string password)<&%>Get unsettled batch totals (int)";$funclist[1340]="mcve_checkstatus";$funcdest[1340]="mcve_checkstatus(resource conn, int identifier)<&%>Check to see if a transaction has completed (int)";$funclist[1341]="mcve_chkpwd";$funcdest[1341]="mcve_chkpwd(resource conn, string username, string password)<&%>Verify Password (int)";$funclist[1342]="mcve_chngpwd";$funcdest[1342]="mcve_chngpwd(resource conn, string admin_password, string new_password)<&%>Change the system administrator's password (int)";$funclist[1343]="mcve_completeauthorizations";$funcdest[1343]="mcve_completeauthorizations(resource conn, int &array)<&%>Number of complete authorizations in queue, returning an array of their identifiers (int)";$funclist[1344]="mcve_connect";$funcdest[1344]="mcve_connect(resource conn)<&%>Establish the connection to MCVE (int)";$funclist[1345]="mcve_connectionerror";$funcdest[1345]="mcve_connectionerror(resource conn)<&%>Get a textual representation of why a connection failed (string)";$funclist[1346]="mcve_deleteresponse";$funcdest[1346]="mcve_deleteresponse(resource conn, int identifier)<&%>Delete specified transaction from MCVE_CONN structure (bool)";$funclist[1347]="mcve_deletetrans";$funcdest[1347]="mcve_deletetrans(resource conn, int identifier)<&%>Delete specified transaction from MCVE_CONN structure (bool)";$funclist[1348]="mcve_deleteusersetup";$funcdest[1348]="mcve_deleteusersetup(resource usersetup)<&%>Deallocate data associated with usersetup structure (void)";$funclist[1349]="mcve_deluser";$funcdest[1349]="mcve_deluser(resource conn, string admin_password, string username)<&%>Delete an MCVE user account (int)";$funclist[1350]="mcve_destroyconn";$funcdest[1350]="mcve_destroyconn(resource conn)<&%>Destroy the connection and MCVE_CONN structure (void)";$funclist[1351]="mcve_destroyengine";$funcdest[1351]="mcve_destroyengine(void)<&%>Free memory associated with IP/SSL connectivity (void)";$funclist[1352]="mcve_disableuser";$funcdest[1352]="mcve_disableuser(resource conn, string admin_password, string username)<&%>Disable an active MCVE user account (int)";$funclist[1353]="mcve_edituser";$funcdest[1353]="mcve_edituser(resource conn, string admin_password, int usersetup)<&%>Edit MCVE user using usersetup structure (int)";$funclist[1354]="mcve_enableuser";$funcdest[1354]="mcve_enableuser(resource conn, string admin_password, string username)<&%>Enable an inactive MCVE user account (int)";$funclist[1355]="mcve_force";$funcdest[1355]="mcve_force(resiurce conn, string username, string password, string trackdata, string account, string expdate, float amount, string authcode, string comments, string clerkid, string stationid, int ptrannum)<&%>Send a FORCE to MCVE. (typically, a phone-authorization)<&%>(int)";$funclist[1356]="mcve_getcell";$funcdest[1356]="mcve_getcell(resource conn, int identifier, string column, int row)<&%>Get a specific cell from a comma delimited response by column name (string)";$funclist[1357]="mcve_getcellbynum";$funcdest[1357]="mcve_getcellbynum(resource conn, int identifier, int column, int row)<&%>Get a specific cell from a comma delimited response by column number (string)";$funclist[1358]="mcve_getcommadelimited";$funcdest[1358]="mcve_getcommadelimited(resource conn, int identifier)<&%>Get the RAW comma delimited data returned from MCVE (string)";$funclist[1359]="mcve_getheader";$funcdest[1359]="mcve_getheader(resource conn, int identifier, int column_num)<&%>Get the name of the column in a comma-delimited response (string)";$funclist[1360]="mcve_getuserarg";$funcdest[1360]="mcve_getuserarg(resource usersetup, int argtype)<&%>Grab a value from usersetup structure (string)";$funclist[1361]="mcve_getuserparam";$funcdest[1361]="mcve_getuserparam(resource conn, long identifier, int key)<&%>Get a user response parameter (string)";$funclist[1362]="mcve_gft";$funcdest[1362]="mcve_gft(resource conn, string username, string password, int type, string account, string clerkid, string stationid, string comments, int ptrannum, string startdate, string enddate)<&%>Audit MCVE for Failed transactions (int)";$funclist[1363]="mcve_gl";$funcdest[1363]="mcve_gl(int conn, string username, string password, int type, string account, string batch, string clerkid, string stationid, string comments, int ptrannum, string startdate, string enddate)<&%>Audit MCVE for settled transactions (int)";$funclist[1364]="mcve_gut";$funcdest[1364]="mcve_gut(resource conn, string username, string password, int type, string account, string clerkid, string stationid, string comments, int ptrannum, string startdate, string enddate)<&%>Audit MCVE for Unsettled Transactions (int)";$funclist[1365]="mcve_initconn";$funcdest[1365]="mcve_initconn(void)<&%>Create and initialize an MCVE_CONN structure (resource)";$funclist[1366]="mcve_initengine";$funcdest[1366]="mcve_initengine(string location)<&%>Ready the client for IP/SSL Communication (int)";$funclist[1367]="mcve_initusersetup";$funcdest[1367]="mcve_initusersetup(void)<&%>Initialize structure to store user data (resource)";$funclist[1368]="mcve_iscommadelimited";$funcdest[1368]="mcve_iscommadelimited(resource conn, int identifier)<&%>Checks to see if response is comma delimited (int)";$funclist[1369]="mcve_liststats";$funcdest[1369]="mcve_liststats(resource conn, string admin_password)<&%>List statistics for all users on MCVE system (int)";$funclist[1370]="mcve_listusers";$funcdest[1370]="mcve_listusers(resource conn, string admin_password)<&%>List all users on MCVE system (int)";$funclist[1371]="mcve_maxconntimeout";$funcdest[1371]="mcve_maxconntimeout(resource conn, int secs)<&%>The maximum amount of time the API will attempt a connection to MCVE (bool)";$funclist[1372]="mcve_monitor";$funcdest[1372]="mcve_monitor(resource conn)<&%>Perform communication with MCVE (send/receive data)<&%>Non-blocking (int)";$funclist[1373]="mcve_numcolumns";$funcdest[1373]="mcve_numcolumns(resource conn, int identifier)<&%>Number of columns returned in a comma delimited response (int)";$funclist[1374]="mcve_numrows";$funcdest[1374]="mcve_numrows(resource conn, int identifier)<&%>Number of rows returned in a comma delimited response (int)";$funclist[1375]="mcve_override";$funcdest[1375]="mcve_override(resource conn, string username, string password, string trackdata, string account, string expdate, float amount, string street, string zip, string cv, string comments, string clerkid, string stationid, int ptrannum)<&%>Send an OVERRIDE to MCVE (int)";$funclist[1376]="mcve_parsecommadelimited";$funcdest[1376]="mcve_parsecommadelimited(resource conn, int identifier)<&%>Parse the comma delimited response so mcve_getcell, etc will work (int)";$funclist[1377]="mcve_ping";$funcdest[1377]="mcve_ping(resource conn)<&%>Send a ping request to MCVE (int)";$funclist[1378]="mcve_preauth";$funcdest[1378]="mcve_preauth(resource conn, string username, string password, string trackdata, string account, string expdate, float amount, string street, string zip, string cv, string comments, string clerkid, string stationid, int ptrannum)<&%>Send a PREAUTHORIZATION to MCVE (int)";$funclist[1379]="mcve_preauthcompletion";$funcdest[1379]="mcve_preauthcompletion(resource conn, string username, string password, float finalamount, int sid, int ptrannum)<&%>Complete a PREAUTHORIZATION... Ready it for settlement (int)";$funclist[1380]="mcve_qc";$funcdest[1380]="mcve_qc(resource conn, string username, string password, string clerkid, string stationid, string comments, int ptrannum)<&%>Audit MCVE for a list of transactions in the outgoing queue (int)";$funclist[1381]="mcve_responseparam";$funcdest[1381]="mcve_responseparam(resource conn, long identifier, string key)<&%>Get a custom response parameter (string)";$funclist[1382]="mcve_return";$funcdest[1382]="mcve_return(int conn, string username, string password, string trackdata, string account, string expdate, float amount, string comments, string clerkid, string stationid, int ptrannum)<&%>Issue a RETURN or CREDIT to MCVE (int)";$funclist[1383]="mcve_returncode";$funcdest[1383]="mcve_returncode(resource conn, int identifier)<&%>Grab the exact return code from the transaction (int)";$funclist[1384]="mcve_returnstatus";$funcdest[1384]="mcve_returnstatus(resource conn, int identifier)<&%>Check to see if the transaction was successful (int)";$funclist[1385]="mcve_sale";$funcdest[1385]="mcve_sale(resource conn, string username, string password, string trackdata, string account, string expdate, float amount, string street, string zip, string cv, string comments, string clerkid, string stationid, int ptrannum)<&%>Send a SALE to MCVE (int)";$funclist[1386]="mcve_setblocking";$funcdest[1386]="mcve_setblocking(resource conn, int tf)<&%>Set blocking/non-blocking mode for connection (int)";$funclist[1387]="mcve_setdropfile";$funcdest[1387]="mcve_setdropfile(resource conn, string directory)<&%>Set the connection method to Drop-File (int)";$funclist[1388]="mcve_setip";$funcdest[1388]="mcve_setip(resource conn, string host, int port)<&%>Set the connection method to IP (int)";$funclist[1389]="mcve_setssl";$funcdest[1389]="mcve_setssl(resource conn, string host, int port)<&%>Set the connection method to SSL (int)";$funclist[1390]="mcve_settimeout";$funcdest[1390]="mcve_settimeout(resource conn, int seconds)<&%>Set maximum transaction time (per trans)<&%>(int)";$funclist[1391]="mcve_settle";$funcdest[1391]="mcve_settle(resource conn, string username, string password, string batch)<&%>Issue a settlement command to do a batch deposit (int)";$funclist[1392]="mcve_text_avs";$funcdest[1392]="mcve_text_avs(string code)<&%>Get a textual representation of the return_avs (string)";$funclist[1393]="mcve_text_code";$funcdest[1393]="mcve_text_code(string code)<&%>Get a textual representation of the return_code (string)";$funclist[1394]="mcve_text_cv";$funcdest[1394]="mcve_text_cv(int code)<&%>Get a textual representation of the return_cv (string)";$funclist[1395]="mcve_transactionauth";$funcdest[1395]="mcve_transactionauth(resource conn, int identifier)<&%>Get the authorization number returned for the transaction (alpha-numeric)<&%>(string)";$funclist[1396]="mcve_transactionavs";$funcdest[1396]="mcve_transactionavs(resource conn, int identifier)<&%>Get the Address Verification return status (int)";$funclist[1397]="mcve_transactionbatch";$funcdest[1397]="mcve_transactionbatch(resource conn, int identifier)<&%>Get the batch number associated with the transaction (int)";$funclist[1398]="mcve_transactioncv";$funcdest[1398]="mcve_transactioncv(resource conn, int identifier)<&%>Get the CVC2/CVV2/CID return status (int)";$funclist[1399]="mcve_transactionid";$funcdest[1399]="mcve_transactionid(resource conn, int identifier)<&%>Get the unique system id for the transaction (int)";$funclist[1400]="mcve_transactionitem";$funcdest[1400]="mcve_transactionitem(resource conn, int identifier)<&%>Get the ITEM number in the associated batch for this transaction (int)";$funclist[1401]="mcve_transactionssent";$funcdest[1401]="mcve_transactionssent(resource conn)<&%>Check to see if outgoing buffer is clear (int)";$funclist[1402]="mcve_transactiontext";$funcdest[1402]="mcve_transactiontext(resource conn, int identifier)<&%>Get verbiage (text)<&%>return from MCVE or processing institution (string)";$funclist[1403]="mcve_transinqueue";$funcdest[1403]="mcve_transinqueue(resource conn)<&%>Number of transactions in client-queue (int)";$funclist[1404]="mcve_transnew";$funcdest[1404]="mcve_transnew(resource conn)<&%>Start a new transaction (int)";$funclist[1405]="mcve_transparam";$funcdest[1405]="mcve_transparam(resource conn, long identifier, int key)<&%>Add a parameter to a transaction (int)";$funclist[1406]="mcve_transsend";$funcdest[1406]="mcve_transsend(resource conn, long identifier)<&%>Finalize and send the transaction (int)";$funclist[1407]="mcve_ub";$funcdest[1407]="mcve_ub(resource conn, string username, string password)<&%>Get a list of all Unsettled batches (int)";$funclist[1408]="mcve_uwait";$funcdest[1408]="mcve_uwait(long microsecs)<&%>Wait x microsecs (int)";$funclist[1409]="mcve_verifyconnection";$funcdest[1409]="mcve_verifyconnection(resource conn, int tf)<&%>Set whether or not to PING upon connect to verify connection (bool)";$funclist[1410]="mcve_verifysslcert";$funcdest[1410]="mcve_verifysslcert(resource conn, int tf)<&%>Set whether or not to verify the server ssl certificate (bool)";$funclist[1411]="mcve_void";$funcdest[1411]="mcve_void(resource conn, string username, string password, int sid, int ptrannum)<&%>VOID a transaction in the settlement queue (int)";$funclist[1412]="md5";$funcdest[1412]="md5(string str [, bool raw_output])<&%>Calculate the md5 hash of a string (string)";$funclist[1413]="md5_file";$funcdest[1413]="md5_file(string filename [, bool raw_output])<&%>Calculates the md5 hash of a given filename (string)";$funclist[1414]="mdecrypt_generic";$funcdest[1414]="mdecrypt_generic(resource td, string data)<&%>Decrypt data (string)";$funclist[1415]="metaphone";$funcdest[1415]="metaphone(string str)<&%>Calculate the metaphone key of a string (string)";$funclist[1416]="method_exists";$funcdest[1416]="method_exists(object object, string method_name)<&%>Checks if the class method exists (bool)";$funclist[1417]="mhash";$funcdest[1417]="mhash(int hash, string data [, string key])<&%>Compute hash (string)";$funclist[1418]="mhash_count";$funcdest[1418]="mhash_count(void)<&%>Get the highest available hash id (int)";$funclist[1419]="mhash_get_block_size";$funcdest[1419]="mhash_get_block_size(int hash)<&%>Get the block size of the specified hash (int)";$funclist[1420]="mhash_get_hash_name";$funcdest[1420]="mhash_get_hash_name(int hash)<&%>Get the name of the specified hash (string)";$funclist[1421]="mhash_keygen_s2k";$funcdest[1421]="mhash_keygen_s2k(int hash, string password, string salt, int bytes)<&%>Generates a key (string)";$funclist[1422]="microtime";$funcdest[1422]="microtime(void)<&%>Return current UNIX timestamp with microseconds (string)";$funclist[1423]="mime_content_type";$funcdest[1423]="mime_content_type(string filename)<&%>Detect MIME Content-type for a file (string)";$funclist[1424]="min";$funcdest[1424]="min(number arg1, number arg2 [, ...])<&%>Find lowest value (number)";$funclist[1425]="ming_setcubicthreshold";$funcdest[1425]="ming_setcubicthreshold(int threshold)<&%>Set cubic threshold (?)<&%>(void)";$funclist[1426]="ming_setscale";$funcdest[1426]="ming_setscale(int scale)<&%>Set scale (?)<&%>(void)";$funclist[1427]="ming_useswfversion";$funcdest[1427]="ming_useswfversion(int version)<&%>Use SWF version (?)<&%>(void)";$funclist[1428]="mkdir";$funcdest[1428]="mkdir(string pathname [, int mode])<&%>Makes directory (int)";$funclist[1429]="mktime";$funcdest[1429]="mktime([int hour [, int minute [, int second [, int month [, int day [, int year [, int is_dst]]]]]]])<&%>Get UNIX timestamp for a date (int)";$funclist[1430]="money_format";$funcdest[1430]="money_format(string format, float number)<&%>Formats a number as a currency string (string)";$funclist[1431]="move_uploaded_file";$funcdest[1431]="move_uploaded_file(string filename, string destination)<&%>Moves an uploaded file to a new location (bool)";$funclist[1432]="msession_connect";$funcdest[1432]="msession_connect(string host, string port)<&%>Connect to msession server (bool)";$funclist[1433]="msession_count";$funcdest[1433]="msession_count(void)<&%>Get session count (int)";$funclist[1434]="msession_create";$funcdest[1434]="msession_create(string session)<&%>Create a session (bool)";$funclist[1435]="msession_destroy";$funcdest[1435]="msession_destroy(string name)<&%>Destroy a session (bool)";$funclist[1436]="msession_disconnect";$funcdest[1436]="msession_disconnect(void)<&%>Close connection to msession server (void)";$funclist[1437]="msession_find";$funcdest[1437]="msession_find(string name, string value)<&%>Find value (array)";$funclist[1438]="msession_get";$funcdest[1438]="msession_get(string session, string name, string value)<&%>Get value from session (string)";$funclist[1439]="msession_get_array";$funcdest[1439]="msession_get_array(string session)<&%>Get array of ... ? (array)";$funclist[1440]="msession_getdata";$funcdest[1440]="msession_getdata(string session)<&%>Get data ... ? (string)";$funclist[1441]="msession_inc";$funcdest[1441]="msession_inc(string session, string name)<&%>Increment value in session (string)";$funclist[1442]="msession_list";$funcdest[1442]="msession_list(void)<&%>List ... ? (array)";$funclist[1443]="msession_listvar";$funcdest[1443]="msession_listvar(string name)<&%>List sessions with variable (array)";$funclist[1444]="msession_lock";$funcdest[1444]="msession_lock(string name)<&%>Lock a session (int)";$funclist[1445]="msession_plugin";$funcdest[1445]="msession_plugin(string session, string val [, string param])<&%>Call an escape function within the msession personality plugin (string)";$funclist[1446]="msession_randstr";$funcdest[1446]="msession_randstr(int param)<&%>Get random string (string)";$funclist[1447]="msession_set";$funcdest[1447]="msession_set(string session, string name, string value)<&%>Set value in session (bool)";$funclist[1448]="msession_set_array";$funcdest[1448]="msession_set_array(string session, array tuples)<&%>Set array of ... (bool)";$funclist[1449]="msession_setdata";$funcdest[1449]="msession_setdata(string session, string value)<&%>Set data  ... ? (bool)";$funclist[1450]="msession_timeout";$funcdest[1450]="msession_timeout(string session [, int param])<&%>Set/get session timeout (int)";$funclist[1451]="msession_uniq";$funcdest[1451]="msession_uniq(int param)<&%>Get uniq id (string)";$funclist[1452]="msession_unlock";$funcdest[1452]="msession_unlock(string session, int key)<&%>Unlock a session (int)";$funclist[1453]="msg_get_queue";$funcdest[1453]="msg_get_queue(int key [, int perms])<&%>Create or attach to a message queue (int)";$funclist[1454]="msg_receive";$funcdest[1454]="msg_receive(int queue, int desiredmsgtype, int msgtype, int maxsize, mixed message [, bool unserialize [, int flags [, int errorcode]]])<&%>Receive a message from a message queue (bool)";$funclist[1455]="msg_remove_queue";$funcdest[1455]="msg_remove_queue(int queue)<&%>Destroy a message queue (bool)";$funclist[1456]="msg_send";$funcdest[1456]="msg_send(int queue, int msgtype, mixed message [, bool serialize [, bool blocking [, int errorcode]]])<&%>Send a message to a message queue (bool)";$funclist[1457]="msg_set_queue";$funcdest[1457]="msg_set_queue(int queue, array data)<&%>Set information in the message queue data structure (bool)";$funclist[1458]="msg_stat_queue";$funcdest[1458]="msg_stat_queue(int queue)<&%>Returns information from the message queue data structure (array)";$funclist[1459]="msql";$funcdest[1459]="msql(string database, string query, int link_identifier)<&%>Send mSQL query (int)";$funclist[1460]="msql_affected_rows";$funcdest[1460]="msql_affected_rows(int query_identifier)<&%>Returns number of affected rows (int)";$funclist[1461]="msql_close";$funcdest[1461]="msql_close(int link_identifier)<&%>Close mSQL connection (int)";$funclist[1462]="msql_connect";$funcdest[1462]="msql_connect([string hostname [, string server [, string username [, string password]]]])<&%>Open mSQL connection (int)";$funclist[1463]="msql_create_db";$funcdest[1463]="msql_create_db(string database_name [, int link_identifier])<&%>Create mSQL database (int)";$funclist[1464]="msql_createdb";$funcdest[1464]="msql_createdb(string database name [, int link_identifier])<&%>Create mSQL database (int)";$funclist[1465]="msql_data_seek";$funcdest[1465]="msql_data_seek(int query_identifier, int row_number)<&%>Move internal row pointer (int)";$funclist[1466]="msql_dbname";$funcdest[1466]="msql_dbname(int query_identifier, int i)<&%>Get current mSQL database name (string)";$funclist[1467]="msql_drop_db";$funcdest[1467]="msql_drop_db(string database_name, int link_identifier)<&%>Drop (delete)<&%>mSQL database (int)";$funclist[1468]="msql_dropdb";$funcdest[1468]="msql_dropdb(?)<&%>Drop (delete)<&%>mSQL database (?)";$funclist[1469]="msql_error";$funcdest[1469]="msql_error([int link_identifier])<&%>Returns error message of last msql call (string)";$funclist[1470]="msql_fetch_array";$funcdest[1470]="msql_fetch_array(int query_identifier [, int result_type])<&%>Fetch row as array (int)";$funclist[1471]="msql_fetch_field";$funcdest[1471]="msql_fetch_field(int query_identifier, int field_offset)<&%>Get field information (object)";$funclist[1472]="msql_fetch_object";$funcdest[1472]="msql_fetch_object(int query_identifier [, int result_type])<&%>Fetch row as object (int)";$funclist[1473]="msql_fetch_row";$funcdest[1473]="msql_fetch_row(int query_identifier)<&%>Get row as enumerated array (array)";$funclist[1474]="msql_field_seek";$funcdest[1474]="msql_field_seek(int query_identifier, int field_offset)<&%>Set field offset (int)";$funclist[1475]="msql_fieldflags";$funcdest[1475]="msql_fieldflags(int query_identifier, int i)<&%>Get field flags (string)";$funclist[1476]="msql_fieldlen";$funcdest[1476]="msql_fieldlen(int query_identifier, int i)<&%>Get field length (int)";$funclist[1477]="msql_fieldname";$funcdest[1477]="msql_fieldname(int query_identifier, int field)<&%>Get field name (string)";$funclist[1478]="msql_fieldtable";$funcdest[1478]="msql_fieldtable(int query_identifier, int field)<&%>Get table name for field (int)";$funclist[1479]="msql_fieldtype";$funcdest[1479]="msql_fieldtype(int query_identifier, int i)<&%>Get field type (string)";$funclist[1480]="msql_free_result";$funcdest[1480]="msql_free_result(int query_identifier)<&%>Free result memory (int)";$funclist[1481]="msql_freeresult";$funcdest[1481]="msql_freeresult(?)<&%>Free result memory (?)";$funclist[1482]="msql_list_dbs";$funcdest[1482]="msql_list_dbs(void)<&%>List mSQL databases on server (int)";$funclist[1483]="msql_list_fields";$funcdest[1483]="msql_list_fields(string database, string tablename)<&%>List result fields (int)";$funclist[1484]="msql_list_tables";$funcdest[1484]="msql_list_tables(string database)<&%>List tables in an mSQL database (int)";$funclist[1485]="msql_listdbs";$funcdest[1485]="msql_listdbs(?)<&%>List mSQL databases on server (?)";$funclist[1486]="msql_listfields";$funcdest[1486]="msql_listfields(?)<&%>List result fields (?)";$funclist[1487]="msql_listtables";$funcdest[1487]="msql_listtables(?)<&%>List tables in an mSQL database (?)";$funclist[1488]="msql_num_fields";$funcdest[1488]="msql_num_fields(int query_identifier)<&%>Get number of fields in result (int)";$funclist[1489]="msql_num_rows";$funcdest[1489]="msql_num_rows(int query_identifier)<&%>Get number of rows in result (int)";$funclist[1490]="msql_numfields";$funcdest[1490]="msql_numfields(int query_identifier)<&%>Get number of fields in result (int)";$funclist[1491]="msql_numrows";$funcdest[1491]="msql_numrows(void)<&%>Get number of rows in result (int)";$funclist[1492]="msql_pconnect";$funcdest[1492]="msql_pconnect([string server [, string username [, string password]]])<&%>Open persistent mSQL connection (int)";$funclist[1493]="msql_query";$funcdest[1493]="msql_query(string query, int link_identifier)<&%>Send mSQL query (int)";$funclist[1494]="msql_regcase";$funcdest[1494]="msql_regcase(?)<&%>Make regular expression for case insensitive match (?)";$funclist[1495]="msql_result";$funcdest[1495]="msql_result(int query_identifier, int i, mixed field)<&%>Get result data (int)";$funclist[1496]="msql_select_db";$funcdest[1496]="msql_select_db(string database_name, int link_identifier)<&%>Select mSQL database (int)";$funclist[1497]="msql_selectdb";$funcdest[1497]="msql_selectdb(?)<&%>Select mSQL database (?)";$funclist[1498]="msql_tablename";$funcdest[1498]="msql_tablename(int query_identifier, int field)<&%>Get table name of field (string)";$funclist[1499]="mssql_bind";$funcdest[1499]="mssql_bind(int stmt, string param_name, mixed var, int type [, int is_output [, int is_null [, int maxlen]]])<&%>Adds a parameter to a stored procedure or a remote stored procedure (int)";$funclist[1500]="mssql_close";$funcdest[1500]="mssql_close([int link_identifier])<&%>Close MS SQL Server connection (int)";$funclist[1501]="mssql_connect";$funcdest[1501]="mssql_connect([string servername [, string username [, string password]]])<&%>Open MS SQL server connection (int)";$funclist[1502]="mssql_data_seek";$funcdest[1502]="mssql_data_seek(int result_identifier, int row_number)<&%>Move internal row pointer (int)";$funclist[1503]="mssql_execute";$funcdest[1503]="mssql_execute(int stmt)<&%>Executes a stored procedure on a MS SQL server database (int)";$funclist[1504]="mssql_fetch_array";$funcdest[1504]="mssql_fetch_array(int result)<&%>Fetch row as array (array)";$funclist[1505]="mssql_fetch_assoc";$funcdest[1505]="mssql_fetch_assoc(int result_id [, int result_type])<&%>Returns an associative array of the current row in the result set specified by result_id (array)";$funclist[1506]="mssql_fetch_batch";$funcdest[1506]="mssql_fetch_batch(string result_index)<&%>Returns the next batch of records (int)";$funclist[1507]="mssql_fetch_field";$funcdest[1507]="mssql_fetch_field(int result [, int field_offset])<&%>Get field information (object)";$funclist[1508]="mssql_fetch_object";$funcdest[1508]="mssql_fetch_object(int result)<&%>Fetch row as object (object)";$funclist[1509]="mssql_fetch_row";$funcdest[1509]="mssql_fetch_row(int result)<&%>Get row as enumerated array (array)";$funclist[1510]="mssql_field_length";$funcdest[1510]="mssql_field_length(int result [, int offset])<&%>Get the length of a field (int)";$funclist[1511]="mssql_field_name";$funcdest[1511]="mssql_field_name(int result [, int offset])<&%>Get the name of a field (int)";$funclist[1512]="mssql_field_seek";$funcdest[1512]="mssql_field_seek(int result, int field_offset)<&%>Set field offset (int)";$funclist[1513]="mssql_field_type";$funcdest[1513]="mssql_field_type(int result [, int offset])<&%>Get the type of a field (string)";$funclist[1514]="mssql_free_result";$funcdest[1514]="mssql_free_result(int result)<&%>Free result memory (int)";$funclist[1515]="mssql_free_statement";$funcdest[1515]="mssql_free_statement(int statement)<&%>Free statement memory (int)";$funclist[1516]="mssql_get_last_message";$funcdest[1516]="mssql_get_last_message(void)<&%>Returns the last message from server (over min_message_severity?)<&%>(string)";$funclist[1517]="mssql_guid_string";$funcdest[1517]="mssql_guid_string(string binary [, int short_format])<&%>Converts a 16 byte binary GUID to a string (string)";$funclist[1518]="mssql_init";$funcdest[1518]="mssql_init(string sp_name [, int conn_id])<&%>Initializes a stored procedure or a remote stored procedure (int)";$funclist[1519]="mssql_min_error_severity";$funcdest[1519]="mssql_min_error_severity(int severity)<&%>Sets the lower error severity (void)";$funclist[1520]="mssql_min_message_severity";$funcdest[1520]="mssql_min_message_severity(int severity)<&%>Sets the lower message severity (void)";$funclist[1521]="mssql_next_result";$funcdest[1521]="mssql_next_result(int result_id)<&%>Move the internal result pointer to the next result (bool)";$funclist[1522]="mssql_num_fields";$funcdest[1522]="mssql_num_fields(int result)<&%>Get number of fields in result (int)";$funclist[1523]="mssql_num_rows";$funcdest[1523]="mssql_num_rows(string result)<&%>Get number of rows in result (int)";$funclist[1524]="mssql_pconnect";$funcdest[1524]="mssql_pconnect([string servername [, string username [, string password]]])<&%>Open persistent MS SQL connection (int)";$funclist[1525]="mssql_query";$funcdest[1525]="mssql_query(string query [, int link_identifier])<&%>Send MS SQL query (int)";$funclist[1526]="mssql_result";$funcdest[1526]="mssql_result(int result, int i, mixed field)<&%>Get result data (int)";$funclist[1527]="mssql_rows_affected";$funcdest[1527]="mssql_rows_affected(int conn_id)<&%>Returns the number of records affected by the query (int)";$funclist[1528]="mssql_select_db";$funcdest[1528]="mssql_select_db(string database_name [, int link_identifier])<&%>Select MS SQL database (int)";$funclist[1529]="mt_getrandmax";$funcdest[1529]="mt_getrandmax(void)<&%>Show largest possible random value (int)";$funclist[1530]="mt_rand";$funcdest[1530]="mt_rand([int min, int max])<&%>Generate a better random value (int)";$funclist[1531]="mt_srand";$funcdest[1531]="mt_srand(int seed)<&%>Seed the better random number generator (void)";$funclist[1532]="muscat_close";$funcdest[1532]="muscat_close(resource muscat_handle)<&%>Shuts down the muscat session and releases any memory back to PHP. (int)";$funclist[1533]="muscat_get";$funcdest[1533]="muscat_get(resource muscat_handle)<&%>Gets a line back from the core muscat API. (string)";$funclist[1534]="muscat_give";$funcdest[1534]="muscat_give(resource muscat_handle, string string)<&%>Sends string to the core muscat API (int)";$funclist[1535]="muscat_setup";$funcdest[1535]="muscat_setup(int size [, string muscat_dir])<&%>Creates a new muscat session and returns the handle. (resource)";$funclist[1536]="muscat_setup_net";$funcdest[1536]="muscat_setup_net(string muscat_host, int port)<&%>Creates a new muscat session and returns the handle. (resource)";$funclist[1537]="mysql_affected_rows";$funcdest[1537]="mysql_affected_rows([resource link_identifier])<&%>Get number of affected rows in previous MySQL operation (int)";$funclist[1538]="mysql_change_user";$funcdest[1538]="mysql_change_user(string user, string password [, string database [, resource link_identifier]])<&%>Change logged in user of the active connection (int)";$funclist[1539]="mysql_client_encoding";$funcdest[1539]="mysql_client_encoding([resource link_identifier])<&%>Returns the name of the character set (int)";$funclist[1540]="mysql_close";$funcdest[1540]="mysql_close([resource link_identifier])<&%>Close MySQL connection (bool)";$funclist[1541]="mysql_connect";$funcdest[1541]="mysql_connect([string server [, string username [, string password [, bool new_link [, int client_flags]]]]])<&%>Open a connection to a MySQL Server (resource)";$funclist[1542]="mysql_create_db";$funcdest[1542]="mysql_create_db(string database name [, resource link_identifier])<&%>Create a MySQL database (bool)";$funclist[1543]="mysql_data_seek";$funcdest[1543]="mysql_data_seek(resource result_identifier, int row_number)<&%>Move internal result pointer (bool)";$funclist[1544]="mysql_db_name";$funcdest[1544]="mysql_db_name(resource result, int row [, mixed field])<&%>Get result data (string)";$funclist[1545]="mysql_db_query";$funcdest[1545]="mysql_db_query(string database, string query [, resource link_identifier])<&%>Send a MySQL query (resource)";$funclist[1546]="mysql_drop_db";$funcdest[1546]="mysql_drop_db(string database_name [, resource link_identifier])<&%>Drop (delete)<&%>a MySQL database (bool)";$funclist[1547]="mysql_errno";$funcdest[1547]="mysql_errno([resource link_identifier])<&%>Returns the numerical value of the error message from previous MySQL operation (int)";$funclist[1548]="mysql_error";$funcdest[1548]="mysql_error([resource link_identifier])<&%>Returns the text of the error message from previous MySQL operation (string)";$funclist[1549]="mysql_escape_string";$funcdest[1549]="mysql_escape_string(string unescaped_string)<&%>Escapes a string for use in a mysql_query. (string)";$funclist[1550]="mysql_fetch_array";$funcdest[1550]="mysql_fetch_array(resource result [, int result_type])<&%>Fetch a result row as an associative array, a numeric array, or both. (array)";$funclist[1551]="mysql_fetch_assoc";$funcdest[1551]="mysql_fetch_assoc(resource result)<&%>Fetch a result row as an associative array (array)";$funclist[1552]="mysql_fetch_field";$funcdest[1552]="mysql_fetch_field(resource result [, int field_offset])<&%>Get column information from a result and return as an object (object)";$funclist[1553]="mysql_fetch_lengths";$funcdest[1553]="mysql_fetch_lengths(resource result)<&%>Get the length of each output in a result (array)";$funclist[1554]="mysql_fetch_object";$funcdest[1554]="mysql_fetch_object(resource result)<&%>Fetch a result row as an object (object)";$funclist[1555]="mysql_fetch_row";$funcdest[1555]="mysql_fetch_row(resource result)<&%>Get a result row as an enumerated array (array)";$funclist[1556]="mysql_field_flags";$funcdest[1556]="mysql_field_flags(resource result, int field_offset)<&%>Get the flags associated with the specified field in a result (string)";$funclist[1557]="mysql_field_len";$funcdest[1557]="mysql_field_len(resource result, int field_offset)<&%>Returns the length of the specified field (int)";$funclist[1558]="mysql_field_name";$funcdest[1558]="mysql_field_name(resource result, int field_index)<&%>Get the name of the specified field in a result (string)";$funclist[1559]="mysql_field_seek";$funcdest[1559]="mysql_field_seek(resource result, int field_offset)<&%>Set result pointer to a specified field offset (int)";$funclist[1560]="mysql_field_table";$funcdest[1560]="mysql_field_table(resource result, int field_offset)<&%>Get name of the table the specified field is in (string)";$funclist[1561]="mysql_field_type";$funcdest[1561]="mysql_field_type(resource result, int field_offset)<&%>Get the type of the specified field in a result (string)";$funclist[1562]="mysql_free_result";$funcdest[1562]="mysql_free_result(resource result)<&%>Free result memory (bool)";$funclist[1563]="mysql_get_client_info";$funcdest[1563]="mysql_get_client_info(void)<&%>Get MySQL client info (string)";$funclist[1564]="mysql_get_host_info";$funcdest[1564]="mysql_get_host_info([resource link_identifier])<&%>Get MySQL host info (string)";$funclist[1565]="mysql_get_proto_info";$funcdest[1565]="mysql_get_proto_info([resource link_identifier])<&%>Get MySQL protocol info (int)";$funclist[1566]="mysql_get_server_info";$funcdest[1566]="mysql_get_server_info([resource link_identifier])<&%>Get MySQL server info (string)";$funclist[1567]="mysql_info";$funcdest[1567]="mysql_info([resource link_identifier])<&%>Get information about the most recent query (string)";$funclist[1568]="mysql_insert_id";$funcdest[1568]="mysql_insert_id([resource link_identifier])<&%>Get the ID generated from the previous INSERT operation (int)";$funclist[1569]="mysql_list_dbs";$funcdest[1569]="mysql_list_dbs([resource link_identifier])<&%>List databases available on a MySQL server (resource)";$funclist[1570]="mysql_list_fields";$funcdest[1570]="mysql_list_fields(string database_name, string table_name [, resource link_identifier])<&%>List MySQL result fields (resource)";$funclist[1571]="mysql_list_processes";$funcdest[1571]="mysql_list_processes([resource link_identifier])<&%>List MySQL processes (resource)";$funclist[1572]="mysql_list_tables";$funcdest[1572]="mysql_list_tables(string database [, resource link_identifier])<&%>List tables in a MySQL database (resource)";$funclist[1573]="mysql_num_fields";$funcdest[1573]="mysql_num_fields(resource result)<&%>Get number of fields in result (int)";$funclist[1574]="mysql_num_rows";$funcdest[1574]="mysql_num_rows(resource result)<&%>Get number of rows in result (int)";$funclist[1575]="mysql_pconnect";$funcdest[1575]="mysql_pconnect([string server [, string username [, string password [, int client_flags]]]])<&%>Open a persistent connection to a MySQL server (resource)";$funclist[1576]="mysql_ping";$funcdest[1576]="mysql_ping([resource link_identifier])<&%>Ping a server connection or reconnect if there is no connection (bool)";$funclist[1577]="mysql_query";$funcdest[1577]="mysql_query(string query [, resource link_identifier])<&%>Send a MySQL query (resource)";$funclist[1578]="mysql_real_escape_string";$funcdest[1578]="mysql_real_escape_string(string unescaped_string [, resource link_identifier])<&%>Escapes special characters in a string for use in a SQL statement, taking into account the current charset of the connection. (string)";$funclist[1579]="mysql_result";$funcdest[1579]="mysql_result(resource result, int row [, mixed field])<&%>Get result data (mixed)";$funclist[1580]="mysql_select_db";$funcdest[1580]="mysql_select_db(string database_name [, resource link_identifier])<&%>Select a MySQL database (bool)";$funclist[1581]="mysql_stat";$funcdest[1581]="mysql_stat([resource link_identifier])<&%>Get current system status (string)";$funclist[1582]="mysql_tablename";$funcdest[1582]="mysql_tablename(resource result, int i)<&%>Get table name of field (string)";$funclist[1583]="mysql_thread_id";$funcdest[1583]="mysql_thread_id([resource link_identifier])<&%>Return the current thread ID (int)";$funclist[1584]="mysql_unbuffered_query";$funcdest[1584]="mysql_unbuffered_query(string query [, resource link_identifier])<&%>Send an SQL query to MySQL, without fetching and buffering the result rows (resource)";$funclist[1585]="natcasesort";$funcdest[1585]="natcasesort(array array)<&%>Sort an array using a case insensitive 'natural order' algorithm (void)";$funclist[1586]="natsort";$funcdest[1586]="natsort(array array)<&%>Sort an array using a 'natural order' algorithm (void)";$funclist[1587]="ncurses_addch";$funcdest[1587]="ncurses_addch(int ch)<&%>Add character at current position and advance cursor (int)";$funclist[1588]="ncurses_addchnstr";$funcdest[1588]="ncurses_addchnstr(string s, int n)<&%>Add attributed string with specified length at current position (int)";$funclist[1589]="ncurses_addchstr";$funcdest[1589]="ncurses_addchstr(string s)<&%>Add attributed string at current position (int)";$funclist[1590]="ncurses_addnstr";$funcdest[1590]="ncurses_addnstr(string s, int n)<&%>Add string with specified length at current position (int)";$funclist[1591]="ncurses_addstr";$funcdest[1591]="ncurses_addstr(string text)<&%>Output text at current position (int)";$funclist[1592]="ncurses_assume_default_colors";$funcdest[1592]="ncurses_assume_default_colors(int fg, int bg)<&%>Define default colors for color 0 (int)";$funclist[1593]="ncurses_attroff";$funcdest[1593]="ncurses_attroff(int attributes)<&%>Turn off the given attributes (int)";$funclist[1594]="ncurses_attron";$funcdest[1594]="ncurses_attron(int attributes)<&%>Turn on the given attributes (int)";$funclist[1595]="ncurses_attrset";$funcdest[1595]="ncurses_attrset(int attributes)<&%>Set given attributes (int)";$funclist[1596]="ncurses_baudrate";$funcdest[1596]="ncurses_baudrate(void)<&%>Returns baudrate of terminal (int)";$funclist[1597]="ncurses_beep";$funcdest[1597]="ncurses_beep(void)<&%>Let the terminal beep (int)";$funclist[1598]="ncurses_bkgd";$funcdest[1598]="ncurses_bkgd(int attrchar)<&%>Set background property for terminal screen (int)";$funclist[1599]="ncurses_bkgdset";$funcdest[1599]="ncurses_bkgdset(int attrchar)<&%>Control screen background (void)";$funclist[1600]="ncurses_border";$funcdest[1600]="ncurses_border(int left, int right, int top, int bottom, int tl_corner, int tr_corner, int bl_corner, int br_corner)<&%>Draw a border around the screen using attributed characters (int)";$funclist[1601]="ncurses_can_change_color";$funcdest[1601]="ncurses_can_change_color(void)<&%>Check if we can change terminals colors (bool)";$funclist[1602]="ncurses_cbreak";$funcdest[1602]="ncurses_cbreak(void)<&%>Switch of input buffering (bool)";$funclist[1603]="ncurses_clear";$funcdest[1603]="ncurses_clear(void)<&%>Clear screen (bool)";$funclist[1604]="ncurses_clrtobot";$funcdest[1604]="ncurses_clrtobot(void)<&%>Clear screen from current position to bottom (bool)";$funclist[1605]="ncurses_clrtoeol";$funcdest[1605]="ncurses_clrtoeol(void)<&%>Clear screen from current position to end of line (bool)";$funclist[1606]="ncurses_color_set";$funcdest[1606]="ncurses_color_set(int pair)<&%>Set fore- and background color (int)";$funclist[1607]="ncurses_curs_set";$funcdest[1607]="ncurses_curs_set(int visibility)<&%>Set cursor state (int)";$funclist[1608]="ncurses_def_prog_mode";$funcdest[1608]="ncurses_def_prog_mode(void)<&%>Saves terminals (program)<&%>mode (bool)";$funclist[1609]="ncurses_def_shell_mode";$funcdest[1609]="ncurses_def_shell_mode(void)<&%>Saves terminals (shell)<&%>mode (bool)";$funclist[1610]="ncurses_define_key";$funcdest[1610]="ncurses_define_key(string definition, int keycode)<&%>Define a keycode (int)";$funclist[1611]="ncurses_delay_output";$funcdest[1611]="ncurses_delay_output(int milliseconds)<&%>Delay output on terminal using padding characters (int)";$funclist[1612]="ncurses_delch";$funcdest[1612]="ncurses_delch(void)<&%>Delete character at current position, move rest of line left (bool)";$funclist[1613]="ncurses_deleteln";$funcdest[1613]="ncurses_deleteln(void)<&%>Delete line at current position, move rest of screen up (bool)";$funclist[1614]="ncurses_delwin";$funcdest[1614]="ncurses_delwin(resource window)<&%>Delete a ncurses window (int)";$funclist[1615]="ncurses_doupdate";$funcdest[1615]="ncurses_doupdate(void)<&%>Write all prepared refreshes to terminal (bool)";$funclist[1616]="ncurses_echo";$funcdest[1616]="ncurses_echo(void)<&%>Activate keyboard input echo (bool)";$funclist[1617]="ncurses_echochar";$funcdest[1617]="ncurses_echochar(int character)<&%>Single character output including refresh (int)";$funclist[1618]="ncurses_end";$funcdest[1618]="ncurses_end(void)<&%>Stop using ncurses, clean up the screen (int)";$funclist[1619]="ncurses_erase";$funcdest[1619]="ncurses_erase(void)<&%>Erase terminal screen (bool)";$funclist[1620]="ncurses_erasechar";$funcdest[1620]="ncurses_erasechar(void)<&%>Returns current erase character (string)";$funclist[1621]="ncurses_filter";$funcdest[1621]="ncurses_filter(void)<&%> (int)";$funclist[1622]="ncurses_flash";$funcdest[1622]="ncurses_flash(void)<&%>Flash terminal screen (visual bell)<&%>(bool)";$funclist[1623]="ncurses_flushinp";$funcdest[1623]="ncurses_flushinp(void)<&%>Flush keyboard input buffer (bool)";$funclist[1624]="ncurses_getch";$funcdest[1624]="ncurses_getch(void)<&%>Read a character from keyboard (int)";$funclist[1625]="ncurses_getmouse";$funcdest[1625]="ncurses_getmouse(array mevent)<&%>Reads mouse event (bool)";$funclist[1626]="ncurses_halfdelay";$funcdest[1626]="ncurses_halfdelay(int tenth)<&%>Put terminal into halfdelay mode (int)";$funclist[1627]="ncurses_has_colors";$funcdest[1627]="ncurses_has_colors(void)<&%>Check if terminal has colors (bool)";$funclist[1628]="ncurses_has_ic";$funcdest[1628]="ncurses_has_ic(void)<&%>Check for insert- and delete-capabilities (bool)";$funclist[1629]="ncurses_has_il";$funcdest[1629]="ncurses_has_il(void)<&%>Check for line insert- and delete-capabilities (bool)";$funclist[1630]="ncurses_has_key";$funcdest[1630]="ncurses_has_key(int keycode)<&%>Check for presence of a function key on terminal keyboard (int)";$funclist[1631]="ncurses_hline";$funcdest[1631]="ncurses_hline(int charattr, int n)<&%>Draw a horizontal line at current position using an attributed character and max. n characters long (int)";$funclist[1632]="ncurses_inch";$funcdest[1632]="ncurses_inch(void)<&%>Get character and attribute at current position (string)";$funclist[1633]="ncurses_init";$funcdest[1633]="ncurses_init(void)<&%>Initialize ncurses (int)";$funclist[1634]="ncurses_init_color";$funcdest[1634]="ncurses_init_color(int color, int r, int g, int b)<&%>Set new RGB value for color (int)";$funclist[1635]="ncurses_init_pair";$funcdest[1635]="ncurses_init_pair(int pair, int fg, int bg)<&%>Allocate a color pair (int)";$funclist[1636]="ncurses_insch";$funcdest[1636]="ncurses_insch(int character)<&%>Insert character moving rest of line including character at current position (int)";$funclist[1637]="ncurses_insdelln";$funcdest[1637]="ncurses_insdelln(int count)<&%>Insert lines before current line scrolling down (negative numbers delete and scroll up)<&%>(int)";$funclist[1638]="ncurses_insertln";$funcdest[1638]="ncurses_insertln(void)<&%>Insert a line, move rest of screen down (bool)";$funclist[1639]="ncurses_insstr";$funcdest[1639]="ncurses_insstr(string text)<&%>Insert string at current position, moving rest of line right (int)";$funclist[1640]="ncurses_instr";$funcdest[1640]="ncurses_instr(string buffer)<&%>Reads string from terminal screen (int)";$funclist[1641]="ncurses_isendwin";$funcdest[1641]="ncurses_isendwin(void)<&%>Ncurses is in endwin mode, normal screen output may be performed (bool)";$funclist[1642]="ncurses_keyok";$funcdest[1642]="ncurses_keyok(int keycode, bool enable)<&%>Enable or disable a keycode (int)";$funclist[1643]="ncurses_killchar";$funcdest[1643]="ncurses_killchar(void)<&%>Returns current line kill character (bool)";$funclist[1644]="ncurses_longname";$funcdest[1644]="ncurses_longname(void)<&%>Returns terminals description (string)";$funclist[1645]="ncurses_mouseinterval";$funcdest[1645]="ncurses_mouseinterval(int milliseconds)<&%>Set timeout for mouse button clicks (int)";$funclist[1646]="ncurses_mousemask";$funcdest[1646]="ncurses_mousemask(int newmask, int oldmask)<&%>Sets mouse options (int)";$funclist[1647]="ncurses_move";$funcdest[1647]="ncurses_move(int y, int x)<&%>Move output position (int)";$funclist[1648]="ncurses_mvaddch";$funcdest[1648]="ncurses_mvaddch(int y, int x, int c)<&%>Move current position and add character (int)";$funclist[1649]="ncurses_mvaddchnstr";$funcdest[1649]="ncurses_mvaddchnstr(int y, int x, string s, int n)<&%>Move position and add attrributed string with specified length (int)";$funclist[1650]="ncurses_mvaddchstr";$funcdest[1650]="ncurses_mvaddchstr(int y, int x, string s)<&%>Move position and add attributed string (int)";$funclist[1651]="ncurses_mvaddnstr";$funcdest[1651]="ncurses_mvaddnstr(int y, int x, string s, int n)<&%>Move position and add string with specified length (int)";$funclist[1652]="ncurses_mvaddstr";$funcdest[1652]="ncurses_mvaddstr(int y, int x, string s)<&%>Move position and add string (int)";$funclist[1653]="ncurses_mvcur";$funcdest[1653]="ncurses_mvcur(int old_y, int old_x, int new_y, int new_x)<&%>Move cursor immediately (int)";$funclist[1654]="ncurses_mvdelch";$funcdest[1654]="ncurses_mvdelch(int y, int x)<&%>Move position and delete character, shift rest of line left (int)";$funclist[1655]="ncurses_mvgetch";$funcdest[1655]="ncurses_mvgetch(int y, int x)<&%>Move position and get character at new position (int)";$funclist[1656]="ncurses_mvhline";$funcdest[1656]="ncurses_mvhline(int y, int x, int attrchar, int n)<&%>Set new position and draw a horizontal line using an attributed character and max. n characters long (int)";$funclist[1657]="ncurses_mvinch";$funcdest[1657]="ncurses_mvinch(int y, int x)<&%>Move position and get attributed character at new position (int)";$funclist[1658]="ncurses_mvvline";$funcdest[1658]="ncurses_mvvline(int y, int x, int attrchar, int n)<&%>Set new position and draw a vertical line using an attributed character and max. n characters long (int)";$funclist[1659]="ncurses_mvwaddstr";$funcdest[1659]="ncurses_mvwaddstr(resource window, int y, int x, string text)<&%>Add string at new position in window (int)";$funclist[1660]="ncurses_napms";$funcdest[1660]="ncurses_napms(int milliseconds)<&%>Sleep (int)";$funclist[1661]="ncurses_newwin";$funcdest[1661]="ncurses_newwin(int rows, int cols, int y, int x)<&%>Create a new window (int)";$funclist[1662]="ncurses_nl";$funcdest[1662]="ncurses_nl(void)<&%>Translate newline and carriage return / line feed (bool)";$funclist[1663]="ncurses_nocbreak";$funcdest[1663]="ncurses_nocbreak(void)<&%>Switch terminal to cooked mode (bool)";$funclist[1664]="ncurses_noecho";$funcdest[1664]="ncurses_noecho(void)<&%>Switch off keyboard input echo (bool)";$funclist[1665]="ncurses_nonl";$funcdest[1665]="ncurses_nonl(void)<&%>Do not translate newline and carriage return / line feed (bool)";$funclist[1666]="ncurses_noqiflush";$funcdest[1666]="ncurses_noqiflush(void)<&%>Do not flush on signal characters (int)";$funclist[1667]="ncurses_noraw";$funcdest[1667]="ncurses_noraw(void)<&%>Switch terminal out of raw mode (bool)";$funclist[1668]="ncurses_putp";$funcdest[1668]="ncurses_putp(string text)<&%> (int)";$funclist[1669]="ncurses_qiflush";$funcdest[1669]="ncurses_qiflush(void)<&%>Flush on signal characters (int)";$funclist[1670]="ncurses_raw";$funcdest[1670]="ncurses_raw(void)<&%>Switch terminal into raw mode (bool)";$funclist[1671]="ncurses_refresh";$funcdest[1671]="ncurses_refresh(int ch)<&%>Refresh screen (int)";$funclist[1672]="ncurses_resetty";$funcdest[1672]="ncurses_resetty(void)<&%>Restores saved terminal state (bool)";$funclist[1673]="ncurses_savetty";$funcdest[1673]="ncurses_savetty(void)<&%>Saves terminal state (bool)";$funclist[1674]="ncurses_scr_dump";$funcdest[1674]="ncurses_scr_dump(string filename)<&%>Dump screen content to file (int)";$funclist[1675]="ncurses_scr_init";$funcdest[1675]="ncurses_scr_init(string filename)<&%>Initialize screen from file dump (int)";$funclist[1676]="ncurses_scr_restore";$funcdest[1676]="ncurses_scr_restore(string filename)<&%>Restore screen from file dump (int)";$funclist[1677]="ncurses_scr_set";$funcdest[1677]="ncurses_scr_set(string filename)<&%>Inherit screen from file dump (int)";$funclist[1678]="ncurses_scrl";$funcdest[1678]="ncurses_scrl(int count)<&%>Scroll window content up or down without changing current position (int)";$funclist[1679]="ncurses_slk_attr";$funcdest[1679]="ncurses_slk_attr(void)<&%>Returns current soft label key attribute (bool)";$funclist[1680]="ncurses_slk_attroff";$funcdest[1680]="ncurses_slk_attroff(int intarg)<&%> (int)";$funclist[1681]="ncurses_slk_attron";$funcdest[1681]="ncurses_slk_attron(int intarg)<&%> (int)";$funclist[1682]="ncurses_slk_attrset";$funcdest[1682]="ncurses_slk_attrset(int intarg)<&%> (int)";$funclist[1683]="ncurses_slk_clear";$funcdest[1683]="ncurses_slk_clear(void)<&%>Clears soft labels from screen (bool)";$funclist[1684]="ncurses_slk_color";$funcdest[1684]="ncurses_slk_color(int intarg)<&%>Sets color for soft label keys (int)";$funclist[1685]="ncurses_slk_init";$funcdest[1685]="ncurses_slk_init(int format)<&%>Initializes soft label key functions (bool)";$funclist[1686]="ncurses_slk_noutrefresh";$funcdest[1686]="ncurses_slk_noutrefresh(void)<&%>Copies soft label keys to virtual screen (bool)";$funclist[1687]="ncurses_slk_refresh";$funcdest[1687]="ncurses_slk_refresh(void)<&%>Copies soft label keys to screen (bool)";$funclist[1688]="ncurses_slk_restore";$funcdest[1688]="ncurses_slk_restore(void)<&%>Restores soft label keys (bool)";$funclist[1689]="ncurses_slk_touch";$funcdest[1689]="ncurses_slk_touch(void)<&%>Fources output when ncurses_slk_noutrefresh is performed (bool)";$funclist[1690]="ncurses_standend";$funcdest[1690]="ncurses_standend(void)<&%>Stop using 'standout' attribute (int)";$funclist[1691]="ncurses_standout";$funcdest[1691]="ncurses_standout(void)<&%>Start using 'standout' attribute (int)";$funclist[1692]="ncurses_start_color";$funcdest[1692]="ncurses_start_color(void)<&%>Start using colors (int)";$funclist[1693]="ncurses_termattrs";$funcdest[1693]="ncurses_termattrs(void)<&%>Returns a logical OR of all attribute flags supported by terminal (bool)";$funclist[1694]="ncurses_termname";$funcdest[1694]="ncurses_termname(void)<&%>Returns terminals (short)<&%>-name (string)";$funclist[1695]="ncurses_timeout";$funcdest[1695]="ncurses_timeout(int millisec)<&%>Set timeout for special key sequences (void)";$funclist[1696]="ncurses_typeahead";$funcdest[1696]="ncurses_typeahead(int fd)<&%>Specify different filedescriptor for typeahead checking (int)";$funclist[1697]="ncurses_ungetch";$funcdest[1697]="ncurses_ungetch(int keycode)<&%>Put a character back into the input stream (int)";$funclist[1698]="ncurses_ungetmouse";$funcdest[1698]="ncurses_ungetmouse(array mevent)<&%>Pushes mouse event to queue (bool)";$funclist[1699]="ncurses_use_default_colors";$funcdest[1699]="ncurses_use_default_colors(void)<&%>Assign terminal default colors to color id -1 (bool)";$funclist[1700]="ncurses_use_env";$funcdest[1700]="ncurses_use_env(bool flag)<&%>Control use of environment information about terminal size (void)";$funclist[1701]="ncurses_use_extended_names";$funcdest[1701]="ncurses_use_extended_names(bool flag)<&%>Control use of extended names in terminfo descriptions (int)";$funclist[1702]="ncurses_vidattr";$funcdest[1702]="ncurses_vidattr(int intarg)<&%> (int)";$funclist[1703]="ncurses_vline";$funcdest[1703]="ncurses_vline(int charattr, int n)<&%>Draw a vertical line at current position using an attributed character and max. n characters long (int)";$funclist[1704]="ncurses_wrefresh";$funcdest[1704]="ncurses_wrefresh(resource window)<&%>Refresh window on terminal screen (int)";$funclist[1705]="next";$funcdest[1705]="next(array array)<&%>Advance the internal array pointer of an array (mixed)";$funclist[1706]="ngettext";$funcdest[1706]="ngettext(string msgid1, string msgid2, int n)<&%>Plural version of gettext (string)";$funclist[1707]="nl2br";$funcdest[1707]="nl2br(string string)<&%>Inserts HTML line breaks before all newlines in a string (string)";$funclist[1708]="nl_langinfo";$funcdest[1708]="nl_langinfo(int item)<&%>Query language and locale information (string)";$funclist[1709]="notes_body";$funcdest[1709]="notes_body(string server, string mailbox, int msg_number)<&%>Open the message msg_number in the specified mailbox on the specified server (leave serv (array)";$funclist[1710]="notes_copy_db";$funcdest[1710]="notes_copy_db(string from_database_name, string to_database_name)<&%>Create a note using form form_name (string)";$funclist[1711]="notes_create_db";$funcdest[1711]="notes_create_db(string database_name)<&%>Create a Lotus Notes database (bool)";$funclist[1712]="notes_create_note";$funcdest[1712]="notes_create_note(string database_name, string form_name)<&%>Create a note using form form_name (string)";$funclist[1713]="notes_drop_db";$funcdest[1713]="notes_drop_db(string database_name)<&%>Drop a Lotus Notes database (bool)";$funclist[1714]="notes_find_note";$funcdest[1714]="notes_find_note(string database_name, string name [, string type])<&%>Returns a note id found in database_name. Specify the name of the note. Leaving type bla (bool)";$funclist[1715]="notes_header_info";$funcdest[1715]="notes_header_info(string server, string mailbox, int msg_number)<&%>Open the message msg_number in the specified mailbox on the specified server (leave serv (object)";$funclist[1716]="notes_list_msgs";$funcdest[1716]="notes_list_msgs(string db)<&%>Returns the notes from a selected database_name (bool)";$funclist[1717]="notes_mark_read";$funcdest[1717]="notes_mark_read(string database_name, string user_name, string note_id)<&%>Mark a note_id as read for the User user_name (string)";$funclist[1718]="notes_mark_unread";$funcdest[1718]="notes_mark_unread(string database_name, string user_name, string note_id)<&%>Mark a note_id as unread for the User user_name (string)";$funclist[1719]="notes_nav_create";$funcdest[1719]="notes_nav_create(string database_name, string name)<&%>Create a navigator name, in database_name (bool)";$funclist[1720]="notes_search";$funcdest[1720]="notes_search(string database_name, string keywords)<&%>Find notes that match keywords in database_name (string)";$funclist[1721]="notes_unread";$funcdest[1721]="notes_unread(string database_name, string user_name)<&%>Returns the unread note id's for the current User user_name (string)";$funclist[1722]="notes_version";$funcdest[1722]="notes_version(string database_name)<&%>Get the version Lotus Notes (string)";$funclist[1723]="number_format";$funcdest[1723]="number_format(float number [, int decimals [, string dec_point [, string thousands_sep]]])<&%>Format a number with grouped thousands (string)";$funclist[1724]="ob_clean";$funcdest[1724]="ob_clean(void)<&%>Clean (erase)<&%>the output buffer (void)";$funclist[1725]="ob_end_clean";$funcdest[1725]="ob_end_clean(void)<&%>Clean (erase)<&%>the output buffer and turn off output buffering (void)";$funclist[1726]="ob_end_flush";$funcdest[1726]="ob_end_flush(void)<&%>Flush (send)<&%>the output buffer and turn off output buffering (void)";$funclist[1727]="ob_flush";$funcdest[1727]="ob_flush(void)<&%>Flush (send)<&%>the output buffer (void)";$funclist[1728]="ob_get_contents";$funcdest[1728]="ob_get_contents(void)<&%>Return the contents of the output buffer (string)";$funclist[1729]="ob_get_length";$funcdest[1729]="ob_get_length(void)<&%>Return the length of the output buffer (int)";$funclist[1730]="ob_get_level";$funcdest[1730]="ob_get_level(void)<&%>Return the nesting level of the output buffering mechanism (int)";$funclist[1731]="ob_get_status";$funcdest[1731]="ob_get_status([bool full_status])<&%>Get status of output buffers (array)";$funclist[1732]="ob_gzhandler";$funcdest[1732]="ob_gzhandler(string buffer [, int mode])<&%>ob_start callback function to gzip output buffer (string)";$funclist[1733]="ob_iconv_handler";$funcdest[1733]="ob_iconv_handler(string contents, int status)<&%>Convert character encoding as output buffer handler (array)";$funclist[1734]="ob_implicit_flush";$funcdest[1734]="ob_implicit_flush([int flag])<&%>Turn implicit flush on/off (void)";$funclist[1735]="ob_start";$funcdest[1735]="ob_start([callback output_callback])<&%>Turn on output buffering (void)";$funclist[1736]="ocicollappend";$funcdest[1736]="ocicollappend(object collection, object object)<&%>Coming soon (bool)";$funclist[1737]="ocicollassign";$funcdest[1737]="ocicollassign(object collection, object object)<&%>Coming soon (bool)";$funclist[1738]="ocicollgetelem";$funcdest[1738]="ocicollgetelem(object collection, string ndx)<&%>Coming soon (string)";$funclist[1739]="ocicollmax";$funcdest[1739]="ocicollmax(object collection)<&%>Coming soon (int)";$funclist[1740]="ocicollsize";$funcdest[1740]="ocicollsize(object collection)<&%>Coming soon (int)";$funclist[1741]="ocicolltrim";$funcdest[1741]="ocicolltrim(object collection, int num)<&%>Coming soon (bool)";$funclist[1742]="ocicolumnisnull";$funcdest[1742]="ocicolumnisnull(resource stmt, mixed column)<&%>Test whether a result column is NULL (bool)";$funclist[1743]="ocicolumnname";$funcdest[1743]="ocicolumnname(int stmt, int col)<&%>Returns the name of a column (string)";$funclist[1744]="ocicolumnprecision";$funcdest[1744]="ocicolumnprecision(int stmt, int col)<&%>Coming soon (int)";$funclist[1745]="ocicolumnscale";$funcdest[1745]="ocicolumnscale(int stmt, int col)<&%>Coming soon (int)";$funclist[1746]="ocicolumnsize";$funcdest[1746]="ocicolumnsize(int stmt, mixed column)<&%>Return result column size (int)";$funclist[1747]="ocicolumntype";$funcdest[1747]="ocicolumntype(int stmt, int col)<&%>Returns the data type of a column (mixed)";$funclist[1748]="ocicolumntyperaw";$funcdest[1748]="ocicolumntyperaw(int stmt, int col)<&%>Coming soon (mixed)";$funclist[1749]="ociexecute";$funcdest[1749]="ociexecute(int statement [, int mode])<&%>Execute a statement (int)";$funclist[1750]="ocifetch";$funcdest[1750]="ocifetch(int statement)<&%>Fetches the next row into result-buffer (bool)";$funclist[1751]="ocifetchinto";$funcdest[1751]="ocifetchinto(int stmt, array &result [, int mode])<&%>Fetches the next row into result-array (int)";$funclist[1752]="ocifetchstatement";$funcdest[1752]="ocifetchstatement(resource stmt, array & variable)<&%>Fetch all rows of result data into an array (int)";$funclist[1753]="ocifreecollection";$funcdest[1753]="ocifreecollection(object lob)<&%>Coming soon (bool)";$funclist[1754]="ocifreecursor";$funcdest[1754]="ocifreecursor(int stmt)<&%>Free all resources associated with a cursor (int)";$funclist[1755]="ocifreedesc";$funcdest[1755]="ocifreedesc(object lob)<&%>Deletes a large object descriptor (bool)";$funclist[1756]="ocifreestatement";$funcdest[1756]="ocifreestatement(resource stmt)<&%>Free all resources associated with a statement (bool)";$funclist[1757]="ociinternaldebug";$funcdest[1757]="ociinternaldebug(int onoff)<&%>Enables or disables internal debug output (void)";$funclist[1758]="ociloadlob";$funcdest[1758]="ociloadlob(object lob)<&%>Coming soon (string)";$funclist[1759]="ocilogoff";$funcdest[1759]="ocilogoff(resource connection)<&%>Disconnects from Oracle server (bool)";$funclist[1760]="ocilogon";$funcdest[1760]="ocilogon(string username, string password [, string db])<&%>Establishes a connection to Oracle (int)";$funclist[1761]="ocinewcollection";$funcdest[1761]="ocinewcollection(int conn, string tdo [, string shema])<&%>Coming soon (bool)";$funclist[1762]="ocinewcursor";$funcdest[1762]="ocinewcursor(resource conn)<&%>Return a new cursor (Statement-Handle)<&%>(resource)";$funclist[1763]="ocinewdescriptor";$funcdest[1763]="ocinewdescriptor(int connection [, int type])<&%>Initialize a new empty LOB or FILE descriptor (string)";$funclist[1764]="ocinlogon";$funcdest[1764]="ocinlogon(string username, string password [, string db])<&%>Establishes a new connection to Oracle (int)";$funclist[1765]="ocinumcols";$funcdest[1765]="ocinumcols(resource stmt)<&%>Return the number of result columns in a statement (int)";$funclist[1766]="ociparse";$funcdest[1766]="ociparse(int conn, string query)<&%>Parse a query and return an Oracle statement (int)";$funclist[1767]="ociplogon";$funcdest[1767]="ociplogon(string username, string password [, string db])<&%>Connect to an Oracle database using a persistent connection (int)";$funclist[1768]="ociresult";$funcdest[1768]="ociresult(int statement, mixed column)<&%>Returns column value for fetched row (mixed)";$funclist[1769]="ocirollback";$funcdest[1769]="ocirollback(resource connection)<&%>Rolls back outstanding transactions (bool)";$funclist[1770]="ocirowcount";$funcdest[1770]="ocirowcount(resource statement)<&%>Gets the number of affected rows (int)";$funclist[1771]="ocisavelob";$funcdest[1771]="ocisavelob(object lob)<&%>Coming soon (bool)";$funclist[1772]="ocisavelobfile";$funcdest[1772]="ocisavelobfile(object lob)<&%>Coming soon (bool)";$funclist[1773]="ociserverversion";$funcdest[1773]="ociserverversion(resource conn)<&%>Return a string containing server version information (string)";$funclist[1774]="ocisetprefetch";$funcdest[1774]="ocisetprefetch(resource stmt, int rows)<&%>Sets number of rows to be prefetched (int)";$funclist[1775]="ocistatementtype";$funcdest[1775]="ocistatementtype(resource stmt)<&%>Return the type of an OCI statement (string)";$funclist[1776]="ociwritelobtofile";$funcdest[1776]="ociwritelobtofile(object lob [, string filename [, int start [, int lenght]]])<&%>Coming soon (bool)";$funclist[1777]="octdec";$funcdest[1777]="octdec(string octal_string)<&%>Octal to decimal (int)";$funclist[1778]="odbc_autocommit";$funcdest[1778]="odbc_autocommit(resource connection_id [, bool OnOff])<&%>Toggle autocommit behaviour (bool)";$funclist[1779]="odbc_binmode";$funcdest[1779]="odbc_binmode(resource result_id, int mode)<&%>Handling of binary column data (int)";$funclist[1780]="odbc_close";$funcdest[1780]="odbc_close(resource connection_id)<&%>Close an ODBC connection (void)";$funclist[1781]="odbc_close_all";$funcdest[1781]="odbc_close_all(void)<&%>Close all ODBC connections (void)";$funclist[1782]="odbc_columnprivileges";$funcdest[1782]="odbc_columnprivileges(resource connection_id [, string qualifier [, string owner [, string table_name [, string column_name]]]])<&%>Returns a result identifier that can be used to fetch a list of columns and associated privileges (int)";$funclist[1783]="odbc_columns";$funcdest[1783]="odbc_columns(resource connection_id [, string qualifier [, string schema [, string table_name [, string column_name]]]])<&%>Lists the column names in specified tables. Returns a result identifier containing the information. (resource)";$funclist[1784]="odbc_commit";$funcdest[1784]="odbc_commit(resource connection_id)<&%>Commit an ODBC transaction (bool)";$funclist[1785]="odbc_connect";$funcdest[1785]="odbc_connect(string dsn, string user, string password [, int cursor_type])<&%>Connect to a datasource (resource)";$funclist[1786]="odbc_cursor";$funcdest[1786]="odbc_cursor(resource result_id)<&%>Get cursorname (string)";$funclist[1787]="odbc_data_source";$funcdest[1787]="odbc_data_source(resource connection_id, constant fetch_type)<&%>Returns information about a current connection (resource)";$funclist[1788]="odbc_do";$funcdest[1788]="odbc_do(resource conn_id, string query)<&%>Synonym for odbc_exec()<&%>(resource)";$funclist[1789]="odbc_error";$funcdest[1789]="odbc_error([resource connection_id])<&%>Get the last error code (string)";$funclist[1790]="odbc_errormsg";$funcdest[1790]="odbc_errormsg([resource connection_id])<&%>Get the last error message (string)";$funclist[1791]="odbc_exec";$funcdest[1791]="odbc_exec(resource connection_id, string query_string)<&%>Prepare and execute a SQL statement (resource)";$funclist[1792]="odbc_execute";$funcdest[1792]="odbc_execute(resource result_id [, array parameters_array])<&%>Execute a prepared statement (bool)";$funclist[1793]="odbc_fetch_array";$funcdest[1793]="odbc_fetch_array(resource result [, int rownumber])<&%>Fetch a result row as an associative array (array)";$funclist[1794]="odbc_fetch_into";$funcdest[1794]="odbc_fetch_into(resource result_id [, int rownumber, array result_array])<&%>Fetch one result row into array (bool)";$funclist[1795]="odbc_fetch_object";$funcdest[1795]="odbc_fetch_object(resource result [, int rownumber])<&%>Fetch a result row as an object (object)";$funclist[1796]="odbc_fetch_row";$funcdest[1796]="odbc_fetch_row(resource result_id [, int row_number])<&%>Fetch a row (bool)";$funclist[1797]="odbc_field_len";$funcdest[1797]="odbc_field_len(resource result_id, int field_number)<&%>Get the length (precision)<&%>of a field (int)";$funclist[1798]="odbc_field_name";$funcdest[1798]="odbc_field_name(resource result_id, int field_number)<&%>Get the columnname (string)";$funclist[1799]="odbc_field_num";$funcdest[1799]="odbc_field_num(resource result_id, string field_name)<&%>Return column number (int)";$funclist[1800]="odbc_field_precision";$funcdest[1800]="odbc_field_precision(resource result_id, int field_number)<&%>Synonym for odbc_field_len()<&%>(string)";$funclist[1801]="odbc_field_scale";$funcdest[1801]="odbc_field_scale(resource result_id, int field_number)<&%>Get the scale of a field (string)";$funclist[1802]="odbc_field_type";$funcdest[1802]="odbc_field_type(resource result_id, int field_number)<&%>Datatype of a field (string)";$funclist[1803]="odbc_foreignkeys";$funcdest[1803]="odbc_foreignkeys(resource connection_id, string pk_qualifier, string pk_owner, string pk_table, string fk_qualifier, string fk_owner, string fk_table)<&%>Returns a list of foreign keys in the specified table or a list of foreign keys in other tables that refer to the primary key in the specified table (resource)";$funclist[1804]="odbc_free_result";$funcdest[1804]="odbc_free_result(resource result_id)<&%>Free resources associated with a result (bool)";$funclist[1805]="odbc_gettypeinfo";$funcdest[1805]="odbc_gettypeinfo(resource connection_id [, int data_type])<&%>Returns a result identifier containing information about data types supported by the data source. (int)";$funclist[1806]="odbc_longreadlen";$funcdest[1806]="odbc_longreadlen(resource result_id, int length)<&%>Handling of LONG columns (int)";$funclist[1807]="odbc_next_result";$funcdest[1807]="odbc_next_result(resource result_id)<&%>Checks if multiple results are avaiable (bool)";$funclist[1808]="odbc_num_fields";$funcdest[1808]="odbc_num_fields(resource result_id)<&%>Number of columns in a result (int)";$funclist[1809]="odbc_num_rows";$funcdest[1809]="odbc_num_rows(resource result_id)<&%>Number of rows in a result (int)";$funclist[1810]="odbc_pconnect";$funcdest[1810]="odbc_pconnect(string dsn, string user, string password [, int cursor_type])<&%>Open a persistent database connection (resource)";$funclist[1811]="odbc_prepare";$funcdest[1811]="odbc_prepare(resource connection_id, string query_string)<&%>Prepares a statement for execution (resource)";$funclist[1812]="odbc_primarykeys";$funcdest[1812]="odbc_primarykeys(resource connection_id, string qualifier, string owner, string table)<&%>Returns a result identifier that can be used to fetch the column names that comprise the primary key for a table (resource)";$funclist[1813]="odbc_procedurecolumns";$funcdest[1813]="odbc_procedurecolumns(resource connection_id [, string qualifier [, string owner [, string proc [, string column]]]])<&%>Retrieve information about parameters to procedures (resource)";$funclist[1814]="odbc_procedures";$funcdest[1814]="odbc_procedures(resource connection_id [, string qualifier [, string owner [, string name]]])<&%>Get the list of procedures stored in a specific data source. Returns a result identifier containing the information. (resource)";$funclist[1815]="odbc_result";$funcdest[1815]="odbc_result(resource result_id, mixed field)<&%>Get result data (string)";$funclist[1816]="odbc_result_all";$funcdest[1816]="odbc_result_all(resource result_id [, string format])<&%>Print result as HTML table (int)";$funclist[1817]="odbc_rollback";$funcdest[1817]="odbc_rollback(resource connection_id)<&%>Rollback a transaction (int)";$funclist[1818]="odbc_setoption";$funcdest[1818]="odbc_setoption(resource id, int function, int option, int param)<&%>Adjust ODBC settings. Returns FALSE if an error occurs, otherwise TRUE. (int)";$funclist[1819]="odbc_specialcolumns";$funcdest[1819]="odbc_specialcolumns(resource connection_id, int type, string qualifier, string owner, string table, int scope, int nullable)<&%>Returns either the optimal set of columns that uniquely identifies a row in the table or columns that are automatically updated when any value in the row is updated by a transaction (resource)";$funclist[1820]="odbc_statistics";$funcdest[1820]="odbc_statistics(resource connection_id, string qualifier, string owner, string table_name, int unique, int accuracy)<&%>Retrieve statistics about a table (resource)";$funclist[1821]="odbc_tableprivileges";$funcdest[1821]="odbc_tableprivileges(resource connection_id [, string qualifier [, string owner [, string name]]])<&%>Lists tables and the privileges associated with each table (int)";$funclist[1822]="odbc_tables";$funcdest[1822]="odbc_tables(resource connection_id [, string qualifier [, string owner [, string name [, string types]]]])<&%>Get the list of table names stored in a specific data source. Returns a result identifier containing the information. (int)";$funclist[1823]="opendir";$funcdest[1823]="opendir(string path)<&%>open directory handle (resource)";$funclist[1824]="openlog";$funcdest[1824]="openlog(string ident, int option, int facility)<&%>Open connection to system logger (int)";$funclist[1825]="openssl_csr_export";$funcdest[1825]="openssl_csr_export(resource csr, string &out [, bool notext])<&%>Exports a CSR as a string (bool)";$funclist[1826]="openssl_csr_export_to_file";$funcdest[1826]="openssl_csr_export_to_file(resource csr, string outfilename [, bool notext])<&%>Exports a CSR to a file (bool)";$funclist[1827]="openssl_csr_new";$funcdest[1827]="openssl_csr_new(array dn, resource privkey [, array configargs [, array extraattribs]])<&%>Generates a CSR (bool)";$funclist[1828]="openssl_csr_sign";$funcdest[1828]="openssl_csr_sign(mixed csr, mixed cacert, mixed priv_key, int days)<&%>Sign a CSR with another certificate (or itself)<&%>and generate a certificate (resource)";$funclist[1829]="openssl_error_string";$funcdest[1829]="openssl_error_string(void)<&%>Return openSSL error message (mixed)";$funclist[1830]="openssl_free_key";$funcdest[1830]="openssl_free_key(resource key_identifier)<&%>Free key resource (void)";$funclist[1831]="openssl_get_privatekey";$funcdest[1831]="openssl_get_privatekey(mixed key [, string passphrase])<&%>Get a private key (resource)";$funclist[1832]="openssl_get_publickey";$funcdest[1832]="openssl_get_publickey(mixed certificate)<&%>Extract public key from certificate and prepare it for use (resource)";$funclist[1833]="openssl_open";$funcdest[1833]="openssl_open(string sealed_data, string open_data, string env_key, mixed priv_key_id)<&%>Open sealed data (bool)";$funclist[1834]="openssl_pkcs7_decrypt";$funcdest[1834]="openssl_pkcs7_decrypt(string infilename, string outfilename, mixed recipcert [, mixed recipkey])<&%>Decrypts an S/MIME encrypted message (bool)";$funclist[1835]="openssl_pkcs7_encrypt";$funcdest[1835]="openssl_pkcs7_encrypt(string infile, string outfile, mixed recipcerts, array headers [, int flags])<&%>Encrypt an S/MIME message (bool)";$funclist[1836]="openssl_pkcs7_sign";$funcdest[1836]="openssl_pkcs7_sign(string infilename, string outfilename, mixed signcert, mixed privkey, array headers [, int flags [, string extracerts]])<&%>sign an S/MIME message (bool)";$funclist[1837]="openssl_pkcs7_verify";$funcdest[1837]="openssl_pkcs7_verify(string filename, int flags [, string outfilename [, array cainfo [, string extracerts]]])<&%>Verifies the signature of an S/MIME signed message (bool)";$funclist[1838]="openssl_pkey_export";$funcdest[1838]="openssl_pkey_export(mixed key, string &out [, string passphrase [, array configargs]])<&%>Gets an exportable representation of a key into a string (bool)";$funclist[1839]="openssl_pkey_export_to_file";$funcdest[1839]="openssl_pkey_export_to_file(mixed key, string outfilename [, string passphrase [, array configargs]])<&%>Gets an exportable representation of a key into a file (bool)";$funclist[1840]="openssl_pkey_get_private";$funcdest[1840]="openssl_pkey_get_private(mixed key [, string passphrase])<&%>Get a private key (resource)";$funclist[1841]="openssl_pkey_get_public";$funcdest[1841]="openssl_pkey_get_public(mixed certificate)<&%>Extract public key from certificate and prepare it for use (resource)";$funclist[1842]="openssl_pkey_new";$funcdest[1842]="openssl_pkey_new([array configargs])<&%>Generates a new private key (resource)";$funclist[1843]="openssl_private_decrypt";$funcdest[1843]="openssl_private_decrypt(string data, string &decrypted, mixed key [, int padding])<&%>Decrypts data with private key (bool)";$funclist[1844]="openssl_private_encrypt";$funcdest[1844]="openssl_private_encrypt(string data, string crypted, mixed key [, int padding])<&%>Encrypts data with private key (bool)";$funclist[1845]="openssl_public_decrypt";$funcdest[1845]="openssl_public_decrypt(string data, string crypted, resource key [, int padding])<&%>Decrypts data with public key (bool)";$funclist[1846]="openssl_public_encrypt";$funcdest[1846]="openssl_public_encrypt(string data, string crypted, mixed key [, int padding])<&%>Encrypts data with public key (bool)";$funclist[1847]="openssl_seal";$funcdest[1847]="openssl_seal(string data, string sealed_data, array env_keys, array pub_key_ids)<&%>Seal (encrypt)<&%>data (int)";$funclist[1848]="openssl_sign";$funcdest[1848]="openssl_sign(string data, string signature, mixed priv_key_id)<&%>Generate signature (bool)";$funclist[1849]="openssl_verify";$funcdest[1849]="openssl_verify(string data, string signature, mixed pub_key_id)<&%>Verify signature (int)";$funclist[1850]="openssl_x509_check_private_key";$funcdest[1850]="openssl_x509_check_private_key(mixed cert, mixed key)<&%>Checks if a private key corresponds to a certificate (bool)";$funclist[1851]="openssl_x509_checkpurpose";$funcdest[1851]="openssl_x509_checkpurpose(mixed x509cert, int purpose, array cainfo [, string untrustedfile])<&%>Verifies if a certificate can be used for a particular purpose (bool)";$funclist[1852]="openssl_x509_export";$funcdest[1852]="openssl_x509_export(mixed x509, string &output [, bool notext])<&%>Exports a certificate as a string (bool)";$funclist[1853]="openssl_x509_export_to_file";$funcdest[1853]="openssl_x509_export_to_file(mixed x509, string outfilename [, bool notext])<&%>Exports a certificate to file (bool)";$funclist[1854]="openssl_x509_free";$funcdest[1854]="openssl_x509_free(resource x509cert)<&%>Free certificate resource (void)";$funclist[1855]="openssl_x509_parse";$funcdest[1855]="openssl_x509_parse(mixed x509cert [, bool shortnames])<&%>Parse an X509 certificate and return the information as an array (array)";$funclist[1856]="openssl_x509_read";$funcdest[1856]="openssl_x509_read(mixed x509certdata)<&%>Parse an X.509 certificate and return a resource identifier for it (resource)";$funclist[1857]="ora_columnname";$funcdest[1857]="ora_columnname(int cursor, int column)<&%>Get name of Oracle result column (string)";$funclist[1858]="ora_columnsize";$funcdest[1858]="ora_columnsize(int cursor, int column)<&%>get size of Oracle result column (int)";$funclist[1859]="ora_columntype";$funcdest[1859]="ora_columntype(resource cursor, int column)<&%>Get type of Oracle result column (string)";$funclist[1860]="ora_commit";$funcdest[1860]="ora_commit(int conn)<&%>commit an Oracle transaction (int)";$funclist[1861]="ora_commitoff";$funcdest[1861]="ora_commitoff(int conn)<&%>disable automatic commit (int)";$funclist[1862]="ora_error";$funcdest[1862]="ora_error(int cursor_or_connection)<&%>get Oracle error message (string)";$funclist[1863]="ora_errorcode";$funcdest[1863]="ora_errorcode(int cursor_or_connection)<&%>get Oracle error code (int)";$funclist[1864]="ora_exec";$funcdest[1864]="ora_exec(resource cursor)<&%>Execute parsed statement on an Oracle cursor (bool)";$funclist[1865]="ora_getcolumn";$funcdest[1865]="ora_getcolumn(int cursor, mixed column)<&%>Get data from a fetched column (mixed)";$funclist[1866]="ora_logoff";$funcdest[1866]="ora_logoff(int connection)<&%>Close an Oracle connection (int)";$funclist[1867]="ora_logon";$funcdest[1867]="ora_logon(string user, string password)<&%>Open an Oracle connection (resource)";$funclist[1868]="ora_numcols";$funcdest[1868]="ora_numcols(int cursor_ind)<&%>Returns the number of columns (int)";$funclist[1869]="ora_numrows";$funcdest[1869]="ora_numrows(int cursor_ind)<&%>Returns the number of rows (int)";$funclist[1870]="ora_open";$funcdest[1870]="ora_open(int connection)<&%>open an Oracle cursor (int)";$funclist[1871]="ora_parse";$funcdest[1871]="ora_parse(int cursor_ind, string sql_statement, int defer)<&%>Parse an SQL statement with Oracle (int)";$funclist[1872]="ora_plogon";$funcdest[1872]="ora_plogon(string user, string password)<&%>Open a persistent Oracle connection (int)";$funclist[1873]="ord";$funcdest[1873]="ord(string string)<&%>Return ASCII value of character (int)";$funclist[1874]="overload";$funcdest[1874]="overload([string class_name])<&%>Enable property and method call overloading for a class (void)";$funclist[1875]="ovrimos_close";$funcdest[1875]="ovrimos_close(int connection)<&%>Closes the connection to ovrimos (void)";$funclist[1876]="ovrimos_commit";$funcdest[1876]="ovrimos_commit(int connection_id)<&%>Commits the transaction (int)";$funclist[1877]="ovrimos_connect";$funcdest[1877]="ovrimos_connect(string host, string db, string user, string password)<&%>Connect to the specified database (int)";$funclist[1878]="ovrimos_cursor";$funcdest[1878]="ovrimos_cursor(int result_id)<&%>Returns the name of the cursor (int)";$funclist[1879]="ovrimos_exec";$funcdest[1879]="ovrimos_exec(int connection_id, string query)<&%>Executes an SQL statement (int)";$funclist[1880]="ovrimos_execute";$funcdest[1880]="ovrimos_execute(int result_id [, array parameters_array])<&%>Executes a prepared SQL statement (bool)";$funclist[1881]="ovrimos_fetch_into";$funcdest[1881]="ovrimos_fetch_into(int result_id, array result_array [, string how [, int rownumber]])<&%>Fetches a row from the result set (bool)";$funclist[1882]="ovrimos_fetch_row";$funcdest[1882]="ovrimos_fetch_row(int result_id [, int how [, int row_number]])<&%>Fetches a row from the result set (bool)";$funclist[1883]="ovrimos_field_len";$funcdest[1883]="ovrimos_field_len(int result_id, int field_number)<&%>Returns the length of the output column (int)";$funclist[1884]="ovrimos_field_name";$funcdest[1884]="ovrimos_field_name(int result_id, int field_number)<&%>Returns the output column name (int)";$funclist[1885]="ovrimos_field_num";$funcdest[1885]="ovrimos_field_num(int result_id, string field_name)<&%>Returns the (1-based)<&%>index of the output column (int)";$funclist[1886]="ovrimos_field_type";$funcdest[1886]="ovrimos_field_type(int result_id, int field_number)<&%>Returns the (numeric)<&%>type of the output column (int)";$funclist[1887]="ovrimos_free_result";$funcdest[1887]="ovrimos_free_result(int result_id)<&%>Frees the specified result_id (bool)";$funclist[1888]="ovrimos_longreadlen";$funcdest[1888]="ovrimos_longreadlen(int result_id, int length)<&%>Specifies how many bytes are to be retrieved from long datatypes (int)";$funclist[1889]="ovrimos_num_fields";$funcdest[1889]="ovrimos_num_fields(int result_id)<&%>Returns the number of columns (int)";$funclist[1890]="ovrimos_num_rows";$funcdest[1890]="ovrimos_num_rows(int result_id)<&%>Returns the number of rows affected by update operations (int)";$funclist[1891]="ovrimos_prepare";$funcdest[1891]="ovrimos_prepare(int connection_id, string query)<&%>Prepares an SQL statement (int)";$funclist[1892]="ovrimos_result";$funcdest[1892]="ovrimos_result(int result_id, mixed field)<&%>Retrieves the output column (int)";$funclist[1893]="ovrimos_result_all";$funcdest[1893]="ovrimos_result_all(int result_id [, string format])<&%>Prints the whole result set as an HTML table (bool)";$funclist[1894]="ovrimos_rollback";$funcdest[1894]="ovrimos_rollback(int connection_id)<&%>Rolls back the transaction (int)";$funclist[1895]="pack";$funcdest[1895]="pack(string format [, mixed args])<&%>Pack data into binary string. (string)";$funclist[1896]="parse_ini_file";$funcdest[1896]="parse_ini_file(string filename [, bool process_sections])<&%>Parse a configuration file (array)";$funclist[1897]="parse_str";$funcdest[1897]="parse_str(string str [, array arr])<&%>Parses the string into variables (void)";$funclist[1898]="parse_url";$funcdest[1898]="parse_url(string url)<&%>Parse a URL and return its components (array)";$funclist[1899]="passthru";$funcdest[1899]="passthru(string command [, int return_var])<&%>Execute an external program and display raw output (void)";$funclist[1900]="pathinfo";$funcdest[1900]="pathinfo(string path)<&%>Returns information about a file path (array)";$funclist[1901]="pclose";$funcdest[1901]="pclose(resource handle)<&%>Closes process file pointer (int)";$funclist[1902]="pcntl_exec";$funcdest[1902]="pcntl_exec(string path [, array args [, array envs]])<&%>Executes specified program in current process space (bool)";$funclist[1903]="pcntl_fork";$funcdest[1903]="pcntl_fork(void)<&%>Forks the currently running process (int)";$funclist[1904]="pcntl_signal";$funcdest[1904]="pcntl_signal(int signo, mixed handle [, bool restart_syscalls])<&%>Installs a signal handler (bool)";$funclist[1905]="pcntl_waitpid";$funcdest[1905]="pcntl_waitpid(int pid, int status, int options)<&%>Waits on or returns the status of a forked child (int)";$funclist[1906]="pcntl_wexitstatus";$funcdest[1906]="pcntl_wexitstatus(int status)<&%>Returns the return code of a terminated child (int)";$funclist[1907]="pcntl_wifexited";$funcdest[1907]="pcntl_wifexited(int status)<&%>Returns TRUE if status code represents a successful exit (int)";$funclist[1908]="pcntl_wifsignaled";$funcdest[1908]="pcntl_wifsignaled(int status)<&%>Returns TRUE if status code represents a termination due to a signal (int)";$funclist[1909]="pcntl_wifstopped";$funcdest[1909]="pcntl_wifstopped(int status)<&%>Returns TRUE if child process is currently stopped (int)";$funclist[1910]="pcntl_wstopsig";$funcdest[1910]="pcntl_wstopsig(int status)<&%>Returns the signal which caused the child to stop (int)";$funclist[1911]="pcntl_wtermsig";$funcdest[1911]="pcntl_wtermsig(int status)<&%>Returns the signal which caused the child to terminate (int)";$funclist[1912]="pdf_add_annotation";$funcdest[1912]="pdf_add_annotation(?)<&%>Deprecated: Adds annotation (?)";$funclist[1913]="pdf_add_bookmark";$funcdest[1913]="pdf_add_bookmark(int pdf_object, string text [, int parent [, int open]])<&%>Adds bookmark for current page (int)";$funclist[1914]="pdf_add_launchlink";$funcdest[1914]="pdf_add_launchlink(int pdf_object, float llx, float lly, float urx, float ury, string filename)<&%>Add a launch annotation for current page (int)";$funclist[1915]="pdf_add_locallink";$funcdest[1915]="pdf_add_locallink(int pdf_object, float llx, float lly, float urx, float ury, int page, string dest)<&%>Add a link annotation for current page (int)";$funclist[1916]="pdf_add_note";$funcdest[1916]="pdf_add_note(int pdf_object, float llx, float lly, float urx, float ury, string contents, string title, string icon, int open)<&%>Add a note annotation for current page (int)";$funclist[1917]="pdf_add_outline";$funcdest[1917]="pdf_add_outline(?)<&%>Deprecated: Adds bookmark for current page (?)";$funclist[1918]="pdf_add_pdflink";$funcdest[1918]="pdf_add_pdflink(int pdf_object, float llx, float lly, float urx, float ury, string filename, int page, string dest)<&%>Adds file link annotation for current page (int)";$funclist[1919]="pdf_add_thumbnail";$funcdest[1919]="pdf_add_thumbnail(int pdf_object, int image)<&%>Adds thumbnail for current page (int)";$funclist[1920]="pdf_add_weblink";$funcdest[1920]="pdf_add_weblink(int pdf_object, float llx, float lly, float urx, float ury, string url)<&%>Adds weblink for current page (int)";$funclist[1921]="pdf_arc";$funcdest[1921]="pdf_arc(resource pdf_object, float x, float y, float r, float alpha, float beta)<&%>Draws an arc (counterclockwise)<&%>(void)";$funclist[1922]="pdf_arcn";$funcdest[1922]="pdf_arcn(resource pdf_object, float x, float y, float r, float alpha, float beta)<&%>Draws an arc (clockwise)<&%>(void)";$funclist[1923]="pdf_attach_file";$funcdest[1923]="pdf_attach_file(int pdf_object, float llx, float lly, float urx, float ury, string filename, string description, string author, string mimetype, string icon)<&%>Adds a file attachement for current page (int)";$funclist[1924]="pdf_begin_page";$funcdest[1924]="pdf_begin_page(int pdf_object, float width, float height)<&%>Starts new page (void)";$funclist[1925]="pdf_begin_pattern";$funcdest[1925]="pdf_begin_pattern(int pdf_object, float width, float height, float xstep, float ystep, int painttype)<&%>Starts new pattern (int)";$funclist[1926]="pdf_begin_template";$funcdest[1926]="pdf_begin_template(int pdf_object, float width, float height)<&%>Starts new template (int)";$funclist[1927]="pdf_circle";$funcdest[1927]="pdf_circle(int pdf_object, float x, float y, float r)<&%>Draws a circle (void)";$funclist[1928]="pdf_clip";$funcdest[1928]="pdf_clip(int pdf_object)<&%>Clips to current path (void)";$funclist[1929]="pdf_close";$funcdest[1929]="pdf_close(int pdf_object)<&%>Closes a pdf object (void)";$funclist[1930]="pdf_close_image";$funcdest[1930]="pdf_close_image(int pdf_object, int image)<&%>Closes an image (void)";$funclist[1931]="pdf_close_pdi";$funcdest[1931]="pdf_close_pdi(int pdf_object, int dochandle)<&%>Close the input PDF document (void)";$funclist[1932]="pdf_close_pdi_page";$funcdest[1932]="pdf_close_pdi_page(int pdf_object, int pagehandle)<&%>Close the page handle (void)";$funclist[1933]="pdf_closepath";$funcdest[1933]="pdf_closepath(int pdf_object)<&%>Closes path (void)";$funclist[1934]="pdf_closepath_fill_stroke";$funcdest[1934]="pdf_closepath_fill_stroke(int pdf_object)<&%>Closes, fills and strokes current path (void)";$funclist[1935]="pdf_closepath_stroke";$funcdest[1935]="pdf_closepath_stroke(int pdf_object)<&%>Closes path and draws line along path (void)";$funclist[1936]="pdf_concat";$funcdest[1936]="pdf_concat(int pdf_object, float a, float b, float c, float d, float e, float f)<&%>Concatenate a matrix to the CTM (void)";$funclist[1937]="pdf_continue_text";$funcdest[1937]="pdf_continue_text(int pdf_object, string text)<&%>Outputs text in next line (void)";$funclist[1938]="pdf_curveto";$funcdest[1938]="pdf_curveto(int pdf_object, float x1, float y1, float x2, float y2, float x3, float y3)<&%>Draws a curve (void)";$funclist[1939]="pdf_delete";$funcdest[1939]="pdf_delete(int pdf_object)<&%>Deletes a PDF object (void)";$funclist[1940]="pdf_end_page";$funcdest[1940]="pdf_end_page(int pdf_object)<&%>Ends a page (void)";$funclist[1941]="pdf_end_pattern";$funcdest[1941]="pdf_end_pattern(int pdf_object)<&%>Finish pattern (void)";$funclist[1942]="pdf_end_template";$funcdest[1942]="pdf_end_template(int pdf_object)<&%>Finish template (void)";$funclist[1943]="pdf_endpath";$funcdest[1943]="pdf_endpath(?)<&%>Deprecated: Ends current path (?)";$funclist[1944]="pdf_fill";$funcdest[1944]="pdf_fill(int pdf_object)<&%>Fills current path (void)";$funclist[1945]="pdf_fill_stroke";$funcdest[1945]="pdf_fill_stroke(int pdf_object)<&%>Fills and strokes current path (void)";$funclist[1946]="pdf_findfont";$funcdest[1946]="pdf_findfont(int pdf_object, string fontname, string encoding, int embed)<&%>Prepare font for later use with pdf_setfont()<&%>. (int)";$funclist[1947]="pdf_get_buffer";$funcdest[1947]="pdf_get_buffer(int pdf_object)<&%>Fetch the buffer containig the generated PDF data. (string)";$funclist[1948]="pdf_get_font";$funcdest[1948]="pdf_get_font(?)<&%>Deprecated: font handling (?)";$funclist[1949]="pdf_get_fontname";$funcdest[1949]="pdf_get_fontname(?)<&%>Deprecated: font handling (?)";$funclist[1950]="pdf_get_fontsize";$funcdest[1950]="pdf_get_fontsize(?)<&%>Deprecated: font handling (?)";$funclist[1951]="pdf_get_image_height";$funcdest[1951]="pdf_get_image_height(int pdf_object, int image)<&%>Returns height of an image (string)";$funclist[1952]="pdf_get_image_width";$funcdest[1952]="pdf_get_image_width(int pdf_object, int image)<&%>Returns width of an image (string)";$funclist[1953]="pdf_get_majorversion";$funcdest[1953]="pdf_get_majorversion(void)<&%>Returns the major version number of the PDFlib (int)";$funclist[1954]="pdf_get_minorversion";$funcdest[1954]="pdf_get_minorversion(void)<&%>Returns the minor version number of the PDFlib (int)";$funclist[1955]="pdf_get_parameter";$funcdest[1955]="pdf_get_parameter(int pdf_object, string key [, float modifier])<&%>Gets certain parameters (string)";$funclist[1956]="pdf_get_pdi_parameter";$funcdest[1956]="pdf_get_pdi_parameter(int pdf_object, string key, int doc, int page, int index)<&%>Get some PDI string parameters (string)";$funclist[1957]="pdf_get_pdi_value";$funcdest[1957]="pdf_get_pdi_value(int pdf_object, string key, int doc, int page, int index)<&%>Gets some PDI numerical parameters (string)";$funclist[1958]="pdf_get_value";$funcdest[1958]="pdf_get_value(int pdf_object, string key [, float modifier])<&%>Gets certain numerical value (float)";$funclist[1959]="pdf_initgraphics";$funcdest[1959]="pdf_initgraphics(int pdf_object)<&%>Resets graphic state (void)";$funclist[1960]="pdf_lineto";$funcdest[1960]="pdf_lineto(int pdf_object, float x, float y)<&%>Draws a line (void)";$funclist[1961]="pdf_makespotcolor";$funcdest[1961]="pdf_makespotcolor(int pdf_object, string spotname)<&%>Makes a spotcolor (void)";$funclist[1962]="pdf_moveto";$funcdest[1962]="pdf_moveto(int pdf_object, float x, float y)<&%>Sets current point (void)";$funclist[1963]="pdf_new";$funcdest[1963]="pdf_new()<&%>Creates a new pdf object (int)";$funclist[1964]="pdf_open";$funcdest[1964]="pdf_open(?)<&%>Deprecated: Open a new pdf object (?)";$funclist[1965]="pdf_open_CCITT";$funcdest[1965]="pdf_open_CCITT(int pdf_object, string filename, int width, int height, int BitReverse, int k, int Blackls1)<&%>Opens a new image file with raw CCITT data (int)";$funclist[1966]="pdf_open_file";$funcdest[1966]="pdf_open_file(int pdf_object [, string filename])<&%>Opens a new pdf object (int)";$funclist[1967]="pdf_open_gif";$funcdest[1967]="pdf_open_gif(?)<&%>Deprecated: Opens a GIF image (?)";$funclist[1968]="pdf_open_image";$funcdest[1968]="pdf_open_image(int PDF-document, string imagetype, string source, string data, long length, int width, int height, int components, int bpc, string params)<&%>Versatile function for images (int)";$funclist[1969]="pdf_open_image_file";$funcdest[1969]="pdf_open_image_file(int PDF-document, string imagetype, string filename [, string stringparam [, string intparam]])<&%>Reads an image from a file (int)";$funclist[1970]="pdf_open_jpeg";$funcdest[1970]="pdf_open_jpeg(?)<&%>Deprecated: Opens a JPEG image (?)";$funclist[1971]="pdf_open_memory_image";$funcdest[1971]="pdf_open_memory_image(int pdf_object, int image)<&%>Opens an image created with PHP's image functions (int)";$funclist[1972]="pdf_open_pdi";$funcdest[1972]="pdf_open_pdi(int pdf_object, string filename, string stringparam, int intparam)<&%>Opens a PDF file (int)";$funclist[1973]="pdf_open_pdi_page";$funcdest[1973]="pdf_open_pdi_page(int pdf_object, int dochandle, int pagenumber, string pagelabel)<&%>Prepare a page (int)";$funclist[1974]="pdf_open_png";$funcdest[1974]="pdf_open_png(?)<&%>Deprecated: Opens a PNG image (?)";$funclist[1975]="pdf_open_tiff";$funcdest[1975]="pdf_open_tiff(int PDF-document, string filename)<&%>Deprecated: Opens a TIFF image (int)";$funclist[1976]="pdf_place_image";$funcdest[1976]="pdf_place_image(int pdf_object, int image, float x, float y, float scale)<&%>Places an image on the page (void)";$funclist[1977]="pdf_place_pdi_page";$funcdest[1977]="pdf_place_pdi_page(int pdf_object, int page, float x, float y, float sx, float sy)<&%>Places an image on the page (void)";$funclist[1978]="pdf_rect";$funcdest[1978]="pdf_rect(int pdf_object, float x, float y, float width, float height)<&%>Draws a rectangle (void)";$funclist[1979]="pdf_restore";$funcdest[1979]="pdf_restore(int pdf_object)<&%>Restores formerly saved environment (void)";$funclist[1980]="pdf_rotate";$funcdest[1980]="pdf_rotate(int pdf_object, float phi)<&%>Sets rotation (void)";$funclist[1981]="pdf_save";$funcdest[1981]="pdf_save(int pdf_object)<&%>Saves the current environment (void)";$funclist[1982]="pdf_scale";$funcdest[1982]="pdf_scale(int pdf_object, float x-scale, float y-scale)<&%>Sets scaling (void)";$funclist[1983]="pdf_set_border_color";$funcdest[1983]="pdf_set_border_color(int pdf_object, float red, float green, float blue)<&%>Sets color of border around links and annotations (void)";$funclist[1984]="pdf_set_border_dash";$funcdest[1984]="pdf_set_border_dash(int pdf_object, float black, float white)<&%>Sets dash style of border around links and annotations (void)";$funclist[1985]="pdf_set_border_style";$funcdest[1985]="pdf_set_border_style(int pdf_object, string style, float width)<&%>Sets style of border around links and annotations (void)";$funclist[1986]="pdf_set_char_spacing";$funcdest[1986]="pdf_set_char_spacing(?)<&%>Deprecated: Sets character spacing (?)";$funclist[1987]="pdf_set_duration";$funcdest[1987]="pdf_set_duration(?)<&%>Deprecated: Sets duration between pages (?)";$funclist[1988]="pdf_set_font";$funcdest[1988]="pdf_set_font(?)<&%>Deprecated: Selects a font face and size (?)";$funclist[1989]="pdf_set_horiz_scaling";$funcdest[1989]="pdf_set_horiz_scaling(int pdf_object, float scale)<&%>Sets horizontal scaling of text (void)";$funclist[1990]="pdf_set_info";$funcdest[1990]="pdf_set_info(int pdf_object, string key, string value)<&%>Fills a field of the document information (void)";$funclist[1991]="pdf_set_info_author";$funcdest[1991]="pdf_set_info_author(int pdfdoc, string author)<&%>Fills the author field of the document (bool)";$funclist[1992]="pdf_set_info_creator";$funcdest[1992]="pdf_set_info_creator(int pdfdoc, string creator)<&%>Fills the creator field of the document (bool)";$funclist[1993]="pdf_set_info_keywords";$funcdest[1993]="pdf_set_info_keywords(int pdfdoc, string keywords)<&%>Fills the keywords field of the document (bool)";$funclist[1994]="pdf_set_info_subject";$funcdest[1994]="pdf_set_info_subject(int pdfdoc, string subject)<&%>Fills the subject field of the document (bool)";$funclist[1995]="pdf_set_info_title";$funcdest[1995]="pdf_set_info_title(int pdfdoc, string title)<&%>Fills the title field of the document (bool)";$funclist[1996]="pdf_set_leading";$funcdest[1996]="pdf_set_leading(?)<&%>Deprecated: Sets distance between text lines (?)";$funclist[1997]="pdf_set_parameter";$funcdest[1997]="pdf_set_parameter(int pdf_object, string key, string value)<&%>Sets certain parameters (void)";$funclist[1998]="pdf_set_text_matrix";$funcdest[1998]="pdf_set_text_matrix(?)<&%>Deprecated: Sets the text matrix (?)";$funclist[1999]="pdf_set_text_pos";$funcdest[1999]="pdf_set_text_pos(int pdf_object, float x, float y)<&%>Sets text position (void)";$funclist[2000]="pdf_set_text_rendering";$funcdest[2000]="pdf_set_text_rendering(?)<&%>Deprecated: Determines how text is rendered (?)";$funclist[2001]="pdf_set_text_rise";$funcdest[2001]="pdf_set_text_rise(?)<&%>Deprecated: Sets the text rise (?)";$funclist[2002]="pdf_set_value";$funcdest[2002]="pdf_set_value(int pdf_object, string key, float value)<&%>Sets certain numerical value (void)";$funclist[2003]="pdf_set_word_spacing";$funcdest[2003]="pdf_set_word_spacing(?)<&%>Depriciated: Sets spacing between words (?)";$funclist[2004]="pdf_setcolor";$funcdest[2004]="pdf_setcolor(int pdf_object, string type, string colorspace, float c1 [, float c2 [, float c3 [, float c4]]])<&%>Sets fill and stroke color (void)";$funclist[2005]="pdf_setdash";$funcdest[2005]="pdf_setdash(int pdf_object, float b, float w)<&%>Sets dash pattern (void)";$funclist[2006]="pdf_setflat";$funcdest[2006]="pdf_setflat(int pdf_object, float flatness)<&%>Sets flatness (void)";$funclist[2007]="pdf_setfont";$funcdest[2007]="pdf_setfont(int pdf_object, int font, float size)<&%>Set the current font (void)";$funclist[2008]="pdf_setgray";$funcdest[2008]="pdf_setgray(int pdf_object, float gray)<&%>Sets drawing and filling color to gray value (void)";$funclist[2009]="pdf_setgray_fill";$funcdest[2009]="pdf_setgray_fill(int pdf_object, float gray)<&%>Sets filling color to gray value (void)";$funclist[2010]="pdf_setgray_stroke";$funcdest[2010]="pdf_setgray_stroke(int pdf_object, float gray)<&%>Sets drawing color to gray value (void)";$funclist[2011]="pdf_setlinecap";$funcdest[2011]="pdf_setlinecap(int pdf_object, int linecap)<&%>Sets linecap parameter (void)";$funclist[2012]="pdf_setlinejoin";$funcdest[2012]="pdf_setlinejoin(int pdf_object, int value)<&%>Sets linejoin parameter (void)";$funclist[2013]="pdf_setlinewidth";$funcdest[2013]="pdf_setlinewidth(int pdf_object, float width)<&%>Sets line width (void)";$funclist[2014]="pdf_setmatrix";$funcdest[2014]="pdf_setmatrix(int pdf_object, float a, float b, float c, float d, float e, float f)<&%>Sets current transformation matrix (void)";$funclist[2015]="pdf_setmiterlimit";$funcdest[2015]="pdf_setmiterlimit(int pdf_object, float miter)<&%>Sets miter limit (void)";$funclist[2016]="pdf_setpolydash";$funcdest[2016]="pdf_setpolydash(int pdf_object, float * dasharray)<&%>Sets complicated dash pattern (void)";$funclist[2017]="pdf_setrgbcolor";$funcdest[2017]="pdf_setrgbcolor(int pdf_object, float red value, float green value, float blue value)<&%>Sets drawing and filling color to rgb color value (void)";$funclist[2018]="pdf_setrgbcolor_fill";$funcdest[2018]="pdf_setrgbcolor_fill(int pdf_object, float red value, float green value, float blue value)<&%>Sets filling color to rgb color value (void)";$funclist[2019]="pdf_setrgbcolor_stroke";$funcdest[2019]="pdf_setrgbcolor_stroke(int pdf_object, float red value, float green value, float blue value)<&%>Sets drawing color to rgb color value (void)";$funclist[2020]="pdf_show";$funcdest[2020]="pdf_show(int pdf_object, string text)<&%>Output text at current position (void)";$funclist[2021]="pdf_show_boxed";$funcdest[2021]="pdf_show_boxed(int pdf_object, string text, float left, float top, float width, float height, string hmode [, string feature])<&%>Output text in a box (int)";$funclist[2022]="pdf_show_xy";$funcdest[2022]="pdf_show_xy(int pdf_object, string text, float x, float y)<&%>Output text at given position (void)";$funclist[2023]="pdf_skew";$funcdest[2023]="pdf_skew(int pdf_object, float alpha, float beta)<&%>Skews the coordinate system (void)";$funclist[2024]="pdf_stringwidth";$funcdest[2024]="pdf_stringwidth(int pdf_object, string text [, int font [, float size]])<&%>Returns width of text using current font (float)";$funclist[2025]="pdf_stroke";$funcdest[2025]="pdf_stroke(int pdf_object)<&%>Draws line along path (void)";$funclist[2026]="pdf_translate";$funcdest[2026]="pdf_translate(int pdf_object, float tx, float ty)<&%>Sets origin of coordinate system (void)";$funclist[2027]="pfpro_cleanup";$funcdest[2027]="pfpro_cleanup(void)<&%>Shuts down the Payflow Pro library (void)";$funclist[2028]="pfpro_init";$funcdest[2028]="pfpro_init(void)<&%>Initialises the Payflow Pro library (void)";$funclist[2029]="pfpro_process";$funcdest[2029]="pfpro_process(array parameters [, string address [, int port [, int timeout [, string proxy address [, int proxy port [, string proxy logon [, string proxy password]]]]]]])<&%>Process a transaction with Payflow Pro (array)";$funclist[2030]="pfpro_process_raw";$funcdest[2030]="pfpro_process_raw(string parameters [, string address [, int port [, int timeout [, string proxy address [, int proxy port [, string proxy logon [, string proxy password]]]]]]])<&%>Process a raw transaction with Payflow Pro (string)";$funclist[2031]="pfpro_version";$funcdest[2031]="pfpro_version(void)<&%>Returns the version of the Payflow Pro software (string)";$funclist[2032]="pfsockopen";$funcdest[2032]="pfsockopen(string hostname, int port [, int errno [, string errstr [, int timeout]]])<&%>Open persistent Internet or Unix domain socket connection (int)";$funclist[2033]="pg_affected_rows";$funcdest[2033]="pg_affected_rows(resource result)<&%>Returns number of affected records(tuples)<&%>(int)";$funclist[2034]="pg_cancel_query";$funcdest[2034]="pg_cancel_query(resource connection)<&%>Cancel async query (bool)";$funclist[2035]="pg_client_encoding";$funcdest[2035]="pg_client_encoding([resource connection])<&%>Get the client encoding (string)";$funclist[2036]="pg_close";$funcdest[2036]="pg_close(resource connection)<&%>Close a PostgreSQL connection (bool)";$funclist[2037]="pg_connect";$funcdest[2037]="pg_connect(string connection_string)<&%>Open a PostgreSQL connection (resource)";$funclist[2038]="pg_connection_busy";$funcdest[2038]="pg_connection_busy(resource connection)<&%>Get connection is busy or not (bool)";$funclist[2039]="pg_connection_reset";$funcdest[2039]="pg_connection_reset(resource connection)<&%>Reset connection (reconnect)<&%>(bool)";$funclist[2040]="pg_connection_status";$funcdest[2040]="pg_connection_status(resource connection)<&%>Get connection status (int)";$funclist[2041]="pg_convert";$funcdest[2041]="pg_convert(resource connection, string table_name, array assoc_array [, int options])<&%>Convert associative array value into suitable for SQL statement. (array)";$funclist[2042]="pg_copy_from";$funcdest[2042]="pg_copy_from(resource connection, string table_name, array rows [, string delimiter [, string null_as]])<&%>Insert records into a table from an array (bool)";$funclist[2043]="pg_copy_to";$funcdest[2043]="pg_copy_to(resource connection, string table_name [, string delimiter [, string null_as]])<&%>Copy a table to an array (array)";$funclist[2044]="pg_dbname";$funcdest[2044]="pg_dbname(resource connection)<&%>Get the database name (string)";$funclist[2045]="pg_delete";$funcdest[2045]="pg_delete(resource connection, string table_name, array assoc_array [, int options])<&%>Delete records. (mixed)";$funclist[2046]="pg_end_copy";$funcdest[2046]="pg_end_copy([resource connection])<&%>Sync with PostgreSQL backend (bool)";$funclist[2047]="pg_escape_bytea";$funcdest[2047]="pg_escape_bytea(string data)<&%>Escape binary for bytea type (string)";$funclist[2048]="pg_escape_string";$funcdest[2048]="pg_escape_string(string data)<&%>Escape string for text/char type (string)";$funclist[2049]="pg_fetch_all";$funcdest[2049]="pg_fetch_all(resource result [, int row])<&%>Fetch a row as an array (array)";$funclist[2050]="pg_fetch_array";$funcdest[2050]="pg_fetch_array(resource result [, int row [, int result_type]])<&%>Fetch a row as an array (array)";$funclist[2051]="pg_fetch_assoc";$funcdest[2051]="pg_fetch_assoc(resource result [, int row])<&%>Fetch a row as an array (array)";$funclist[2052]="pg_fetch_object";$funcdest[2052]="pg_fetch_object(resource result [, int row [, int result_type]])<&%>Fetch a row as an object (object)";$funclist[2053]="pg_fetch_result";$funcdest[2053]="pg_fetch_result(resource result, int row, mixed field)<&%>Returns values from a result resource (mixed)";$funclist[2054]="pg_fetch_row";$funcdest[2054]="pg_fetch_row(resource result, int row)<&%>Get a row as an enumerated array (array)";$funclist[2055]="pg_field_is_null";$funcdest[2055]="pg_field_is_null(resource result, int row, mixed field)<&%>Test if a field is NULL (int)";$funclist[2056]="pg_field_name";$funcdest[2056]="pg_field_name(resource result, int field_number)<&%>Returns the name of a field (string)";$funclist[2057]="pg_field_num";$funcdest[2057]="pg_field_num(resource result, string field_name)<&%>Returns the field number of the named field (int)";$funclist[2058]="pg_field_prtlen";$funcdest[2058]="pg_field_prtlen(resource result, int row_number, string field_name)<&%>Returns the printed length (int)";$funclist[2059]="pg_field_size";$funcdest[2059]="pg_field_size(resource result, int field_number)<&%>Returns the internal storage size of the named field (int)";$funclist[2060]="pg_field_type";$funcdest[2060]="pg_field_type(resource result, int field_number)<&%>Returns the type name for the corresponding field number (string)";$funclist[2061]="pg_free_result";$funcdest[2061]="pg_free_result(resource result)<&%>Free result memory (bool)";$funclist[2062]="pg_get_notify";$funcdest[2062]="pg_get_notify(resource connection [, int result_type])<&%>Ping database connection (array)";$funclist[2063]="pg_get_pid";$funcdest[2063]="pg_get_pid(resource connection)<&%>Ping database connection (int)";$funclist[2064]="pg_get_result";$funcdest[2064]="pg_get_result([resource connection])<&%>Get asynchronous query result (resource)";$funclist[2065]="pg_host";$funcdest[2065]="pg_host(resource connection)<&%>Returns the host name associated with the connection (string)";$funclist[2066]="pg_insert";$funcdest[2066]="pg_insert(resource connection, string table_name, array assoc_array [, int options])<&%>Insert array into table. (bool)";$funclist[2067]="pg_last_error";$funcdest[2067]="pg_last_error([resource connection])<&%>Get the last error message string of a connection (string)";$funclist[2068]="pg_last_notice";$funcdest[2068]="pg_last_notice(resource connection)<&%>Returns the last notice message from PostgreSQL server (string)";$funclist[2069]="pg_last_oid";$funcdest[2069]="pg_last_oid(resource result)<&%>Returns the last object's oid (int)";$funclist[2070]="pg_lo_close";$funcdest[2070]="pg_lo_close(resource large_object)<&%>Close a large object (bool)";$funclist[2071]="pg_lo_create";$funcdest[2071]="pg_lo_create(resource connection)<&%>Create a large object (int)";$funclist[2072]="pg_lo_export";$funcdest[2072]="pg_lo_export(int oid, string pathname [, resource connection])<&%>Export a large object to file (bool)";$funclist[2073]="pg_lo_import";$funcdest[2073]="pg_lo_import([resource connection, string pathname])<&%>Import a large object from file (int)";$funclist[2074]="pg_lo_open";$funcdest[2074]="pg_lo_open(resource connection, int oid, string mode)<&%>Open a large object (resource)";$funclist[2075]="pg_lo_read";$funcdest[2075]="pg_lo_read(resource large_object, int len)<&%>Read a large object (string)";$funclist[2076]="pg_lo_read_all";$funcdest[2076]="pg_lo_read_all(resource large_object)<&%>Read a entire large object and send straight to browser (int)";$funclist[2077]="pg_lo_seek";$funcdest[2077]="pg_lo_seek(resource large_object, int offset [, int whence])<&%>Seeks position of large object (bool)";$funclist[2078]="pg_lo_tell";$funcdest[2078]="pg_lo_tell(resource large_object)<&%>Returns current position of large object (int)";$funclist[2079]="pg_lo_unlink";$funcdest[2079]="pg_lo_unlink(resource connection, int oid)<&%>Delete a large object (bool)";$funclist[2080]="pg_lo_write";$funcdest[2080]="pg_lo_write(resource large_object, string data)<&%>Write a large object (int)";$funclist[2081]="pg_meta_data";$funcdest[2081]="pg_meta_data(resource connection, string table_name)<&%>Get meta data for table. (array)";$funclist[2082]="pg_num_fields";$funcdest[2082]="pg_num_fields(resource result)<&%>Returns the number of fields (int)";$funclist[2083]="pg_num_rows";$funcdest[2083]="pg_num_rows(resource result)<&%>Returns the number of rows (int)";$funclist[2084]="pg_options";$funcdest[2084]="pg_options(resource connection)<&%>Get the options associated with the connection (string)";$funclist[2085]="pg_pconnect";$funcdest[2085]="pg_pconnect(string connection_string)<&%>Open a persistent PostgreSQL connection (resource)";$funclist[2086]="pg_ping";$funcdest[2086]="pg_ping(resource connection)<&%>Ping database connection (bool)";$funclist[2087]="pg_port";$funcdest[2087]="pg_port(resource connection)<&%>Return the port number associated with the connection (int)";$funclist[2088]="pg_put_line";$funcdest[2088]="pg_put_line([resource connection, string data])<&%>Send a NULL-terminated string to PostgreSQL backend (bool)";$funclist[2089]="pg_query";$funcdest[2089]="pg_query(resource connection, string query)<&%>Execute a query (resource)";$funclist[2090]="pg_result_error";$funcdest[2090]="pg_result_error(resource result)<&%>Get error message associated with result (string)";$funclist[2091]="pg_result_seek";$funcdest[2091]="pg_result_seek(resource result, int offset)<&%>Set internal row offset in result resource (array)";$funclist[2092]="pg_result_status";$funcdest[2092]="pg_result_status(resource result)<&%>Get status of query result (int)";$funclist[2093]="pg_select";$funcdest[2093]="pg_select(resource connection, string table_name, array assoc_array [, int options])<&%>Select records. (array)";$funclist[2094]="pg_send_query";$funcdest[2094]="pg_send_query(resource connection, string query)<&%>Send asynchronous query (bool)";$funclist[2095]="pg_set_client_encoding";$funcdest[2095]="pg_set_client_encoding([resource connection, string encoding])<&%>Set the client encoding (int)";$funclist[2096]="pg_trace";$funcdest[2096]="pg_trace(string pathname [, string mode [, resource connection]])<&%>Enable tracing a PostgreSQL connection (bool)";$funclist[2097]="pg_tty";$funcdest[2097]="pg_tty(resource connection)<&%>Return the tty name associated with the connection (string)";$funclist[2098]="pg_unescape_bytea";$funcdest[2098]="pg_unescape_bytea(string data)<&%>Escape binary for bytea type (string)";$funclist[2099]="pg_untrace";$funcdest[2099]="pg_untrace([resource connection])<&%>Disable tracing of a PostgreSQL connection (bool)";$funclist[2100]="pg_update";$funcdest[2100]="pg_update(resource connection, string table_name, array condition, array data [, int options])<&%>Update table. (mixed)";$funclist[2101]="php_ini_scanned_files";$funcdest[2101]="php_ini_scanned_files(void)<&%>Return a list of .ini files parsed from the additional ini dir (string)";$funclist[2102]="php_logo_guid";$funcdest[2102]="php_logo_guid(void)<&%>Gets the logo guid (string)";$funclist[2103]="php_sapi_name";$funcdest[2103]="php_sapi_name(void)<&%>Returns the type of interface between web server and PHP (string)";$funclist[2104]="php_uname";$funcdest[2104]="php_uname(void)<&%>Returns information about the operating system PHP was built on (string)";$funclist[2105]="phpcredits";$funcdest[2105]="phpcredits([int flag])<&%>Prints out the credits for PHP (void)";$funclist[2106]="phpinfo";$funcdest[2106]="phpinfo([int what])<&%>Outputs lots of PHP information (int)";$funclist[2107]="phpversion";$funcdest[2107]="phpversion(void)<&%>Gets the current PHP version (string)";$funclist[2108]="pi";$funcdest[2108]="pi(void)<&%>Get value of pi (float)";$funclist[2109]="png2wbmp";$funcdest[2109]="png2wbmp(string pngname, string wbmpname, int d_height, int d_width, int threshold)<&%>Convert PNG image file to WBMP image file (int)";$funclist[2110]="popen";$funcdest[2110]="popen(string command, string mode)<&%>Opens process file pointer (resource)";$funclist[2111]="pos";$funcdest[2111]="pos(array array)<&%>Get the current element from an array (mixed)";$funclist[2112]="posix_ctermid";$funcdest[2112]="posix_ctermid(void)<&%>Get path name of controlling terminal (string)";$funclist[2113]="posix_getcwd";$funcdest[2113]="posix_getcwd(void)<&%>Pathname of current directory (string)";$funclist[2114]="posix_getegid";$funcdest[2114]="posix_getegid(void)<&%>Return the effective group ID of the current process (int)";$funclist[2115]="posix_geteuid";$funcdest[2115]="posix_geteuid(void)<&%>Return the effective user ID of the current process (int)";$funclist[2116]="posix_getgid";$funcdest[2116]="posix_getgid(void)<&%>Return the real group ID of the current process (int)";$funclist[2117]="posix_getgrgid";$funcdest[2117]="posix_getgrgid(int gid)<&%>Return info about a group by group id (array)";$funclist[2118]="posix_getgrnam";$funcdest[2118]="posix_getgrnam(string name)<&%>Return info about a group by name (array)";$funclist[2119]="posix_getgroups";$funcdest[2119]="posix_getgroups(void)<&%>Return the group set of the current process (array)";$funclist[2120]="posix_getlogin";$funcdest[2120]="posix_getlogin(void)<&%>Return login name (string)";$funclist[2121]="posix_getpgid";$funcdest[2121]="posix_getpgid(int pid)<&%>Get process group id for job control (int)";$funclist[2122]="posix_getpgrp";$funcdest[2122]="posix_getpgrp(void)<&%>Return the current process group identifier (int)";$funclist[2123]="posix_getpid";$funcdest[2123]="posix_getpid(void)<&%>Return the current process identifier (int)";$funclist[2124]="posix_getppid";$funcdest[2124]="posix_getppid(void)<&%>Return the parent process identifier (int)";$funclist[2125]="posix_getpwnam";$funcdest[2125]="posix_getpwnam(string username)<&%>Return info about a user by username (array)";$funclist[2126]="posix_getpwuid";$funcdest[2126]="posix_getpwuid(int uid)<&%>Return info about a user by user id (array)";$funclist[2127]="posix_getrlimit";$funcdest[2127]="posix_getrlimit(void)<&%>Return info about system ressource limits (array)";$funclist[2128]="posix_getsid";$funcdest[2128]="posix_getsid(int pid)<&%>Get the current sid of the process (int)";$funclist[2129]="posix_getuid";$funcdest[2129]="posix_getuid(void)<&%>Return the real user ID of the current process (int)";$funclist[2130]="posix_isatty";$funcdest[2130]="posix_isatty(int fd)<&%>Determine if a file descriptor is an interactive terminal (bool)";$funclist[2131]="posix_kill";$funcdest[2131]="posix_kill(int pid, int sig)<&%>Send a signal to a process (bool)";$funclist[2132]="posix_mkfifo";$funcdest[2132]="posix_mkfifo(string pathname, int mode)<&%>Create a fifo special file (a named pipe)<&%>(bool)";$funclist[2133]="posix_setegid";$funcdest[2133]="posix_setegid(int gid)<&%>Set the effective GID of the current process (bool)";$funclist[2134]="posix_seteuid";$funcdest[2134]="posix_seteuid(int uid)<&%>Set the effective UID of the current process (bool)";$funclist[2135]="posix_setgid";$funcdest[2135]="posix_setgid(int gid)<&%>Set the GID of the current process (bool)";$funclist[2136]="posix_setpgid";$funcdest[2136]="posix_setpgid(int pid, int pgid)<&%>set process group id for job control (int)";$funclist[2137]="posix_setsid";$funcdest[2137]="posix_setsid(void)<&%>Make the current process a session leader (int)";$funclist[2138]="posix_setuid";$funcdest[2138]="posix_setuid(int uid)<&%>Set the UID of the current process (bool)";$funclist[2139]="posix_times";$funcdest[2139]="posix_times(void)<&%>Get process times (array)";$funclist[2140]="posix_ttyname";$funcdest[2140]="posix_ttyname(int fd)<&%>Determine terminal device name (string)";$funclist[2141]="posix_uname";$funcdest[2141]="posix_uname(void)<&%>Get system name (array)";$funclist[2142]="pow";$funcdest[2142]="pow(number base, number exp)<&%>Exponential expression (number)";$funclist[2143]="preg_grep";$funcdest[2143]="preg_grep(string pattern, array input)<&%>Return array entries that match the pattern (array)";$funclist[2144]="preg_match";$funcdest[2144]="preg_match(string pattern, string subject [, array matches [, int flags]])<&%>Perform a regular expression match (int)";$funclist[2145]="preg_match_all";$funcdest[2145]="preg_match_all(string pattern, string subject, array matches [, int flags])<&%>Perform a global regular expression match (int)";$funclist[2146]="preg_quote";$funcdest[2146]="preg_quote(string str [, string delimiter])<&%>Quote regular expression characters (string)";$funclist[2147]="preg_replace";$funcdest[2147]="preg_replace(mixed pattern, mixed replacement, mixed subject [, int limit])<&%>Perform a regular expression search and replace (mixed)";$funclist[2148]="preg_replace_callback";$funcdest[2148]="preg_replace_callback(mixed pattern, callback callback, mixed subject [, int limit])<&%>Perform a regular expression search and replace using a callback (mixed)";$funclist[2149]="preg_split";$funcdest[2149]="preg_split(string pattern, string subject [, int limit [, int flags]])<&%>Split string by a regular expression (array)";$funclist[2150]="prev";$funcdest[2150]="prev(array array)<&%>Rewind the internal array pointer (mixed)";$funclist[2151]="print";$funcdest[2151]="print(string arg)<&%>Output a string (void)";$funclist[2152]="print_r";$funcdest[2152]="print_r(mixed expression [, bool return])<&%>Prints human-readable information about a variable (bool)";$funclist[2153]="printer_abort";$funcdest[2153]="printer_abort(resource handle)<&%>Deletes the printer's spool file (void)";$funclist[2154]="printer_close";$funcdest[2154]="printer_close(resource handle)<&%>Close an open printer connection (void)";$funclist[2155]="printer_create_brush";$funcdest[2155]="printer_create_brush(int style, string color)<&%>Create a new brush (mixed)";$funclist[2156]="printer_create_dc";$funcdest[2156]="printer_create_dc(resource handle)<&%>Create a new device context (void)";$funclist[2157]="printer_create_font";$funcdest[2157]="printer_create_font(string face, int height, int width, int font_weight, bool italic, bool underline, bool strikeout, int orientaton)<&%>Create a new font (mixed)";$funclist[2158]="printer_create_pen";$funcdest[2158]="printer_create_pen(int style, int width, string color)<&%>Create a new pen (mixed)";$funclist[2159]="printer_delete_brush";$funcdest[2159]="printer_delete_brush(resource handle)<&%>Delete a brush (bool)";$funclist[2160]="printer_delete_dc";$funcdest[2160]="printer_delete_dc(resource handle)<&%>Delete a device context (bool)";$funclist[2161]="printer_delete_font";$funcdest[2161]="printer_delete_font(resource handle)<&%>Delete a font (bool)";$funclist[2162]="printer_delete_pen";$funcdest[2162]="printer_delete_pen(resource handle)<&%>Delete a pen (bool)";$funclist[2163]="printer_draw_bmp";$funcdest[2163]="printer_draw_bmp(resource handle, string filename, int x, int y)<&%>Draw a bmp (void)";$funclist[2164]="printer_draw_chord";$funcdest[2164]="printer_draw_chord(resource handle, int rec_x, int rec_y, int rec_x1, int rec_y1, int rad_x, int rad_y, int rad_x1, int rad_y1)<&%>Draw a chord (void)";$funclist[2165]="printer_draw_elipse";$funcdest[2165]="printer_draw_elipse(resource handle, int ul_x, int ul_y, int lr_x, int lr_y)<&%>Draw an ellipse (void)";$funclist[2166]="printer_draw_line";$funcdest[2166]="printer_draw_line(resource printer_handle, int from_x, int from_y, int to_x, int to_y)<&%>Draw a line (void)";$funclist[2167]="printer_draw_pie";$funcdest[2167]="printer_draw_pie(resource handle, int rec_x, int rec_y, int rec_x1, int rec_y1, int rad1_x, int rad1_y, int rad2_x, int rad2_y)<&%>Draw a pie (void)";$funclist[2168]="printer_draw_rectangle";$funcdest[2168]="printer_draw_rectangle(resource handle, int ul_x, int ul_y, int lr_x, int lr_y)<&%>Draw a rectangle (void)";$funclist[2169]="printer_draw_roundrect";$funcdest[2169]="printer_draw_roundrect(resource handle, int ul_x, int ul_y, int lr_x, int lr_y, int width, int height)<&%>Draw a rectangle with rounded corners (void)";$funclist[2170]="printer_draw_text";$funcdest[2170]="printer_draw_text(resource printer_handle, string text, int x, int y)<&%>Draw text (void)";$funclist[2171]="printer_end_doc";$funcdest[2171]="printer_end_doc(resource handle)<&%>Close document (bool)";$funclist[2172]="printer_end_page";$funcdest[2172]="printer_end_page(resource handle)<&%>Close active page (bool)";$funclist[2173]="printer_get_option";$funcdest[2173]="printer_get_option(resource handle, string option)<&%>Retrieve printer configuration data (mixed)";$funclist[2174]="printer_list";$funcdest[2174]="printer_list(int enumtype [, string name [, int level]])<&%>Return an array of printers attached to the server (array)";$funclist[2175]="printer_logical_fontheight";$funcdest[2175]="printer_logical_fontheight(resource handle, int height)<&%>Get logical font height (int)";$funclist[2176]="printer_open";$funcdest[2176]="printer_open([string devicename])<&%>Open connection to a printer (mixed)";$funclist[2177]="printer_select_brush";$funcdest[2177]="printer_select_brush(resource printer_handle, resource brush_handle)<&%>Select a brush (void)";$funclist[2178]="printer_select_font";$funcdest[2178]="printer_select_font(resource printer_handle, resource font_handle)<&%>Select a font (void)";$funclist[2179]="printer_select_pen";$funcdest[2179]="printer_select_pen(resource printer_handle, resource pen_handle)<&%>Select a pen (void)";$funclist[2180]="printer_set_option";$funcdest[2180]="printer_set_option(resource handle, int option, mixed value)<&%>Configure the printer connection (bool)";$funclist[2181]="printer_start_doc";$funcdest[2181]="printer_start_doc(resource handle [, string document])<&%>Start a new document (bool)";$funclist[2182]="printer_start_page";$funcdest[2182]="printer_start_page(resource handle)<&%>Start a new page (bool)";$funclist[2183]="printer_write";$funcdest[2183]="printer_write(resource handle, string content)<&%>Write data to the printer (bool)";$funclist[2184]="printf";$funcdest[2184]="printf(string format [, mixed args])<&%>Output a formatted string (void)";$funclist[2185]="proc_close";$funcdest[2185]="proc_close(resource process)<&%>Close a process opened by proc_open and return the exit code of that process. (int)";$funclist[2186]="proc_get_status";$funcdest[2186]="proc_get_status(resource process)<&%>Get information about a process opened by proc_open()<&%>(int)";$funclist[2187]="proc_open";$funcdest[2187]="proc_open(string cmd, array descriptorspec, array pipes)<&%>Execute a command and open file pointers for input/output (resource)";$funclist[2188]="pspell_add_to_personal";$funcdest[2188]="pspell_add_to_personal(int dictionary_link, string word)<&%>Add the word to a personal wordlist (int)";$funclist[2189]="pspell_add_to_session";$funcdest[2189]="pspell_add_to_session(int dictionary_link, string word)<&%>Add the word to the wordlist in the current session (int)";$funclist[2190]="pspell_check";$funcdest[2190]="pspell_check(int dictionary_link, string word)<&%>Check a word (bool)";$funclist[2191]="pspell_clear_session";$funcdest[2191]="pspell_clear_session(int dictionary_link)<&%>Clear the current session (int)";$funclist[2192]="pspell_config_create";$funcdest[2192]="pspell_config_create(string language [, string spelling [, string jargon [, string encoding]]])<&%>Create a config used to open a dictionary (int)";$funclist[2193]="pspell_config_ignore";$funcdest[2193]="pspell_config_ignore(int dictionary_link, int n)<&%>Ignore words less than N characters long (int)";$funclist[2194]="pspell_config_mode";$funcdest[2194]="pspell_config_mode(int dictionary_link, int mode)<&%>Change the mode number of suggestions returned (int)";$funclist[2195]="pspell_config_personal";$funcdest[2195]="pspell_config_personal(int dictionary_link, string file)<&%>Set a file that contains personal wordlist (int)";$funclist[2196]="pspell_config_repl";$funcdest[2196]="pspell_config_repl(int dictionary_link, string file)<&%>Set a file that contains replacement pairs (int)";$funclist[2197]="pspell_config_runtogether";$funcdest[2197]="pspell_config_runtogether(int dictionary_link, bool flag)<&%>Consider run-together words as valid compounds (int)";$funclist[2198]="pspell_config_save_repl";$funcdest[2198]="pspell_config_save_repl(int dictionary_link, bool flag)<&%>Determine whether to save a replacement pairs list along with the wordlist (int)";$funclist[2199]="pspell_new";$funcdest[2199]="pspell_new(string language [, string spelling [, string jargon [, string encoding [, int mode]]]])<&%>Load a new dictionary (int)";$funclist[2200]="pspell_new_config";$funcdest[2200]="pspell_new_config(int config)<&%>Load a new dictionary with settings based on a given config (int)";$funclist[2201]="pspell_new_personal";$funcdest[2201]="pspell_new_personal(string personal, string language [, string spelling [, string jargon [, string encoding [, int mode]]]])<&%>Load a new dictionary with personal wordlist (int)";$funclist[2202]="pspell_save_wordlist";$funcdest[2202]="pspell_save_wordlist(int dictionary_link)<&%>Save the personal wordlist to a file (int)";$funclist[2203]="pspell_store_replacement";$funcdest[2203]="pspell_store_replacement(int dictionary_link, string misspelled, string correct)<&%>Store a replacement pair for a word (int)";$funclist[2204]="pspell_suggest";$funcdest[2204]="pspell_suggest(int dictionary_link, string word)<&%>Suggest spellings of a word (array)";$funclist[2205]="putenv";$funcdest[2205]="putenv(string setting)<&%>Sets the value of an environment variable (void)";$funclist[2206]="qdom_error";$funcdest[2206]="qdom_error(void)<&%>Returns the error string from the last QDOM operation or FALSE if no errors occured (string)";$funclist[2207]="qdom_tree";$funcdest[2207]="qdom_tree(string )<&%>creates a tree of an xml string (object)";$funclist[2208]="quoted_printable_decode";$funcdest[2208]="quoted_printable_decode(string str)<&%>Convert a quoted-printable string to an 8 bit string (string)";$funclist[2209]="quotemeta";$funcdest[2209]="quotemeta(string str)<&%>Quote meta characters (string)";$funclist[2210]="rad2deg";$funcdest[2210]="rad2deg(float number)<&%>Converts the radian number to the equivalent number in degrees (float)";$funclist[2211]="rand";$funcdest[2211]="rand([int min, int max])<&%>Generate a random value (int)";$funclist[2212]="range";$funcdest[2212]="range(int low, int high [, int step])<&%>Create an array containing a range of elements (array)";$funclist[2213]="rawurldecode";$funcdest[2213]="rawurldecode(string str)<&%>Decode URL-encoded strings (string)";$funclist[2214]="rawurlencode";$funcdest[2214]="rawurlencode(string str)<&%>URL-encode according to RFC 1738 (string)";$funclist[2215]="read_exif_data";$funcdest[2215]="read_exif_data(?)<&%>Alias of exif_read_data()<&%>(?)";$funclist[2216]="readdir";$funcdest[2216]="readdir(resource dir_handle)<&%>read entry from directory handle (string)";$funclist[2217]="readfile";$funcdest[2217]="readfile(string filename [, bool use_include_path [, resource context]])<&%>Outputs a file (int)";$funclist[2218]="readgzfile";$funcdest[2218]="readgzfile(string filename [, int use_include_path])<&%>Output a gz-file (int)";$funclist[2219]="readline";$funcdest[2219]="readline([string prompt])<&%>Reads a line (string)";$funclist[2220]="readline_add_history";$funcdest[2220]="readline_add_history(string line)<&%>Adds a line to the history (void)";$funclist[2221]="readline_clear_history";$funcdest[2221]="readline_clear_history(void)<&%>Clears the history (bool)";$funclist[2222]="readline_completion_function";$funcdest[2222]="readline_completion_function(string line)<&%>Registers a completion function (bool)";$funclist[2223]="readline_info";$funcdest[2223]="readline_info([string varname [, string newvalue]])<&%>Gets/sets various internal readline variables (mixed)";$funclist[2224]="readline_list_history";$funcdest[2224]="readline_list_history(void)<&%>Lists the history (array)";$funclist[2225]="readline_read_history";$funcdest[2225]="readline_read_history(string filename)<&%>Reads the history (bool)";$funclist[2226]="readline_write_history";$funcdest[2226]="readline_write_history(string filename)<&%>Writes the history (bool)";$funclist[2227]="readlink";$funcdest[2227]="readlink(string path)<&%>Returns the target of a symbolic link (string)";$funclist[2228]="realpath";$funcdest[2228]="realpath(string path)<&%>Returns canonicalized absolute pathname (string)";$funclist[2229]="recode";$funcdest[2229]="recode(?)<&%>Alias for recode_string()<&%>(?)";$funclist[2230]="recode_file";$funcdest[2230]="recode_file(string request, resource input, resource output)<&%>Recode from file to file according to recode request (bool)";$funclist[2231]="recode_string";$funcdest[2231]="recode_string(string request, string string)<&%>Recode a string according to a recode request (string)";$funclist[2232]="register_shutdown_function";$funcdest[2232]="register_shutdown_function(callback function)<&%>Register a function for execution on shutdown (int)";$funclist[2233]="register_tick_function";$funcdest[2233]="register_tick_function(callback function [, mixed arg])<&%>Register a function for execution on each tick (void)";$funclist[2234]="rename";$funcdest[2234]="rename(string oldname, string newname)<&%>Renames a file (bool)";$funclist[2235]="reset";$funcdest[2235]="reset(array array)<&%>Set the internal pointer of an array to its first element (mixed)";$funclist[2236]="restore_error_handler";$funcdest[2236]="restore_error_handler(void)<&%>Restores the previous error handler function (void)";$funclist[2237]="rewind";$funcdest[2237]="rewind(resource handle)<&%>Rewind the position of a file pointer (int)";$funclist[2238]="rewinddir";$funcdest[2238]="rewinddir(resource dir_handle)<&%>rewind directory handle (void)";$funclist[2239]="rmdir";$funcdest[2239]="rmdir(string dirname)<&%>Removes directory (int)";$funclist[2240]="round";$funcdest[2240]="round(float val [, int precision])<&%>Rounds a float (float)";$funclist[2241]="rsort";$funcdest[2241]="rsort(array array [, int sort_flags])<&%>Sort an array in reverse order (void)";$funclist[2242]="rtrim";$funcdest[2242]="rtrim(string str [, string charlist])<&%>Strip whitespace from the end of a string (string)";$funclist[2243]="sem_acquire";$funcdest[2243]="sem_acquire(int sem_identifier)<&%>Acquire a semaphore (bool)";$funclist[2244]="sem_get";$funcdest[2244]="sem_get(int key [, int max_acquire [, int perm]])<&%>Get a semaphore id (int)";$funclist[2245]="sem_release";$funcdest[2245]="sem_release(int sem_identifier)<&%>Release a semaphore (bool)";$funclist[2246]="sem_remove";$funcdest[2246]="sem_remove(int sem_identifier)<&%>Remove a semaphore (bool)";$funclist[2247]="serialize";$funcdest[2247]="serialize(mixed value)<&%>Generates a storable representation of a value (string)";$funclist[2248]="sesam_affected_rows";$funcdest[2248]="sesam_affected_rows(string result_id)<&%>Get number of rows affected by an immediate query (int)";$funclist[2249]="sesam_commit";$funcdest[2249]="sesam_commit(void)<&%>Commit pending updates to the SESAM database (bool)";$funclist[2250]="sesam_connect";$funcdest[2250]="sesam_connect(string catalog, string schema, string user)<&%>Open SESAM database connection (bool)";$funclist[2251]="sesam_diagnostic";$funcdest[2251]="sesam_diagnostic(void)<&%>Return status information for last SESAM call (array)";$funclist[2252]="sesam_disconnect";$funcdest[2252]="sesam_disconnect(void)<&%>Detach from SESAM connection (bool)";$funclist[2253]="sesam_errormsg";$funcdest[2253]="sesam_errormsg(void)<&%>Returns error message of last SESAM call (string)";$funclist[2254]="sesam_execimm";$funcdest[2254]="sesam_execimm(string query)<&%>Execute an 'immediate' SQL-statement (string)";$funclist[2255]="sesam_fetch_array";$funcdest[2255]="sesam_fetch_array(string result_id [, int whence [, int offset]])<&%>Fetch one row as an associative array (array)";$funclist[2256]="sesam_fetch_result";$funcdest[2256]="sesam_fetch_result(string result_id [, int max_rows])<&%>Return all or part of a query result (mixed)";$funclist[2257]="sesam_fetch_row";$funcdest[2257]="sesam_fetch_row(string result_id [, int whence [, int offset]])<&%>Fetch one row as an array (array)";$funclist[2258]="sesam_field_array";$funcdest[2258]="sesam_field_array(string result_id)<&%>Return meta information about individual columns in a result (array)";$funclist[2259]="sesam_field_name";$funcdest[2259]="sesam_field_name(string result_id, int index)<&%>Return one column name of the result set (int)";$funclist[2260]="sesam_free_result";$funcdest[2260]="sesam_free_result(string result_id)<&%>Releases resources for the query (int)";$funclist[2261]="sesam_num_fields";$funcdest[2261]="sesam_num_fields(string result_id)<&%>Return the number of fields/columns in a result set (int)";$funclist[2262]="sesam_query";$funcdest[2262]="sesam_query(string query [, bool scrollable])<&%>Perform a SESAM SQL query and prepare the result (string)";$funclist[2263]="sesam_rollback";$funcdest[2263]="sesam_rollback(void)<&%>Discard any pending updates to the SESAM database (bool)";$funclist[2264]="sesam_seek_row";$funcdest[2264]="sesam_seek_row(string result_id, int whence [, int offset])<&%>Set scrollable cursor mode for subsequent fetches (bool)";$funclist[2265]="sesam_settransaction";$funcdest[2265]="sesam_settransaction(int isolation_level, int read_only)<&%>Set SESAM transaction parameters (bool)";$funclist[2266]="session_cache_expire";$funcdest[2266]="session_cache_expire([int new_cache_expire])<&%>Return current cache expire (int)";$funclist[2267]="session_cache_limiter";$funcdest[2267]="session_cache_limiter([string cache_limiter])<&%>Get and/or set the current cache limiter (string)";$funclist[2268]="session_decode";$funcdest[2268]="session_decode(string data)<&%>Decodes session data from a string (bool)";$funclist[2269]="session_destroy";$funcdest[2269]="session_destroy(void)<&%>Destroys all data registered to a session (bool)";$funclist[2270]="session_encode";$funcdest[2270]="session_encode(void)<&%>Encodes the current session data as a string (string)";$funclist[2271]="session_get_cookie_params";$funcdest[2271]="session_get_cookie_params(void)<&%>Get the session cookie parameters (array)";$funclist[2272]="session_id";$funcdest[2272]="session_id([string id])<&%>Get and/or set the current session id (string)";$funclist[2273]="session_is_registered";$funcdest[2273]="session_is_registered(string name)<&%>Find out whether a global variable is registered in a session (bool)";$funclist[2274]="session_module_name";$funcdest[2274]="session_module_name([string module])<&%>Get and/or set the current session module (string)";$funclist[2275]="session_name";$funcdest[2275]="session_name([string name])<&%>Get and/or set the current session name (string)";$funclist[2276]="session_readonly";$funcdest[2276]="session_readonly(void)<&%>Begin session - reinitializes frozen variables, but no writeback on request end (void)";$funclist[2277]="session_register";$funcdest[2277]="session_register(mixed name [, mixed ...])<&%>Register one or more global variables with the current session (bool)";$funclist[2278]="session_save_path";$funcdest[2278]="session_save_path([string path])<&%>Get and/or set the current session save path (string)";$funclist[2279]="session_set_cookie_params";$funcdest[2279]="session_set_cookie_params(int lifetime [, string path [, string domain [, bool secure]]])<&%>Set the session cookie parameters (void)";$funclist[2280]="session_set_save_handler";$funcdest[2280]="session_set_save_handler(string open, string close, string read, string write, string destroy, string gc)<&%>Sets user-level session storage functions (bool)";$funclist[2281]="session_start";$funcdest[2281]="session_start(void)<&%>Initialize session data (bool)";$funclist[2282]="session_unregister";$funcdest[2282]="session_unregister(string name)<&%>Unregister a global variable from the current session (bool)";$funclist[2283]="session_unset";$funcdest[2283]="session_unset(void)<&%>Free all session variables (void)";$funclist[2284]="session_write_close";$funcdest[2284]="session_write_close(void)<&%>Write session data and end session (void)";$funclist[2285]="set_error_handler";$funcdest[2285]="set_error_handler(callback error_handler)<&%>Sets a user-defined error handler function. (string)";$funclist[2286]="set_file_buffer";$funcdest[2286]="set_file_buffer(?)<&%>Alias of stream_set_write_buffer()<&%>(?)";$funclist[2287]="set_magic_quotes_runtime";$funcdest[2287]="set_magic_quotes_runtime(int new_setting)<&%>Sets the current active configuration setting of magic_quotes_runtime (bool)";$funclist[2288]="set_time_limit";$funcdest[2288]="set_time_limit(int seconds)<&%>Limits the maximum execution time (void)";$funclist[2289]="setcookie";$funcdest[2289]="setcookie(string name [, string value [, int expire [, string path [, string domain [, int secure]]]]])<&%>Send a cookie (bool)";$funclist[2290]="setlocale";$funcdest[2290]="setlocale(mixed category, string locale [, string ...])<&%>Set locale information (string)";$funclist[2291]="settype";$funcdest[2291]="settype(mixed var, string type)<&%>Set the type of a variable (bool)";$funclist[2292]="sha1";$funcdest[2292]="sha1(string str [, bool raw_output])<&%>Calculate the sha1 hash of a string (string)";$funclist[2293]="sha1_file";$funcdest[2293]="sha1_file(string filename [, bool raw_output])<&%>Calculate the sha1 hash of a file (string)";$funclist[2294]="shell_exec";$funcdest[2294]="shell_exec(string cmd)<&%>Execute command via shell and return complete output as string (string)";$funclist[2295]="shm_attach";$funcdest[2295]="shm_attach(int key [, int memsize [, int perm]])<&%>Creates or open a shared memory segment (int)";$funclist[2296]="shm_detach";$funcdest[2296]="shm_detach(int shm_identifier)<&%>Disconnects from shared memory segment (bool)";$funclist[2297]="shm_get_var";$funcdest[2297]="shm_get_var(int id, int variable_key)<&%>Returns a variable from shared memory (mixed)";$funclist[2298]="shm_put_var";$funcdest[2298]="shm_put_var(int shm_identifier, int variable_key, mixed variable)<&%>Inserts or updates a variable in shared memory (int)";$funclist[2299]="shm_remove";$funcdest[2299]="shm_remove(int shm_identifier)<&%>Removes shared memory from Unix systems (int)";$funclist[2300]="shm_remove_var";$funcdest[2300]="shm_remove_var(int id, int variable_key)<&%>Removes a variable from shared memory (int)";$funclist[2301]="shmop_close";$funcdest[2301]="shmop_close(int shmid)<&%>Close shared memory block (int)";$funclist[2302]="shmop_delete";$funcdest[2302]="shmop_delete(int shmid)<&%>Delete shared memory block (int)";$funclist[2303]="shmop_open";$funcdest[2303]="shmop_open(int key, string flags, int mode, int size)<&%>Create or open shared memory block (int)";$funclist[2304]="shmop_read";$funcdest[2304]="shmop_read(int shmid, int start, int count)<&%>Read data from shared memory block (string)";$funclist[2305]="shmop_size";$funcdest[2305]="shmop_size(int shmid)<&%>Get size of shared memory block (int)";$funclist[2306]="shmop_write";$funcdest[2306]="shmop_write(int shmid, string data, int offset)<&%>Write data into shared memory block (int)";$funclist[2307]="show_source";$funcdest[2307]="show_source(?)<&%>Alias of highlight_file()<&%>(?)";$funclist[2308]="shuffle";$funcdest[2308]="shuffle(array array)<&%>Shuffle an array (void)";$funclist[2309]="similar_text";$funcdest[2309]="similar_text(string first, string second [, float percent])<&%>Calculate the similarity between two strings (int)";$funclist[2310]="sin";$funcdest[2310]="sin(float arg)<&%>Sine (float)";$funclist[2311]="sinh";$funcdest[2311]="sinh(float arg)<&%>Hyperbolic sine (float)";$funclist[2312]="sizeof";$funcdest[2312]="sizeof(?)<&%>Alias of count()<&%>(?)";$funclist[2313]="sleep";$funcdest[2313]="sleep(int seconds)<&%>Delay execution (void)";$funclist[2314]="snmp_get_quick_print";$funcdest[2314]="snmp_get_quick_print(void)<&%>Fetch the current value of the UCD library's quick_print setting (bool)";$funclist[2315]="snmp_set_quick_print";$funcdest[2315]="snmp_set_quick_print(bool quick_print)<&%>Set the value of quick_print within the UCD SNMP library (void)";$funclist[2316]="snmpget";$funcdest[2316]="snmpget(string hostname, string community, string object_id [, int timeout [, int retries]])<&%>Fetch an SNMP object (string)";$funclist[2317]="snmprealwalk";$funcdest[2317]="snmprealwalk(string host, string community, string object_id [, int timeout [, int retries]])<&%>Return all objects including their respective object ID within the specified one (array)";$funclist[2318]="snmpset";$funcdest[2318]="snmpset(string hostname, string community, string object_id, string type, mixed value [, int timeout [, int retries]])<&%>Set an SNMP object (bool)";$funclist[2319]="snmpwalk";$funcdest[2319]="snmpwalk(string hostname, string community, string object_id [, int timeout [, int retries]])<&%>Fetch all the SNMP objects from an agent (array)";$funclist[2320]="snmpwalkoid";$funcdest[2320]="snmpwalkoid(string hostname, string community, string object_id [, int timeout [, int retries]])<&%>Query for a tree of information about a network entity (array)";$funclist[2321]="socket_accept";$funcdest[2321]="socket_accept(resource socket)<&%>Accepts a connection on a socket (resource)";$funclist[2322]="socket_bind";$funcdest[2322]="socket_bind(resource socket, string address [, int port])<&%>Binds a name to a socket (bool)";$funclist[2323]="socket_clear_error";$funcdest[2323]="socket_clear_error([resource socket])<&%>Clears the error on the socket or the last error code (void)";$funclist[2324]="socket_close";$funcdest[2324]="socket_close(resource socket)<&%>Closes a socket resource (void)";$funclist[2325]="socket_connect";$funcdest[2325]="socket_connect(resource socket, string address [, int port])<&%>Initiates a connection on a socket (bool)";$funclist[2326]="socket_create";$funcdest[2326]="socket_create(int domain, int type, int protocol)<&%>Create a socket (endpoint for communication)<&%>(resource)";$funclist[2327]="socket_create_listen";$funcdest[2327]="socket_create_listen(int port [, int backlog])<&%>Opens a socket on port to accept connections (resource)";$funclist[2328]="socket_create_pair";$funcdest[2328]="socket_create_pair(int domain, int type, int protocol, array &fd)<&%>Creates a pair of indistinguishable sockets and stores them in fds. (bool)";$funclist[2329]="socket_get_option";$funcdest[2329]="socket_get_option(resource socket, int level, int optname)<&%>Gets socket options for the socket (mixed)";$funclist[2330]="socket_get_status";$funcdest[2330]="socket_get_status(?)<&%>Alias of stream_get_meta_data()<&%>. (?)";$funclist[2331]="socket_getpeername";$funcdest[2331]="socket_getpeername(resource socket, string &addr [, int &port])<&%>Queries the remote side of the given socket which may either result in host/port or in a UNIX filesystem path, dependent on its type. (bool)";$funclist[2332]="socket_getsockname";$funcdest[2332]="socket_getsockname(resource socket, string &addr [, int &port])<&%>Queries the local side of the given socket which may either result in host/port or in a UNIX filesystem path, dependent on its type. (bool)";$funclist[2333]="socket_iovec_add";$funcdest[2333]="socket_iovec_add(resource iovec, int iov_len)<&%>Adds a new vector to the scatter/gather array (bool)";$funclist[2334]="socket_iovec_alloc";$funcdest[2334]="socket_iovec_alloc(int num_vectors [, int ])<&%>...])<&%>Builds a 'struct iovec' for use with sendmsg, recvmsg, writev, and readv (resource)";$funclist[2335]="socket_iovec_delete";$funcdest[2335]="socket_iovec_delete(resource iovec, int iov_pos)<&%>Deletes a vector from an array of vectors (bool)";$funclist[2336]="socket_iovec_fetch";$funcdest[2336]="socket_iovec_fetch(resource iovec, int iovec_position)<&%>Returns the data held in the iovec specified by iovec_id[iovec_position] (string)";$funclist[2337]="socket_iovec_free";$funcdest[2337]="socket_iovec_free(resource iovec)<&%>Frees the iovec specified by iovec_id (bool)";$funclist[2338]="socket_iovec_set";$funcdest[2338]="socket_iovec_set(resource iovec, int iovec_position, string new_val)<&%>Sets the data held in iovec_id[iovec_position] to new_val (bool)";$funclist[2339]="socket_last_error";$funcdest[2339]="socket_last_error([resource socket])<&%>Returns the last error on the socket (int)";$funclist[2340]="socket_listen";$funcdest[2340]="socket_listen(resource socket [, int backlog])<&%>Listens for a connection on a socket (bool)";$funclist[2341]="socket_read";$funcdest[2341]="socket_read(resource socket, int length [, int type])<&%>Reads a maximum of length bytes from a socket (string)";$funclist[2342]="socket_readv";$funcdest[2342]="socket_readv(resource socket, resource iovec_id)<&%>Reads from an fd, using the scatter-gather array defined by iovec_id (bool)";$funclist[2343]="socket_recv";$funcdest[2343]="socket_recv(resource socket, string &buf, int len, int flags)<&%>Receives data from a connected socket (int)";$funclist[2344]="socket_recvfrom";$funcdest[2344]="socket_recvfrom(resource socket, string &buf, int len, int flags, string &name [, int &port])<&%>Receives data from a socket, connected or not (int)";$funclist[2345]="socket_recvmsg";$funcdest[2345]="socket_recvmsg(resource socket, resource iovec, array &control, int &controllen, int &flags, string &addr [, int &port])<&%>Used to receive messages on a socket, whether connection-oriented or not (bool)";$funclist[2346]="socket_select";$funcdest[2346]="socket_select(resource &read, resource &write, resource &except, int tv_sec [, int tv_usec])<&%>Runs the select()<&%>system call on the given arrays of sockets with a timeout specified by tv_sec and tv_usec (int)";$funclist[2347]="socket_send";$funcdest[2347]="socket_send(resource socket, string buf, int len, int flags)<&%>Sends data to a connected socket (int)";$funclist[2348]="socket_sendmsg";$funcdest[2348]="socket_sendmsg(resource socket, resource iovec, int flags, string addr [, int port])<&%>Sends a message to a socket, regardless of whether it is connection-oriented or not (bool)";$funclist[2349]="socket_sendto";$funcdest[2349]="socket_sendto(resource socket, string buf, int len, int flags, string addr [, int port])<&%>Sends a message to a socket, whether it is connected or not (int)";$funclist[2350]="socket_set_blocking";$funcdest[2350]="socket_set_blocking(?)<&%>Alias for stream_set_blocking()<&%>(?)";$funclist[2351]="socket_set_nonblock";$funcdest[2351]="socket_set_nonblock(resource socket)<&%>Sets nonblocking mode for file descriptor fd (bool)";$funclist[2352]="socket_set_option";$funcdest[2352]="socket_set_option(resource socket, int level, int optname, mixed optval)<&%>Sets socket options for the socket (bool)";$funclist[2353]="socket_set_timeout";$funcdest[2353]="socket_set_timeout(?)<&%>Alias for stream_set_timeout()<&%>(?)";$funclist[2354]="socket_shutdown";$funcdest[2354]="socket_shutdown(resource socket [, int how])<&%>Shuts down a socket for receiving, sending, or both. (bool)";$funclist[2355]="socket_strerror";$funcdest[2355]="socket_strerror(int errno)<&%>Return a string describing a socket error (string)";$funclist[2356]="socket_write";$funcdest[2356]="socket_write(resource socket, string buffer [, int length])<&%>Write to a socket (int)";$funclist[2357]="socket_writev";$funcdest[2357]="socket_writev(resource socket, resource iovec_id)<&%>Writes to a file descriptor, fd, using the scatter-gather array defined by iovec_id (bool)";$funclist[2358]="sort";$funcdest[2358]="sort(array array [, int sort_flags])<&%>Sort an array (void)";$funclist[2359]="soundex";$funcdest[2359]="soundex(string str)<&%>Calculate the soundex key of a string (string)";$funclist[2360]="split";$funcdest[2360]="split(string pattern, string string [, int limit])<&%>split string into array by regular expression (array)";$funclist[2361]="spliti";$funcdest[2361]="spliti(string pattern, string string [, int limit])<&%>Split string into array by regular expression case insensitive (array)";$funclist[2362]="sprintf";$funcdest[2362]="sprintf(string format [, mixed args])<&%>Return a formatted string (string)";$funclist[2363]="sql_regcase";$funcdest[2363]="sql_regcase(string string)<&%>Make regular expression for case insensitive match (string)";$funclist[2364]="sqrt";$funcdest[2364]="sqrt(float arg)<&%>Square root (float)";$funclist[2365]="srand";$funcdest[2365]="srand(int seed)<&%>Seed the random number generator (void)";$funclist[2366]="sscanf";$funcdest[2366]="sscanf(string str, string format [, string var1])<&%>Parses input from a string according to a format (mixed)";$funclist[2367]="stat";$funcdest[2367]="stat(string filename)<&%>Gives information about a file (array)";$funclist[2368]="str_ireplace";$funcdest[2368]="str_ireplace(mixed search, mixed replace, mixed subject [, int &count])<&%>Case-insensitive version of str_replace()<&%>. (mixed)";$funclist[2369]="str_pad";$funcdest[2369]="str_pad(string input, int pad_length [, string pad_string [, int pad_type]])<&%>Pad a string to a certain length with another string (string)";$funclist[2370]="str_repeat";$funcdest[2370]="str_repeat(string input, int multiplier)<&%>Repeat a string (string)";$funclist[2371]="str_replace";$funcdest[2371]="str_replace(mixed search, mixed replace, mixed subject [, int &count])<&%>Replace all occurrences of the search string with the replacement string (mixed)";$funclist[2372]="str_rot13";$funcdest[2372]="str_rot13(string str)<&%>Perform the rot13 transform on a string (string)";$funclist[2373]="str_shuffle";$funcdest[2373]="str_shuffle(string str)<&%>Randomly shuffles a string (string)";$funclist[2374]="str_word_count";$funcdest[2374]="str_word_count(string string [, int format])<&%>Return information about words used in a string (mixed)";$funclist[2375]="strcasecmp";$funcdest[2375]="strcasecmp(string str1, string str2)<&%>Binary safe case-insensitive string comparison (int)";$funclist[2376]="strchr";$funcdest[2376]="strchr(?)<&%>Alias for strstr()<&%>(?)";$funclist[2377]="strcmp";$funcdest[2377]="strcmp(string str1, string str2)<&%>Binary safe string comparison (int)";$funclist[2378]="strcoll";$funcdest[2378]="strcoll(string str1, string str2)<&%>Locale based string comparison (int)";$funclist[2379]="strcspn";$funcdest[2379]="strcspn(string str1, string str2)<&%>Find length of initial segment not matching mask (int)";$funclist[2380]="stream_context_create";$funcdest[2380]="stream_context_create(array options)<&%>Create a streams context (resource)";$funclist[2381]="stream_context_get_options";$funcdest[2381]="stream_context_get_options(resource stream|context)<&%>Retrieve options for a stream/wrapper/context (bool)";$funclist[2382]="stream_context_set_option";$funcdest[2382]="stream_context_set_option(resource context|stream, string wrapper, string option, mixed value)<&%>Sets an option for a stream/wrapper/context (bool)";$funclist[2383]="stream_context_set_params";$funcdest[2383]="stream_context_set_params(resource stream|context, array params)<&%>Set parameters for a stream/wrapper/context (bool)";$funclist[2384]="stream_copy_to_stream";$funcdest[2384]="stream_copy_to_stream(resource|string source, resource|string dest [, int maxlength])<&%>Copies data from one stream to another (int)";$funclist[2385]="stream_filter_append";$funcdest[2385]="stream_filter_append(resource stream, string filtername [, int read_write [, string params]])<&%>Attach a filter to a stream. (bool)";$funclist[2386]="stream_filter_prepend";$funcdest[2386]="stream_filter_prepend(resource stream, string filtername [, int read_write [, string params]])<&%>Attach a filter to a stream. (bool)";$funclist[2387]="stream_get_filters";$funcdest[2387]="stream_get_filters(void)<&%>Retrieve list of registered filters (array)";$funclist[2388]="stream_get_line";$funcdest[2388]="stream_get_line(resource handle, int length, string ending)<&%>Gets line from stream resource up to a given delimiter (string)";$funclist[2389]="stream_get_meta_data";$funcdest[2389]="stream_get_meta_data(resource stream)<&%>Retrieves header/meta data from streams/file pointers (array)";$funclist[2390]="stream_get_transports";$funcdest[2390]="stream_get_transports(void)<&%>Retrieve list of registered socket transports (array)";$funclist[2391]="stream_get_wrappers";$funcdest[2391]="stream_get_wrappers(void)<&%>Retrieve list of registered streams (array)";$funclist[2392]="stream_register_filter";$funcdest[2392]="stream_register_filter(string filtername, string classname)<&%>Register a stream filter implemented as a PHP class derived from php_user_filter (bool)";$funclist[2393]="stream_register_wrapper";$funcdest[2393]="stream_register_wrapper(string protocol, string classname)<&%>Register a URL wrapper implemented as a PHP class (bool)";$funclist[2394]="stream_select";$funcdest[2394]="stream_select(resource &read, resource &write, resource &except, int tv_sec [, int tv_usec])<&%>Runs the equivalent of the select()<&%>system call on the given arrays of streams with a timeout specified by tv_sec and tv_usec (int)";$funclist[2395]="stream_set_blocking";$funcdest[2395]="stream_set_blocking(resource stream, int mode)<&%>Set blocking/non-blocking mode on a stream (bool)";$funclist[2396]="stream_set_timeout";$funcdest[2396]="stream_set_timeout(resource stream, int seconds, int microseconds)<&%>Set timeout period on a stream (bool)";$funclist[2397]="stream_set_write_buffer";$funcdest[2397]="stream_set_write_buffer(resource stream, int buffer)<&%>Sets file buffering on the given stream (int)";$funclist[2398]="stream_socket_accept";$funcdest[2398]="stream_socket_accept(resource server_socket [, int timeout [, string &peername]])<&%>Accept a connection on a socket created by stream_socket_server()<&%>(resource)";$funclist[2399]="stream_socket_client";$funcdest[2399]="stream_socket_client(string remote_socket [, int &errno [, string &errstr [, float timeout [, int flags [, resource context]]]]])<&%>Open Internet or Unix domain socket connection (resource)";$funclist[2400]="stream_socket_get_name";$funcdest[2400]="stream_socket_get_name(resource handle, boolean want_peer)<&%>Retrieve the name of the local or remote sockets (string)";$funclist[2401]="stream_socket_server";$funcdest[2401]="stream_socket_server(string local_socket [, int &errno [, string &errstr [, int flags [, resource context]]]])<&%>Create an Internet or Unix domain server socket (resource)";$funclist[2402]="strftime";$funcdest[2402]="strftime(string format [, int timestamp])<&%>Format a local time/date according to locale settings (string)";$funclist[2403]="strip_tags";$funcdest[2403]="strip_tags(string str [, string allowable_tags])<&%>Strip HTML and PHP tags from a string (string)";$funclist[2404]="stripcslashes";$funcdest[2404]="stripcslashes(string str)<&%>Un-quote string quoted with addcslashes()<&%>(string)";$funclist[2405]="stripos";$funcdest[2405]="stripos(string haystack, string needle [, int offset])<&%>Find position of first occurrence of a case-insensitive string (int)";$funclist[2406]="stripslashes";$funcdest[2406]="stripslashes(string str)<&%>Un-quote string quoted with addslashes()<&%>(string)";$funclist[2407]="stristr";$funcdest[2407]="stristr(string haystack, string needle)<&%>Case-insensitive strstr()<&%>(string)";$funclist[2408]="strlen";$funcdest[2408]="strlen(string str)<&%>Get string length (int)";$funclist[2409]="strnatcasecmp";$funcdest[2409]="strnatcasecmp(string str1, string str2)<&%>Case insensitive string comparisons using a 'natural order' algorithm (int)";$funclist[2410]="strnatcmp";$funcdest[2410]="strnatcmp(string str1, string str2)<&%>String comparisons using a 'natural order' algorithm (int)";$funclist[2411]="strncasecmp";$funcdest[2411]="strncasecmp(string str1, string str2, int len)<&%>Binary safe case-insensitive string comparison of the first n characters (int)";$funclist[2412]="strncmp";$funcdest[2412]="strncmp(string str1, string str2, int len)<&%>Binary safe string comparison of the first n characters (int)";$funclist[2413]="strpos";$funcdest[2413]="strpos(string haystack, string needle [, int offset])<&%>Find position of first occurrence of a string (int)";$funclist[2414]="strrchr";$funcdest[2414]="strrchr(string haystack, string needle)<&%>Find the last occurrence of a character in a string (string)";$funclist[2415]="strrev";$funcdest[2415]="strrev(string string)<&%>Reverse a string (string)";$funclist[2416]="strrpos";$funcdest[2416]="strrpos(string haystack, char needle)<&%>Find position of last occurrence of a char in a string (int)";$funclist[2417]="strspn";$funcdest[2417]="strspn(string str1, string str2)<&%>Find length of initial segment matching mask (int)";$funclist[2418]="strstr";$funcdest[2418]="strstr(string haystack, string needle)<&%>Find first occurrence of a string (string)";$funclist[2419]="strtok";$funcdest[2419]="strtok(string arg1, string arg2)<&%>Tokenize string (string)";$funclist[2420]="strtolower";$funcdest[2420]="strtolower(string str)<&%>Make a string lowercase (string)";$funclist[2421]="strtotime";$funcdest[2421]="strtotime(string time [, int now])<&%>Parse about any English textual datetime description into a UNIX timestamp (int)";$funclist[2422]="strtoupper";$funcdest[2422]="strtoupper(string string)<&%>Make a string uppercase (string)";$funclist[2423]="strtr";$funcdest[2423]="strtr(string str, string from, string to)<&%>Translate certain characters (string)";$funclist[2424]="strval";$funcdest[2424]="strval(mixed var)<&%>Get string value of a variable (string)";$funclist[2425]="substr";$funcdest[2425]="substr(string string, int start [, int length])<&%>Return part of a string (string)";$funclist[2426]="substr_count";$funcdest[2426]="substr_count(string haystack, string needle)<&%>Count the number of substring occurrences (int)";$funclist[2427]="substr_replace";$funcdest[2427]="substr_replace(string string, string replacement, int start [, int length])<&%>Replace text within a portion of a string (string)";$funclist[2428]="swf_actiongeturl";$funcdest[2428]="swf_actiongeturl(string url, string target)<&%>Get a URL from a Shockwave Flash movie (void)";$funclist[2429]="swf_actiongotoframe";$funcdest[2429]="swf_actiongotoframe(int framenumber)<&%>Play a frame and then stop (void)";$funclist[2430]="swf_actiongotolabel";$funcdest[2430]="swf_actiongotolabel(string label)<&%>Display a frame with the specified label (void)";$funclist[2431]="swf_actionnextframe";$funcdest[2431]="swf_actionnextframe(void)<&%>Go foward one frame (void)";$funclist[2432]="swf_actionplay";$funcdest[2432]="swf_actionplay(void)<&%>Start playing the flash movie from the current frame (void)";$funclist[2433]="swf_actionprevframe";$funcdest[2433]="swf_actionprevframe(void)<&%>Go backwards one frame (void)";$funclist[2434]="swf_actionsettarget";$funcdest[2434]="swf_actionsettarget(string target)<&%>Set the context for actions (void)";$funclist[2435]="swf_actionstop";$funcdest[2435]="swf_actionstop(void)<&%>Stop playing the flash movie at the current frame (void)";$funclist[2436]="swf_actiontogglequality";$funcdest[2436]="swf_actiontogglequality(void)<&%>Toggle between low and high quality (void)";$funclist[2437]="swf_actionwaitforframe";$funcdest[2437]="swf_actionwaitforframe(int framenumber, int skipcount)<&%>Skip actions if a frame has not been loaded (void)";$funclist[2438]="swf_addbuttonrecord";$funcdest[2438]="swf_addbuttonrecord(int states, int shapeid, int depth)<&%>Controls location, appearance and active area of the current button (void)";$funclist[2439]="swf_addcolor";$funcdest[2439]="swf_addcolor(float r, float g, float b, float a)<&%>Set the global add color to the rgba value specified (void)";$funclist[2440]="swf_closefile";$funcdest[2440]="swf_closefile([int return_file])<&%>Close the current Shockwave Flash file (void)";$funclist[2441]="swf_definebitmap";$funcdest[2441]="swf_definebitmap(int objid, string image_name)<&%>Define a bitmap (void)";$funclist[2442]="swf_definefont";$funcdest[2442]="swf_definefont(int fontid, string fontname)<&%>Defines a font (void)";$funclist[2443]="swf_defineline";$funcdest[2443]="swf_defineline(int objid, float x1, float y1, float x2, float y2, float width)<&%>Define a line (void)";$funclist[2444]="swf_definepoly";$funcdest[2444]="swf_definepoly(int objid, array coords, int npoints, float width)<&%>Define a polygon (void)";$funclist[2445]="swf_definerect";$funcdest[2445]="swf_definerect(int objid, float x1, float y1, float x2, float y2, float width)<&%>Define a rectangle (void)";$funclist[2446]="swf_definetext";$funcdest[2446]="swf_definetext(int objid, string str, int docenter)<&%>Define a text string (void)";$funclist[2447]="swf_endbutton";$funcdest[2447]="swf_endbutton(void)<&%>End the definition of the current button (void)";$funclist[2448]="swf_enddoaction";$funcdest[2448]="swf_enddoaction(void)<&%>End the current action (void)";$funclist[2449]="swf_endshape";$funcdest[2449]="swf_endshape(void)<&%>Completes the definition of the current shape (void)";$funclist[2450]="swf_endsymbol";$funcdest[2450]="swf_endsymbol(void)<&%>End the definition of a symbol (void)";$funclist[2451]="swf_fontsize";$funcdest[2451]="swf_fontsize(float size)<&%>Change the font size (void)";$funclist[2452]="swf_fontslant";$funcdest[2452]="swf_fontslant(float slant)<&%>Set the font slant (void)";$funclist[2453]="swf_fonttracking";$funcdest[2453]="swf_fonttracking(float tracking)<&%>Set the current font tracking (void)";$funclist[2454]="swf_getbitmapinfo";$funcdest[2454]="swf_getbitmapinfo(int bitmapid)<&%>Get information about a bitmap (array)";$funclist[2455]="swf_getfontinfo";$funcdest[2455]="swf_getfontinfo(void)<&%>The height in pixels of a capital A and a lowercase x (array)";$funclist[2456]="swf_getframe";$funcdest[2456]="swf_getframe(void)<&%>Get the frame number of the current frame (int)";$funclist[2457]="swf_labelframe";$funcdest[2457]="swf_labelframe(string name)<&%>Label the current frame (void)";$funclist[2458]="swf_lookat";$funcdest[2458]="swf_lookat(float view_x, float view_y, float view_z, float reference_x, float reference_y, float reference_z, float twist)<&%>Define a viewing transformation (void)";$funclist[2459]="swf_modifyobject";$funcdest[2459]="swf_modifyobject(int depth, int how)<&%>Modify an object (void)";$funclist[2460]="swf_mulcolor";$funcdest[2460]="swf_mulcolor(float r, float g, float b, float a)<&%>Sets the global multiply color to the rgba value specified (void)";$funclist[2461]="swf_nextid";$funcdest[2461]="swf_nextid(void)<&%>Returns the next free object id (int)";$funclist[2462]="swf_oncondition";$funcdest[2462]="swf_oncondition(int transition)<&%>Describe a transition used to trigger an action list (void)";$funclist[2463]="swf_openfile";$funcdest[2463]="swf_openfile(string filename, float width, float height, float framerate, float r, float g, float b)<&%>Open a new Shockwave Flash file (void)";$funclist[2464]="swf_ortho";$funcdest[2464]="swf_ortho(float xmin, float xmax, float ymin, float ymax, float zmin, float zmax)<&%>Defines an orthographic mapping of user coordinates onto the current viewport (void)";$funclist[2465]="swf_ortho2";$funcdest[2465]="swf_ortho2(float xmin, float xmax, float ymin, float ymax)<&%>Defines 2D orthographic mapping of user coordinates onto the current viewport (void)";$funclist[2466]="swf_perspective";$funcdest[2466]="swf_perspective(float fovy, float aspect, float near, float far)<&%>Define a perspective projection transformation (void)";$funclist[2467]="swf_placeobject";$funcdest[2467]="swf_placeobject(int objid, int depth)<&%>Place an object onto the screen (void)";$funclist[2468]="swf_polarview";$funcdest[2468]="swf_polarview(float dist, float azimuth, float incidence, float twist)<&%>Define the viewer's position with polar coordinates (void)";$funclist[2469]="swf_popmatrix";$funcdest[2469]="swf_popmatrix(void)<&%>Restore a previous transformation matrix (void)";$funclist[2470]="swf_posround";$funcdest[2470]="swf_posround(int round)<&%>Enables or Disables the rounding of the translation when objects are placed or moved (void)";$funclist[2471]="swf_pushmatrix";$funcdest[2471]="swf_pushmatrix(void)<&%>Push the current transformation matrix back unto the stack (void)";$funclist[2472]="swf_removeobject";$funcdest[2472]="swf_removeobject(int depth)<&%>Remove an object (void)";$funclist[2473]="swf_rotate";$funcdest[2473]="swf_rotate(float angle, string axis)<&%>Rotate the current transformation (void)";$funclist[2474]="swf_scale";$funcdest[2474]="swf_scale(float x, float y, float z)<&%>Scale the current transformation (void)";$funclist[2475]="swf_setfont";$funcdest[2475]="swf_setfont(int fontid)<&%>Change the current font (void)";$funclist[2476]="swf_setframe";$funcdest[2476]="swf_setframe(int framenumber)<&%>Switch to a specified frame (void)";$funclist[2477]="swf_shapearc";$funcdest[2477]="swf_shapearc(float x, float y, float r, float ang1, float ang2)<&%>Draw a circular arc (void)";$funclist[2478]="swf_shapecurveto";$funcdest[2478]="swf_shapecurveto(float x1, float y1, float x2, float y2)<&%>Draw a quadratic bezier curve between two points (void)";$funclist[2479]="swf_shapecurveto3";$funcdest[2479]="swf_shapecurveto3(float x1, float y1, float x2, float y2, float x3, float y3)<&%>Draw a cubic bezier curve (void)";$funclist[2480]="swf_shapefillbitmapclip";$funcdest[2480]="swf_shapefillbitmapclip(int bitmapid)<&%>Set current fill mode to clipped bitmap (void)";$funclist[2481]="swf_shapefillbitmaptile";$funcdest[2481]="swf_shapefillbitmaptile(int bitmapid)<&%>Set current fill mode to tiled bitmap (void)";$funclist[2482]="swf_shapefilloff";$funcdest[2482]="swf_shapefilloff(void)<&%>Turns off filling (void)";$funclist[2483]="swf_shapefillsolid";$funcdest[2483]="swf_shapefillsolid(float r, float g, float b, float a)<&%>Set the current fill style to the specified color (void)";$funclist[2484]="swf_shapelinesolid";$funcdest[2484]="swf_shapelinesolid(float r, float g, float b, float a, float width)<&%>Set the current line style (void)";$funclist[2485]="swf_shapelineto";$funcdest[2485]="swf_shapelineto(float x, float y)<&%>Draw a line (void)";$funclist[2486]="swf_shapemoveto";$funcdest[2486]="swf_shapemoveto(float x, float y)<&%>Move the current position (void)";$funclist[2487]="swf_showframe";$funcdest[2487]="swf_showframe(void)<&%>Display the current frame (void)";$funclist[2488]="swf_startbutton";$funcdest[2488]="swf_startbutton(int objid, int type)<&%>Start the definition of a button (void)";$funclist[2489]="swf_startdoaction";$funcdest[2489]="swf_startdoaction(void)<&%>Start a description of an action list for the current frame (void)";$funclist[2490]="swf_startshape";$funcdest[2490]="swf_startshape(int objid)<&%>Start a complex shape (void)";$funclist[2491]="swf_startsymbol";$funcdest[2491]="swf_startsymbol(int objid)<&%>Define a symbol (void)";$funclist[2492]="swf_textwidth";$funcdest[2492]="swf_textwidth(string str)<&%>Get the width of a string (float)";$funclist[2493]="swf_translate";$funcdest[2493]="swf_translate(float x, float y, float z)<&%>Translate the current transformations (void)";$funclist[2494]="swf_viewport";$funcdest[2494]="swf_viewport(float xmin, float xmax, float ymin, float ymax)<&%>Select an area for future drawing (void)";$funclist[2495]="swfbutton_keypress";$funcdest[2495]="swfbutton_keypress(string str)<&%>Returns the action flag for keyPress(char)<&%>(int)";$funclist[2496]="swffont->getwidth";$funcdest[2496]="swffont->getwidth(string string)<&%>Returns the string's width (int)";$funclist[2497]="swfmovie->remove";$funcdest[2497]="swfmovie->remove(resource instance)<&%>Removes the object instance from the display list. (void)";$funclist[2498]="swfsprite->add";$funcdest[2498]="swfsprite->add(resource object)<&%>Adds an object to a sprite (void)";$funclist[2499]="sybase_affected_rows";$funcdest[2499]="sybase_affected_rows([int link_identifier])<&%>get number of affected rows in last query (int)";$funclist[2500]="sybase_close";$funcdest[2500]="sybase_close([int link_identifier])<&%>close Sybase connection (bool)";$funclist[2501]="sybase_connect";$funcdest[2501]="sybase_connect(string servername, string username, string password [, string charset])<&%>open Sybase server connection (int)";$funclist[2502]="sybase_data_seek";$funcdest[2502]="sybase_data_seek(int result_identifier, int row_number)<&%>move internal row pointer (bool)";$funclist[2503]="sybase_deadlock_retry_count";$funcdest[2503]="sybase_deadlock_retry_count(int retry_count)<&%>set the deadlock retry count (void)";$funclist[2504]="sybase_fetch_array";$funcdest[2504]="sybase_fetch_array(int result)<&%>fetch row as array (array)";$funclist[2505]="sybase_fetch_assoc";$funcdest[2505]="sybase_fetch_assoc(resource result)<&%>fetch row as associative array (array)";$funclist[2506]="sybase_fetch_field";$funcdest[2506]="sybase_fetch_field(int result [, int field_offset])<&%>get field information (object)";$funclist[2507]="sybase_fetch_object";$funcdest[2507]="sybase_fetch_object(int result [, mixed object])<&%>fetch row as object (int)";$funclist[2508]="sybase_fetch_row";$funcdest[2508]="sybase_fetch_row(int result)<&%>get row as enumerated array (array)";$funclist[2509]="sybase_field_seek";$funcdest[2509]="sybase_field_seek(int result, int field_offset)<&%>set field offset (int)";$funclist[2510]="sybase_free_result";$funcdest[2510]="sybase_free_result(int result)<&%>free result memory (bool)";$funclist[2511]="sybase_get_last_message";$funcdest[2511]="sybase_get_last_message(void)<&%>Returns the last message from the server (string)";$funclist[2512]="sybase_min_client_severity";$funcdest[2512]="sybase_min_client_severity(int severity)<&%>Sets minimum client severity (void)";$funclist[2513]="sybase_min_error_severity";$funcdest[2513]="sybase_min_error_severity(int severity)<&%>Sets minimum error severity (void)";$funclist[2514]="sybase_min_message_severity";$funcdest[2514]="sybase_min_message_severity(int severity)<&%>Sets minimum message severity (void)";$funclist[2515]="sybase_min_server_severity";$funcdest[2515]="sybase_min_server_severity(int severity)<&%>Sets minimum server severity (void)";$funclist[2516]="sybase_num_fields";$funcdest[2516]="sybase_num_fields(int result)<&%>get number of fields in result (int)";$funclist[2517]="sybase_num_rows";$funcdest[2517]="sybase_num_rows(int result)<&%>Get number of rows in result (int)";$funclist[2518]="sybase_pconnect";$funcdest[2518]="sybase_pconnect(string servername, string username, string password [, string charset])<&%>open persistent Sybase connection (int)";$funclist[2519]="sybase_query";$funcdest[2519]="sybase_query(string query, int link_identifier)<&%>Send Sybase query (int)";$funclist[2520]="sybase_result";$funcdest[2520]="sybase_result(int result, int row, mixed field)<&%>get result data (string)";$funclist[2521]="sybase_select_db";$funcdest[2521]="sybase_select_db(string database_name, int link_identifier)<&%>select Sybase database (bool)";$funclist[2522]="sybase_set_message_handler";$funcdest[2522]="sybase_set_message_handler(callback handler)<&%>set handler called when a server message is raised (bool)";$funclist[2523]="sybase_unbuffered_query";$funcdest[2523]="sybase_unbuffered_query(string query, int link_identifier)<&%>send Sybase query and do not block (resource)";$funclist[2524]="symlink";$funcdest[2524]="symlink(string target, string link)<&%>Creates a symbolic link (int)";$funclist[2525]="syslog";$funcdest[2525]="syslog(int priority, string message)<&%>Generate a system log message (int)";$funclist[2526]="system";$funcdest[2526]="system(string command [, int return_var])<&%>Execute an external program and display output (string)";$funclist[2527]="tan";$funcdest[2527]="tan(float arg)<&%>Tangent (float)";$funclist[2528]="tanh";$funcdest[2528]="tanh(float arg)<&%>Hyperbolic tangent (float)";$funclist[2529]="tempnam";$funcdest[2529]="tempnam(string dir, string prefix)<&%>Create file with unique file name (string)";$funclist[2530]="textdomain";$funcdest[2530]="textdomain(string text_domain)<&%>Sets the default domain (string)";$funclist[2531]="time";$funcdest[2531]="time(void)<&%>Return current UNIX timestamp (int)";$funclist[2532]="tmpfile";$funcdest[2532]="tmpfile(void)<&%>Creates a temporary file (resource)";$funclist[2533]="token_get_all";$funcdest[2533]="token_get_all(string source)<&%>Split given source into PHP tokens (array)";$funclist[2534]="token_name";$funcdest[2534]="token_name(int token)<&%>Get the symbolic name of a given PHP token (string)";$funclist[2535]="touch";$funcdest[2535]="touch(string filename [, int time [, int atime]])<&%>Sets access and modification time of file (int)";$funclist[2536]="trigger_error";$funcdest[2536]="trigger_error(string error_msg [, int error_type])<&%>Generates a user-level error/warning/notice message (void)";$funclist[2537]="trim";$funcdest[2537]="trim(string str [, string charlist])<&%>Strip whitespace from the beginning and end of a string (string)";$funclist[2538]="uasort";$funcdest[2538]="uasort(array array, callback cmp_function)<&%>Sort an array with a user-defined comparison function and maintain index association (void)";$funclist[2539]="ucfirst";$funcdest[2539]="ucfirst(string str)<&%>Make a string's first character uppercase (string)";$funclist[2540]="ucwords";$funcdest[2540]="ucwords(string str)<&%>Uppercase the first character of each word in a string (string)";$funclist[2541]="udm_add_search_limit";$funcdest[2541]="udm_add_search_limit(int agent, int var, string val)<&%>Add various search limits (int)";$funclist[2542]="udm_alloc_agent";$funcdest[2542]="udm_alloc_agent(string dbaddr [, string dbmode])<&%>Allocate mnoGoSearch session (int)";$funclist[2543]="udm_api_version";$funcdest[2543]="udm_api_version(void)<&%>Get mnoGoSearch API version. (int)";$funclist[2544]="udm_cat_list";$funcdest[2544]="udm_cat_list(int agent, string category)<&%>Get all the categories on the same level with the current one. (array)";$funclist[2545]="udm_cat_path";$funcdest[2545]="udm_cat_path(int agent, string category)<&%>Get the path to the current category. (array)";$funclist[2546]="udm_check_charset";$funcdest[2546]="udm_check_charset(int agent, string charset)<&%>Check if the given charset is known to mnogosearch (int)";$funclist[2547]="udm_check_stored";$funcdest[2547]="udm_check_stored(int agent, int link, string doc_id)<&%>Check connection to stored (int)";$funclist[2548]="udm_clear_search_limits";$funcdest[2548]="udm_clear_search_limits(int agent)<&%>Clear all mnoGoSearch search restrictions (int)";$funclist[2549]="udm_close_stored";$funcdest[2549]="udm_close_stored(int agent, int link)<&%>Close connection to stored (int)";$funclist[2550]="udm_crc32";$funcdest[2550]="udm_crc32(int agent, string str)<&%>Return CRC32 checksum of gived string (int)";$funclist[2551]="udm_errno";$funcdest[2551]="udm_errno(int agent)<&%>Get mnoGoSearch error number (int)";$funclist[2552]="udm_error";$funcdest[2552]="udm_error(int agent)<&%>Get mnoGoSearch error message (string)";$funclist[2553]="udm_find";$funcdest[2553]="udm_find(int agent, string query)<&%>Perform search (int)";$funclist[2554]="udm_free_agent";$funcdest[2554]="udm_free_agent(int agent)<&%>Free mnoGoSearch session (int)";$funclist[2555]="udm_free_ispell_data";$funcdest[2555]="udm_free_ispell_data(int agent)<&%>Free memory allocated for ispell data (int)";$funclist[2556]="udm_free_res";$funcdest[2556]="udm_free_res(int res)<&%>Free mnoGoSearch result (int)";$funclist[2557]="udm_get_doc_count";$funcdest[2557]="udm_get_doc_count(int agent)<&%>Get total number of documents in database. (int)";$funclist[2558]="udm_get_res_field";$funcdest[2558]="udm_get_res_field(int res, int row, int field)<&%>Fetch mnoGoSearch result field (string)";$funclist[2559]="udm_get_res_param";$funcdest[2559]="udm_get_res_param(int res, int param)<&%>Get mnoGoSearch result parameters (string)";$funclist[2560]="udm_load_ispell_data";$funcdest[2560]="udm_load_ispell_data(int agent, int var, string val1, string val2, int flag)<&%>Load ispell data (int)";$funclist[2561]="udm_open_stored";$funcdest[2561]="udm_open_stored(int agent, string storedaddr)<&%>Open connection to stored (int)";$funclist[2562]="udm_set_agent_param";$funcdest[2562]="udm_set_agent_param(int agent, int var, string val)<&%>Set mnoGoSearch agent session parameters (int)";$funclist[2563]="uksort";$funcdest[2563]="uksort(array array, callback cmp_function)<&%>Sort an array by keys using a user-defined comparison function (void)";$funclist[2564]="umask";$funcdest[2564]="umask([int mask])<&%>Changes the current umask (int)";$funclist[2565]="uniqid";$funcdest[2565]="uniqid(string prefix [, bool lcg])<&%>Generate a unique ID (string)";$funclist[2566]="unixtojd";$funcdest[2566]="unixtojd([int timestamp])<&%>Convert UNIX timestamp to Julian Day (int)";$funclist[2567]="unlink";$funcdest[2567]="unlink(string filename)<&%>Deletes a file (int)";$funclist[2568]="unpack";$funcdest[2568]="unpack(string format, string data)<&%>Unpack data from binary string (array)";$funclist[2569]="unregister_tick_function";$funcdest[2569]="unregister_tick_function(string function_name)<&%>De-register a function for execution on each tick (void)";$funclist[2570]="unserialize";$funcdest[2570]="unserialize(string str [, string callback])<&%>Creates a PHP value from a stored representation (mixed)";$funclist[2571]="unset";$funcdest[2571]="unset(mixed var [, mixed var [, ...]])<&%>Unset a given variable (void)";$funclist[2572]="urldecode";$funcdest[2572]="urldecode(string str)<&%>Decodes URL-encoded string (string)";$funclist[2573]="urlencode";$funcdest[2573]="urlencode(string str)<&%>URL-encodes string (string)";$funclist[2574]="user_error";$funcdest[2574]="user_error(?)<&%>Alias of trigger_error()<&%>(?)";$funclist[2575]="usleep";$funcdest[2575]="usleep(int micro_seconds)<&%>Delay execution in microseconds (void)";$funclist[2576]="usort";$funcdest[2576]="usort(array array, callback cmp_function)<&%>Sort an array by values using a user-defined comparison function (void)";$funclist[2577]="utf8_decode";$funcdest[2577]="utf8_decode(string data)<&%>Converts a string with ISO-8859-1 characters encoded with UTF-8 to single-byte ISO-8859-1. (string)";$funclist[2578]="utf8_encode";$funcdest[2578]="utf8_encode(string data)<&%>encodes an ISO-8859-1 string to UTF-8 (string)";$funclist[2579]="var_dump";$funcdest[2579]="var_dump(mixed expression [, mixed expression [, ...]])<&%>Dumps information about a variable (void)";$funclist[2580]="var_export";$funcdest[2580]="var_export(mixed expression [, bool return])<&%>Outputs or returns a string representation of a variable (mixed)";$funclist[2581]="version_compare";$funcdest[2581]="version_compare(string version1, string version2 [, string operator])<&%>Compares two 'PHP-standardized' version number strings (int)";$funclist[2582]="virtual";$funcdest[2582]="virtual(string filename)<&%>Perform an Apache sub-request (int)";$funclist[2583]="vpopmail_add_alias_domain";$funcdest[2583]="vpopmail_add_alias_domain(string domain, string aliasdomain)<&%>Add an alias for a virtual domain (bool)";$funclist[2584]="vpopmail_add_alias_domain_ex";$funcdest[2584]="vpopmail_add_alias_domain_ex(string olddomain, string newdomain)<&%>Add alias to an existing virtual domain (bool)";$funclist[2585]="vpopmail_add_domain";$funcdest[2585]="vpopmail_add_domain(string domain, string dir, int uid, int gid)<&%>Add a new virtual domain (bool)";$funclist[2586]="vpopmail_add_domain_ex";$funcdest[2586]="vpopmail_add_domain_ex(string domain, string passwd [, string quota [, string bounce [, bool apop]]])<&%>Add a new virtual domain (bool)";$funclist[2587]="vpopmail_add_user";$funcdest[2587]="vpopmail_add_user(string user, string domain, string password [, string gecos [, bool apop]])<&%>Add a new user to the specified virtual domain (bool)";$funclist[2588]="vpopmail_alias_add";$funcdest[2588]="vpopmail_alias_add(string user, string domain, string alias)<&%>insert a virtual alias (bool)";$funclist[2589]="vpopmail_alias_del";$funcdest[2589]="vpopmail_alias_del(string user, string domain)<&%>deletes all virtual aliases of a user (bool)";$funclist[2590]="vpopmail_alias_del_domain";$funcdest[2590]="vpopmail_alias_del_domain(string domain)<&%>deletes all virtual aliases of a domain (bool)";$funclist[2591]="vpopmail_alias_get";$funcdest[2591]="vpopmail_alias_get(string alias, string domain)<&%>get all lines of an alias for a domain (array)";$funclist[2592]="vpopmail_alias_get_all";$funcdest[2592]="vpopmail_alias_get_all(string domain)<&%>get all lines of an alias for a domain (array)";$funclist[2593]="vpopmail_auth_user";$funcdest[2593]="vpopmail_auth_user(string user, string domain, string password [, string apop])<&%>Attempt to validate a username/domain/password. Returns true/false (bool)";$funclist[2594]="vpopmail_del_domain";$funcdest[2594]="vpopmail_del_domain(string domain)<&%>Delete a virtual domain (bool)";$funclist[2595]="vpopmail_del_domain_ex";$funcdest[2595]="vpopmail_del_domain_ex(string domain)<&%>Delete a virtual domain (bool)";$funclist[2596]="vpopmail_del_user";$funcdest[2596]="vpopmail_del_user(string user, string domain)<&%>Delete a user from a virtual domain (bool)";$funclist[2597]="vpopmail_error";$funcdest[2597]="vpopmail_error(void)<&%>Get text message for last vpopmail error. Returns string (string)";$funclist[2598]="vpopmail_passwd";$funcdest[2598]="vpopmail_passwd(string user, string domain, string password)<&%>Change a virtual user's password (bool)";$funclist[2599]="vpopmail_set_user_quota";$funcdest[2599]="vpopmail_set_user_quota(string user, string domain, string quota)<&%>Sets a virtual user's quota (bool)";$funclist[2600]="vprintf";$funcdest[2600]="vprintf(string format, array args)<&%>Output a formatted string (void)";$funclist[2601]="vsprintf";$funcdest[2601]="vsprintf(string format, array args)<&%>Return a formatted string (string)";$funclist[2602]="w32api_deftype";$funcdest[2602]="w32api_deftype(string typename, string member1_type, string member1_name [, string ... [, string ...]])<&%>Defines a type for use with other w32api_functions (bool)";$funclist[2603]="w32api_init_dtype";$funcdest[2603]="w32api_init_dtype(string typename, mixed value [, mixed ...])<&%>Creates an instance of the data type typename and fills it with the values passed (resource)";$funclist[2604]="w32api_invoke_function";$funcdest[2604]="w32api_invoke_function(string funcname, mixed argument [, mixed ...])<&%>Invokes function funcname with the arguments passed after the function name (mixed)";$funclist[2605]="w32api_register_function";$funcdest[2605]="w32api_register_function(string library, string function_name, string return_type)<&%>Registers function function_name from library with PHP (bool)";$funclist[2606]="w32api_set_call_method";$funcdest[2606]="w32api_set_call_method(int method)<&%>Sets the calling method used (void)";$funclist[2607]="wddx_add_vars";$funcdest[2607]="wddx_add_vars(int packet_id, mixed name_var [, mixed ...])<&%>Add variables to a WDDX packet with the specified ID (bool)";$funclist[2608]="wddx_deserialize";$funcdest[2608]="wddx_deserialize(string packet)<&%>Deserializes a WDDX packet (mixed)";$funclist[2609]="wddx_packet_end";$funcdest[2609]="wddx_packet_end(int packet_id)<&%>Ends a WDDX packet with the specified ID (string)";$funclist[2610]="wddx_packet_start";$funcdest[2610]="wddx_packet_start([string comment])<&%>Starts a new WDDX packet with structure inside it (int)";$funclist[2611]="wddx_serialize_value";$funcdest[2611]="wddx_serialize_value(mixed var [, string comment])<&%>Serialize a single value into a WDDX packet (string)";$funclist[2612]="wddx_serialize_vars";$funcdest[2612]="wddx_serialize_vars(mixed var_name [, mixed ...])<&%>Serialize variables into a WDDX packet (string)";$funclist[2613]="wordwrap";$funcdest[2613]="wordwrap(string str [, int width [, string break [, boolean cut]]])<&%>Wraps a string to a given number of characters using a string break character. (string)";$funclist[2614]="xml_error_string";$funcdest[2614]="xml_error_string(int code)<&%>get XML parser error string (string)";$funclist[2615]="xml_get_current_byte_index";$funcdest[2615]="xml_get_current_byte_index(resource parser)<&%>get current byte index for an XML parser (int)";$funclist[2616]="xml_get_current_column_number";$funcdest[2616]="xml_get_current_column_number(resource parser)<&%>Get current column number for an XML parser (int)";$funclist[2617]="xml_get_current_line_number";$funcdest[2617]="xml_get_current_line_number(resource parser)<&%>get current line number for an XML parser (int)";$funclist[2618]="xml_get_error_code";$funcdest[2618]="xml_get_error_code(resource parser)<&%>get XML parser error code (int)";$funclist[2619]="xml_parse";$funcdest[2619]="xml_parse(resource parser, string data [, bool is_final])<&%>start parsing an XML document (bool)";$funclist[2620]="xml_parse_into_struct";$funcdest[2620]="xml_parse_into_struct(resource parser, string data, array &values [, array &index])<&%>Parse XML data into an array structure (int)";$funclist[2621]="xml_parser_create";$funcdest[2621]="xml_parser_create([string encoding])<&%>create an XML parser (resource)";$funclist[2622]="xml_parser_create_ns";$funcdest[2622]="xml_parser_create_ns([string encoding [, string separator]])<&%>Create an XML parser (resource)";$funclist[2623]="xml_parser_free";$funcdest[2623]="xml_parser_free(resource parser)<&%>Free an XML parser (bool)";$funclist[2624]="xml_parser_get_option";$funcdest[2624]="xml_parser_get_option(resource parser, int option)<&%>get options from an XML parser (mixed)";$funclist[2625]="xml_parser_set_option";$funcdest[2625]="xml_parser_set_option(resource parser, int option, mixed value)<&%>set options in an XML parser (bool)";$funclist[2626]="xml_set_character_data_handler";$funcdest[2626]="xml_set_character_data_handler(resource parser, callback handler)<&%>set up character data handler (bool)";$funclist[2627]="xml_set_default_handler";$funcdest[2627]="xml_set_default_handler(resource parser, callback handler)<&%>set up default handler (bool)";$funclist[2628]="xml_set_element_handler";$funcdest[2628]="xml_set_element_handler(resource parser, callback start_element_handler, callback end_element_handler)<&%>set up start and end element handlers (bool)";$funclist[2629]="xml_set_end_namespace_decl_handler";$funcdest[2629]="xml_set_end_namespace_decl_handler(resource pind, callback handler)<&%>Set up character data handler (bool)";$funclist[2630]="xml_set_external_entity_ref_handler";$funcdest[2630]="xml_set_external_entity_ref_handler(resource parser, callback handler)<&%>set up external entity reference handler (bool)";$funclist[2631]="xml_set_notation_decl_handler";$funcdest[2631]="xml_set_notation_decl_handler(resource parser, callback handler)<&%>set up notation declaration handler (bool)";$funclist[2632]="xml_set_object";$funcdest[2632]="xml_set_object(resource parser, object object)<&%>Use XML Parser within an object (void)";$funclist[2633]="xml_set_processing_instruction_handler";$funcdest[2633]="xml_set_processing_instruction_handler(resource parser, callback handler)<&%>Set up processing instruction (PI)<&%>handler (bool)";$funclist[2634]="xml_set_start_namespace_decl_handler";$funcdest[2634]="xml_set_start_namespace_decl_handler(resource pind, callback hdl)<&%>Set up character data handler (bool)";$funclist[2635]="xml_set_unparsed_entity_decl_handler";$funcdest[2635]="xml_set_unparsed_entity_decl_handler(resource parser, callback handler)<&%>Set up unparsed entity declaration handler (bool)";$funclist[2636]="xmlrpc_decode";$funcdest[2636]="xmlrpc_decode(string xml [, string encoding])<&%>Decodes XML into native PHP types (array)";$funclist[2637]="xmlrpc_decode_request";$funcdest[2637]="xmlrpc_decode_request(string xml, string method [, string encoding])<&%>Decodes XML into native PHP types (array)";$funclist[2638]="xmlrpc_encode";$funcdest[2638]="xmlrpc_encode(mixed value)<&%>Generates XML for a PHP value (string)";$funclist[2639]="xmlrpc_encode_request";$funcdest[2639]="xmlrpc_encode_request(string method, mixed params)<&%>Generates XML for a method request (string)";$funclist[2640]="xmlrpc_get_type";$funcdest[2640]="xmlrpc_get_type(mixed value)<&%>Gets xmlrpc type for a PHP value. Especially useful for base64 and datetime strings (string)";$funclist[2641]="xmlrpc_parse_method_descriptions";$funcdest[2641]="xmlrpc_parse_method_descriptions(string xml)<&%>Decodes XML into a list of method descriptions (array)";$funclist[2642]="xmlrpc_server_add_introspection_data";$funcdest[2642]="xmlrpc_server_add_introspection_data(resource server, array desc)<&%>Adds introspection documentation (int)";$funclist[2643]="xmlrpc_server_call_method";$funcdest[2643]="xmlrpc_server_call_method(resource server, string xml, mixed user_data [, array output_options])<&%>Parses XML requests and call methods (mixed)";$funclist[2644]="xmlrpc_server_create";$funcdest[2644]="xmlrpc_server_create(void)<&%>Creates an xmlrpc server (resource)";$funclist[2645]="xmlrpc_server_destroy";$funcdest[2645]="xmlrpc_server_destroy(resource server)<&%>Destroys server resources (void)";$funclist[2646]="xmlrpc_server_register_introspection_callback";$funcdest[2646]="xmlrpc_server_register_introspection_callback(resource server, string function)<&%>Register a PHP function to generate documentation (bool)";$funclist[2647]="xmlrpc_server_register_method";$funcdest[2647]="xmlrpc_server_register_method(resource server, string method_name, string function)<&%>Register a PHP function to resource method matching method_name (bool)";$funclist[2648]="xmlrpc_set_type";$funcdest[2648]="xmlrpc_set_type(string value, string type)<&%>Sets xmlrpc type, base64 or datetime, for a PHP string value (bool)";$funclist[2649]="xpath_eval";$funcdest[2649]="xpath_eval(object xpath context, string xpath expression [, object contextnode])<&%>Evaluates the XPath Location Path in the given string (array)";$funclist[2650]="xpath_eval_expression";$funcdest[2650]="xpath_eval_expression(object xpath_context)<&%>Evaluates the XPath Location Path in the given string (array)";$funclist[2651]="xpath_new_context";$funcdest[2651]="xpath_new_context(object dom document)<&%>Creates new xpath context (object)";$funclist[2652]="xptr_eval";$funcdest[2652]="xptr_eval([object xpath_context, string eval_str])<&%>Evaluate the XPtr Location Path in the given string (int)";$funclist[2653]="xptr_new_context";$funcdest[2653]="xptr_new_context([object doc_handle])<&%>Create new XPath Context (string)";$funclist[2654]="xslt_create";$funcdest[2654]="xslt_create(void)<&%>Create a new XSLT processor (resource)";$funclist[2655]="xslt_errno";$funcdest[2655]="xslt_errno(resource xh)<&%>Return a error number (int)";$funclist[2656]="xslt_error";$funcdest[2656]="xslt_error(resource xh)<&%>Return a error string (mixed)";$funclist[2657]="xslt_free";$funcdest[2657]="xslt_free(resource xh)<&%>Free XSLT processor (void)";$funclist[2658]="xslt_process";$funcdest[2658]="xslt_process(resource xh, string xmlcontainer, string xslcontainer [, string resultcontainer [, array arguments [, array parameters]]])<&%>Perform an XSLT transformation (mixed)";$funclist[2659]="xslt_set_base";$funcdest[2659]="xslt_set_base(resource xh, string uri)<&%>Set the base URI for all XSLT transformations (void)";$funclist[2660]="xslt_set_encoding";$funcdest[2660]="xslt_set_encoding(resource xh, string encoding)<&%>Set the encoding for the parsing of XML documents (void)";$funclist[2661]="xslt_set_error_handler";$funcdest[2661]="xslt_set_error_handler(resource xh, mixed handler)<&%>Set an error handler for a XSLT processor (void)";$funclist[2662]="xslt_set_log";$funcdest[2662]="xslt_set_log(resource xh, mixed log)<&%>Set the log file to write log messages to (void)";$funclist[2663]="xslt_set_sax_handler";$funcdest[2663]="xslt_set_sax_handler(resource xh, array handlers)<&%>Set SAX handlers for a XSLT processor (void)";$funclist[2664]="xslt_set_sax_handlers";$funcdest[2664]="xslt_set_sax_handlers(resource processor, array handlers)<&%>Set the SAX handlers to be called when the XML document gets processed (void)";$funclist[2665]="xslt_set_scheme_handler";$funcdest[2665]="xslt_set_scheme_handler(resource xh, array handlers)<&%>Set Scheme handlers for a XSLT processor (void)";$funclist[2666]="xslt_set_scheme_handlers";$funcdest[2666]="xslt_set_scheme_handlers(resource processor, array handlers)<&%>Set the scheme handlers for the XSLT processor (void)";$funclist[2667]="yaz_addinfo";$funcdest[2667]="yaz_addinfo(resource id)<&%>Returns additional error information (string)";$funclist[2668]="yaz_ccl_conf";$funcdest[2668]="yaz_ccl_conf(resource id, array config)<&%>Configure CCL parser (int)";$funclist[2669]="yaz_ccl_parse";$funcdest[2669]="yaz_ccl_parse(resource id, string query, array & result)<&%>Invoke CCL Parser (int)";$funclist[2670]="yaz_close";$funcdest[2670]="yaz_close(resource id)<&%>Close YAZ connection (int)";$funclist[2671]="yaz_connect";$funcdest[2671]="yaz_connect(string zurl [, mixed options])<&%>Prepares for a connection to a Z39.50 target (server)<&%>. (resource)";$funclist[2672]="yaz_database";$funcdest[2672]="yaz_database(resource id, string databases)<&%>Specifies the databases within a session (int)";$funclist[2673]="yaz_element";$funcdest[2673]="yaz_element(resource id, string elementset)<&%>Specifies Element-Set Name for retrieval (int)";$funclist[2674]="yaz_errno";$funcdest[2674]="yaz_errno(resource id)<&%>Returns error number (int)";$funclist[2675]="yaz_error";$funcdest[2675]="yaz_error(resource id)<&%>Returns error description (string)";$funclist[2676]="yaz_get_option";$funcdest[2676]="yaz_get_option(resource id, string name)<&%>Returns value of option for connection (string)";$funclist[2677]="yaz_hits";$funcdest[2677]="yaz_hits(resource id)<&%>Returns number of hits for last search (int)";$funclist[2678]="yaz_itemorder";$funcdest[2678]="yaz_itemorder(resource id, array args)<&%>Prepares for Z39.50 Item Order with an ILL-Request package (int)";$funclist[2679]="yaz_present";$funcdest[2679]="yaz_present(resource id)<&%>Prepares for retrieval (Z39.50 present)<&%>. (int)";$funclist[2680]="yaz_range";$funcdest[2680]="yaz_range(resource id, int start, int number)<&%>Specifies the maximum number of records to retrieve (int)";$funclist[2681]="yaz_record";$funcdest[2681]="yaz_record(resource id, int pos, string type)<&%>Returns a record (string)";$funclist[2682]="yaz_scan";$funcdest[2682]="yaz_scan(resource id, string type, string startterm [, array flags])<&%>Prepares for a scan (int)";$funclist[2683]="yaz_scan_result";$funcdest[2683]="yaz_scan_result(resource id [, array & result])<&%>Returns Scan Response result (array)";$funclist[2684]="yaz_schema";$funcdest[2684]="yaz_schema(resource id, string schema)<&%>Specifies schema for retrieval. (int)";$funclist[2685]="yaz_search";$funcdest[2685]="yaz_search(resource id, string type, string query)<&%>Prepares for a search (int)";$funclist[2686]="yaz_set_option";$funcdest[2686]="yaz_set_option(resource id, string name, string value)<&%>Sets one or more options for connection (string)";$funclist[2687]="yaz_sort";$funcdest[2687]="yaz_sort(resource id, string criteria)<&%>Sets sorting criteria (int)";$funclist[2688]="yaz_syntax";$funcdest[2688]="yaz_syntax(resource id, string syntax)<&%>Specifies the preferred record syntax for retrieval. (int)";$funclist[2689]="yaz_wait";$funcdest[2689]="yaz_wait([array options])<&%>Wait for Z39.50 requests to complete (int)";$funclist[2690]="yp_all";$funcdest[2690]="yp_all(string domain, string map, string callback)<&%>Traverse the map and call a function on each entry (void)";$funclist[2691]="yp_cat";$funcdest[2691]="yp_cat(string domain, string map)<&%>Return an array containing the entire map (array)";$funclist[2692]="yp_err_string";$funcdest[2692]="yp_err_string(void)<&%>Returns the error string associated with the previous operation (string)";$funclist[2693]="yp_errno";$funcdest[2693]="yp_errno(void)<&%>Returns the error code of the previous operation (int)";$funclist[2694]="yp_first";$funcdest[2694]="yp_first(string domain, string map)<&%>Returns the first key-value pair from the named map (array)";$funclist[2695]="yp_get_default_domain";$funcdest[2695]="yp_get_default_domain(void)<&%>Fetches the machine's default NIS domain (int)";$funclist[2696]="yp_master";$funcdest[2696]="yp_master(string domain, string map)<&%>Returns the machine name of the master NIS server for a map (string)";$funclist[2697]="yp_match";$funcdest[2697]="yp_match(string domain, string map, string key)<&%>Returns the matched line (string)";$funclist[2698]="yp_next";$funcdest[2698]="yp_next(string domain, string map, string key)<&%>Returns the next key-value pair in the named map. (array)";$funclist[2699]="yp_order";$funcdest[2699]="yp_order(string domain, string map)<&%>Returns the order number for a map (int)";$funclist[2700]="zend_logo_guid";$funcdest[2700]="zend_logo_guid(void)<&%>Gets the zend guid (string)";$funclist[2701]="zend_version";$funcdest[2701]="zend_version(void)<&%>Gets the version of the current Zend engine (string)";$funclist[2702]="zip_close";$funcdest[2702]="zip_close(resource zip)<&%>Close a Zip File Archive (void)";$funclist[2703]="zip_entry_close";$funcdest[2703]="zip_entry_close(resource zip_entry)<&%>Close a Directory Entry (void)";$funclist[2704]="zip_entry_compressedsize";$funcdest[2704]="zip_entry_compressedsize(resource zip_entry)<&%>Retrieve the Compressed Size of a Directory Entry (int)";$funclist[2705]="zip_entry_compressionmethod";$funcdest[2705]="zip_entry_compressionmethod(resource zip_entry)<&%>Retrieve the Compression Method of a Directory Entry (string)";$funclist[2706]="zip_entry_filesize";$funcdest[2706]="zip_entry_filesize(resource zip_entry)<&%>Retrieve the Actual File Size of a Directory Entry (int)";$funclist[2707]="zip_entry_name";$funcdest[2707]="zip_entry_name(resource zip_entry)<&%>Retrieve the Name of a Directory Entry (string)";$funclist[2708]="zip_entry_open";$funcdest[2708]="zip_entry_open(resource zip, resource zip_entry [, string mode])<&%>Open a Directory Entry for Reading (bool)";$funclist[2709]="zip_entry_read";$funcdest[2709]="zip_entry_read(resource zip_entry [, int length])<&%>Read From an Open Directory Entry (string)";$funclist[2710]="zip_open";$funcdest[2710]="zip_open(string filename)<&%>Open a Zip File Archive (resource)";$funclist[2711]="zip_read";$funcdest[2711]="zip_read(resource zip)<&%>Read Next Entry in a Zip File Archive (resource)";
?>